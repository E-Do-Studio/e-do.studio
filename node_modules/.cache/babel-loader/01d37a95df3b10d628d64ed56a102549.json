{"ast":null,"code":"var __defProp = Object.defineProperty;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n  return value;\n};\n\nimport { Pass } from \"./Pass.js\";\nimport { Color } from \"three\";\n\nclass ClearPass extends Pass {\n  constructor(clearColor, clearAlpha) {\n    super();\n\n    __publicField(this, \"clearColor\");\n\n    __publicField(this, \"clearAlpha\");\n\n    __publicField(this, \"_oldClearColor\");\n\n    this.needsSwap = false;\n    this.clearColor = clearColor !== void 0 ? clearColor : 0;\n    this.clearAlpha = clearAlpha !== void 0 ? clearAlpha : 0;\n    this._oldClearColor = new Color();\n  }\n\n  render(renderer, writeBuffer, readBuffer) {\n    let oldClearAlpha;\n\n    if (this.clearColor) {\n      renderer.getClearColor(this._oldClearColor);\n      oldClearAlpha = renderer.getClearAlpha();\n      renderer.setClearColor(this.clearColor, this.clearAlpha);\n    }\n\n    renderer.setRenderTarget(this.renderToScreen ? null : readBuffer);\n    renderer.clear();\n\n    if (this.clearColor) {\n      renderer.setClearColor(this._oldClearColor, oldClearAlpha);\n    }\n  }\n\n}\n\nexport { ClearPass };","map":{"version":3,"sources":["/Users/theodaguier/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/three-stdlib/postprocessing/ClearPass.js"],"names":["__defProp","Object","defineProperty","__defNormalProp","obj","key","value","enumerable","configurable","writable","__publicField","Pass","Color","ClearPass","constructor","clearColor","clearAlpha","needsSwap","_oldClearColor","render","renderer","writeBuffer","readBuffer","oldClearAlpha","getClearColor","getClearAlpha","setClearColor","setRenderTarget","renderToScreen","clear"],"mappings":"AAAA,IAAIA,SAAS,GAAGC,MAAM,CAACC,cAAvB;;AACA,IAAIC,eAAe,GAAG,CAACC,GAAD,EAAMC,GAAN,EAAWC,KAAX,KAAqBD,GAAG,IAAID,GAAP,GAAaJ,SAAS,CAACI,GAAD,EAAMC,GAAN,EAAW;AAAEE,EAAAA,UAAU,EAAE,IAAd;AAAoBC,EAAAA,YAAY,EAAE,IAAlC;AAAwCC,EAAAA,QAAQ,EAAE,IAAlD;AAAwDH,EAAAA;AAAxD,CAAX,CAAtB,GAAoGF,GAAG,CAACC,GAAD,CAAH,GAAWC,KAA1J;;AACA,IAAII,aAAa,GAAG,CAACN,GAAD,EAAMC,GAAN,EAAWC,KAAX,KAAqB;AACvCH,EAAAA,eAAe,CAACC,GAAD,EAAM,OAAOC,GAAP,KAAe,QAAf,GAA0BA,GAAG,GAAG,EAAhC,GAAqCA,GAA3C,EAAgDC,KAAhD,CAAf;;AACA,SAAOA,KAAP;AACD,CAHD;;AAIA,SAASK,IAAT,QAAqB,WAArB;AACA,SAASC,KAAT,QAAsB,OAAtB;;AACA,MAAMC,SAAN,SAAwBF,IAAxB,CAA6B;AAC3BG,EAAAA,WAAW,CAACC,UAAD,EAAaC,UAAb,EAAyB;AAClC;;AACAN,IAAAA,aAAa,CAAC,IAAD,EAAO,YAAP,CAAb;;AACAA,IAAAA,aAAa,CAAC,IAAD,EAAO,YAAP,CAAb;;AACAA,IAAAA,aAAa,CAAC,IAAD,EAAO,gBAAP,CAAb;;AACA,SAAKO,SAAL,GAAiB,KAAjB;AACA,SAAKF,UAAL,GAAkBA,UAAU,KAAK,KAAK,CAApB,GAAwBA,UAAxB,GAAqC,CAAvD;AACA,SAAKC,UAAL,GAAkBA,UAAU,KAAK,KAAK,CAApB,GAAwBA,UAAxB,GAAqC,CAAvD;AACA,SAAKE,cAAL,GAAsB,IAAIN,KAAJ,EAAtB;AACD;;AACDO,EAAAA,MAAM,CAACC,QAAD,EAAWC,WAAX,EAAwBC,UAAxB,EAAoC;AACxC,QAAIC,aAAJ;;AACA,QAAI,KAAKR,UAAT,EAAqB;AACnBK,MAAAA,QAAQ,CAACI,aAAT,CAAuB,KAAKN,cAA5B;AACAK,MAAAA,aAAa,GAAGH,QAAQ,CAACK,aAAT,EAAhB;AACAL,MAAAA,QAAQ,CAACM,aAAT,CAAuB,KAAKX,UAA5B,EAAwC,KAAKC,UAA7C;AACD;;AACDI,IAAAA,QAAQ,CAACO,eAAT,CAAyB,KAAKC,cAAL,GAAsB,IAAtB,GAA6BN,UAAtD;AACAF,IAAAA,QAAQ,CAACS,KAAT;;AACA,QAAI,KAAKd,UAAT,EAAqB;AACnBK,MAAAA,QAAQ,CAACM,aAAT,CAAuB,KAAKR,cAA5B,EAA4CK,aAA5C;AACD;AACF;;AAvB0B;;AAyB7B,SACEV,SADF","sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { Pass } from \"./Pass.js\";\nimport { Color } from \"three\";\nclass ClearPass extends Pass {\n  constructor(clearColor, clearAlpha) {\n    super();\n    __publicField(this, \"clearColor\");\n    __publicField(this, \"clearAlpha\");\n    __publicField(this, \"_oldClearColor\");\n    this.needsSwap = false;\n    this.clearColor = clearColor !== void 0 ? clearColor : 0;\n    this.clearAlpha = clearAlpha !== void 0 ? clearAlpha : 0;\n    this._oldClearColor = new Color();\n  }\n  render(renderer, writeBuffer, readBuffer) {\n    let oldClearAlpha;\n    if (this.clearColor) {\n      renderer.getClearColor(this._oldClearColor);\n      oldClearAlpha = renderer.getClearAlpha();\n      renderer.setClearColor(this.clearColor, this.clearAlpha);\n    }\n    renderer.setRenderTarget(this.renderToScreen ? null : readBuffer);\n    renderer.clear();\n    if (this.clearColor) {\n      renderer.setClearColor(this._oldClearColor, oldClearAlpha);\n    }\n  }\n}\nexport {\n  ClearPass\n};\n"]},"metadata":{},"sourceType":"module"}