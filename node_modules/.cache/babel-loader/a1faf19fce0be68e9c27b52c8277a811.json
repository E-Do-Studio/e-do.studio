{"ast":null,"code":"import _classCallCheck from \"/Users/theodaguier/_workdir/dev/pro/e-do/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/theodaguier/_workdir/dev/pro/e-do/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/Users/theodaguier/_workdir/dev/pro/e-do/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/theodaguier/_workdir/dev/pro/e-do/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/theodaguier/_workdir/dev/pro/e-do/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/theodaguier/_workdir/dev/pro/e-do/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { LineSegmentsGeometry } from \"./LineSegmentsGeometry.js\";\n\nvar LineGeometry = /*#__PURE__*/function (_LineSegmentsGeometry) {\n  _inherits(LineGeometry, _LineSegmentsGeometry);\n\n  var _super = _createSuper(LineGeometry);\n\n  function LineGeometry() {\n    var _this;\n\n    _classCallCheck(this, LineGeometry);\n\n    _this = _super.call(this);\n    _this.isLineGeometry = true;\n    _this.type = \"LineGeometry\";\n    return _this;\n  }\n\n  _createClass(LineGeometry, [{\n    key: \"setPositions\",\n    value: function setPositions(array) {\n      var length = array.length - 3;\n      var points = new Float32Array(2 * length);\n\n      for (var i = 0; i < length; i += 3) {\n        points[2 * i] = array[i];\n        points[2 * i + 1] = array[i + 1];\n        points[2 * i + 2] = array[i + 2];\n        points[2 * i + 3] = array[i + 3];\n        points[2 * i + 4] = array[i + 4];\n        points[2 * i + 5] = array[i + 5];\n      }\n\n      _get(_getPrototypeOf(LineGeometry.prototype), \"setPositions\", this).call(this, points);\n\n      return this;\n    }\n  }, {\n    key: \"setColors\",\n    value: function setColors(array) {\n      var length = array.length - 3;\n      var colors = new Float32Array(2 * length);\n\n      for (var i = 0; i < length; i += 3) {\n        colors[2 * i] = array[i];\n        colors[2 * i + 1] = array[i + 1];\n        colors[2 * i + 2] = array[i + 2];\n        colors[2 * i + 3] = array[i + 3];\n        colors[2 * i + 4] = array[i + 4];\n        colors[2 * i + 5] = array[i + 5];\n      }\n\n      _get(_getPrototypeOf(LineGeometry.prototype), \"setColors\", this).call(this, colors);\n\n      return this;\n    }\n  }, {\n    key: \"fromLine\",\n    value: function fromLine(line) {\n      var geometry = line.geometry;\n      this.setPositions(geometry.attributes.position.array);\n      return this;\n    }\n  }]);\n\n  return LineGeometry;\n}(LineSegmentsGeometry);\n\nexport { LineGeometry };","map":{"version":3,"sources":["/Users/theodaguier/_workdir/dev/pro/e-do/E-Do-Studio/node_modules/three-stdlib/lines/LineGeometry.js"],"names":["LineSegmentsGeometry","LineGeometry","isLineGeometry","type","array","length","points","Float32Array","i","colors","line","geometry","setPositions","attributes","position"],"mappings":";;;;;;AAAA,SAASA,oBAAT,QAAqC,2BAArC;;IACMC,Y;;;;;AACJ,0BAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,cAAL,GAAsB,IAAtB;AACA,UAAKC,IAAL,GAAY,cAAZ;AAHY;AAIb;;;;WACD,sBAAaC,KAAb,EAAoB;AAClB,UAAMC,MAAM,GAAGD,KAAK,CAACC,MAAN,GAAe,CAA9B;AACA,UAAMC,MAAM,GAAG,IAAIC,YAAJ,CAAiB,IAAIF,MAArB,CAAf;;AACA,WAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,MAApB,EAA4BG,CAAC,IAAI,CAAjC,EAAoC;AAClCF,QAAAA,MAAM,CAAC,IAAIE,CAAL,CAAN,GAAgBJ,KAAK,CAACI,CAAD,CAArB;AACAF,QAAAA,MAAM,CAAC,IAAIE,CAAJ,GAAQ,CAAT,CAAN,GAAoBJ,KAAK,CAACI,CAAC,GAAG,CAAL,CAAzB;AACAF,QAAAA,MAAM,CAAC,IAAIE,CAAJ,GAAQ,CAAT,CAAN,GAAoBJ,KAAK,CAACI,CAAC,GAAG,CAAL,CAAzB;AACAF,QAAAA,MAAM,CAAC,IAAIE,CAAJ,GAAQ,CAAT,CAAN,GAAoBJ,KAAK,CAACI,CAAC,GAAG,CAAL,CAAzB;AACAF,QAAAA,MAAM,CAAC,IAAIE,CAAJ,GAAQ,CAAT,CAAN,GAAoBJ,KAAK,CAACI,CAAC,GAAG,CAAL,CAAzB;AACAF,QAAAA,MAAM,CAAC,IAAIE,CAAJ,GAAQ,CAAT,CAAN,GAAoBJ,KAAK,CAACI,CAAC,GAAG,CAAL,CAAzB;AACD;;AACD,qFAAmBF,MAAnB;;AACA,aAAO,IAAP;AACD;;;WACD,mBAAUF,KAAV,EAAiB;AACf,UAAMC,MAAM,GAAGD,KAAK,CAACC,MAAN,GAAe,CAA9B;AACA,UAAMI,MAAM,GAAG,IAAIF,YAAJ,CAAiB,IAAIF,MAArB,CAAf;;AACA,WAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,MAApB,EAA4BG,CAAC,IAAI,CAAjC,EAAoC;AAClCC,QAAAA,MAAM,CAAC,IAAID,CAAL,CAAN,GAAgBJ,KAAK,CAACI,CAAD,CAArB;AACAC,QAAAA,MAAM,CAAC,IAAID,CAAJ,GAAQ,CAAT,CAAN,GAAoBJ,KAAK,CAACI,CAAC,GAAG,CAAL,CAAzB;AACAC,QAAAA,MAAM,CAAC,IAAID,CAAJ,GAAQ,CAAT,CAAN,GAAoBJ,KAAK,CAACI,CAAC,GAAG,CAAL,CAAzB;AACAC,QAAAA,MAAM,CAAC,IAAID,CAAJ,GAAQ,CAAT,CAAN,GAAoBJ,KAAK,CAACI,CAAC,GAAG,CAAL,CAAzB;AACAC,QAAAA,MAAM,CAAC,IAAID,CAAJ,GAAQ,CAAT,CAAN,GAAoBJ,KAAK,CAACI,CAAC,GAAG,CAAL,CAAzB;AACAC,QAAAA,MAAM,CAAC,IAAID,CAAJ,GAAQ,CAAT,CAAN,GAAoBJ,KAAK,CAACI,CAAC,GAAG,CAAL,CAAzB;AACD;;AACD,kFAAgBC,MAAhB;;AACA,aAAO,IAAP;AACD;;;WACD,kBAASC,IAAT,EAAe;AACb,UAAMC,QAAQ,GAAGD,IAAI,CAACC,QAAtB;AACA,WAAKC,YAAL,CAAkBD,QAAQ,CAACE,UAAT,CAAoBC,QAApB,CAA6BV,KAA/C;AACA,aAAO,IAAP;AACD;;;;EAtCwBJ,oB;;AAwC3B,SACEC,YADF","sourcesContent":["import { LineSegmentsGeometry } from \"./LineSegmentsGeometry.js\";\nclass LineGeometry extends LineSegmentsGeometry {\n  constructor() {\n    super();\n    this.isLineGeometry = true;\n    this.type = \"LineGeometry\";\n  }\n  setPositions(array) {\n    const length = array.length - 3;\n    const points = new Float32Array(2 * length);\n    for (let i = 0; i < length; i += 3) {\n      points[2 * i] = array[i];\n      points[2 * i + 1] = array[i + 1];\n      points[2 * i + 2] = array[i + 2];\n      points[2 * i + 3] = array[i + 3];\n      points[2 * i + 4] = array[i + 4];\n      points[2 * i + 5] = array[i + 5];\n    }\n    super.setPositions(points);\n    return this;\n  }\n  setColors(array) {\n    const length = array.length - 3;\n    const colors = new Float32Array(2 * length);\n    for (let i = 0; i < length; i += 3) {\n      colors[2 * i] = array[i];\n      colors[2 * i + 1] = array[i + 1];\n      colors[2 * i + 2] = array[i + 2];\n      colors[2 * i + 3] = array[i + 3];\n      colors[2 * i + 4] = array[i + 4];\n      colors[2 * i + 5] = array[i + 5];\n    }\n    super.setColors(colors);\n    return this;\n  }\n  fromLine(line) {\n    const geometry = line.geometry;\n    this.setPositions(geometry.attributes.position.array);\n    return this;\n  }\n}\nexport {\n  LineGeometry\n};\n"]},"metadata":{},"sourceType":"module"}