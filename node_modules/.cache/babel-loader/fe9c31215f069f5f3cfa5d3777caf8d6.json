{"ast":null,"code":"function init() {\n  const _p2 = [151, 160, 137, 91, 90, 15, 131, 13, 201, 95, 96, 53, 194, 233, 7, 225, 140, 36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10, 23, 190, 6, 148, 247, 120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57, 177, 33, 88, 237, 149, 56, 87, 174, 20, 125, 136, 171, 168, 68, 175, 74, 165, 71, 134, 139, 48, 27, 166, 77, 146, 158, 231, 83, 111, 229, 122, 60, 211, 133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244, 102, 143, 54, 65, 25, 63, 161, 1, 216, 80, 73, 209, 76, 132, 187, 208, 89, 18, 169, 200, 196, 135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3, 64, 52, 217, 226, 250, 124, 123, 5, 202, 38, 147, 118, 126, 255, 82, 85, 212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42, 223, 183, 170, 213, 119, 248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167, 43, 172, 9, 129, 22, 39, 253, 19, 98, 108, 110, 79, 113, 224, 232, 178, 185, 112, 104, 218, 246, 97, 228, 251, 34, 242, 193, 238, 210, 144, 12, 191, 179, 162, 241, 81, 51, 145, 235, 249, 14, 239, 107, 49, 192, 214, 31, 181, 199, 106, 157, 184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150, 254, 138, 236, 205, 93, 222, 114, 67, 29, 24, 72, 243, 141, 128, 195, 78, 66, 215, 61, 156, 180];\n\n  for (let i = 0; i < 256; i++) {\n    _p2[256 + i] = _p2[i];\n  }\n\n  return _p2;\n}\n\nconst _p = /* @__PURE__ */init();\n\nfunction fade(t) {\n  return t * t * t * (t * (t * 6 - 15) + 10);\n}\n\nfunction lerp(t, a, b) {\n  return a + t * (b - a);\n}\n\nfunction grad(hash, x, y, z) {\n  const h = hash & 15;\n  const u = h < 8 ? x : y,\n        v = h < 4 ? y : h == 12 || h == 14 ? x : z;\n  return ((h & 1) == 0 ? u : -u) + ((h & 2) == 0 ? v : -v);\n}\n\nclass ImprovedNoise {\n  noise(x, y, z) {\n    const floorX = Math.floor(x),\n          floorY = Math.floor(y),\n          floorZ = Math.floor(z);\n    const X = floorX & 255,\n          Y = floorY & 255,\n          Z = floorZ & 255;\n    x -= floorX;\n    y -= floorY;\n    z -= floorZ;\n    const xMinus1 = x - 1,\n          yMinus1 = y - 1,\n          zMinus1 = z - 1;\n    const u = fade(x),\n          v = fade(y),\n          w = fade(z);\n    const A = _p[X] + Y,\n          AA = _p[A] + Z,\n          AB = _p[A + 1] + Z,\n          B = _p[X + 1] + Y,\n          BA = _p[B] + Z,\n          BB = _p[B + 1] + Z;\n    return lerp(w, lerp(v, lerp(u, grad(_p[AA], x, y, z), grad(_p[BA], xMinus1, y, z)), lerp(u, grad(_p[AB], x, yMinus1, z), grad(_p[BB], xMinus1, yMinus1, z))), lerp(v, lerp(u, grad(_p[AA + 1], x, y, zMinus1), grad(_p[BA + 1], xMinus1, y, zMinus1)), lerp(u, grad(_p[AB + 1], x, yMinus1, zMinus1), grad(_p[BB + 1], xMinus1, yMinus1, zMinus1))));\n  }\n\n}\n\nexport { ImprovedNoise };","map":{"version":3,"sources":["/Users/theodaguier/Developer/old/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/three-stdlib/math/ImprovedNoise.js"],"names":["init","_p2","i","_p","fade","t","lerp","a","b","grad","hash","x","y","z","h","u","v","ImprovedNoise","noise","floorX","Math","floor","floorY","floorZ","X","Y","Z","xMinus1","yMinus1","zMinus1","w","A","AA","AB","B","BA","BB"],"mappings":"AAAA,SAASA,IAAT,GAAgB;AACd,QAAMC,GAAG,GAAG,CACV,GADU,EAEV,GAFU,EAGV,GAHU,EAIV,EAJU,EAKV,EALU,EAMV,EANU,EAOV,GAPU,EAQV,EARU,EASV,GATU,EAUV,EAVU,EAWV,EAXU,EAYV,EAZU,EAaV,GAbU,EAcV,GAdU,EAeV,CAfU,EAgBV,GAhBU,EAiBV,GAjBU,EAkBV,EAlBU,EAmBV,GAnBU,EAoBV,EApBU,EAqBV,EArBU,EAsBV,GAtBU,EAuBV,CAvBU,EAwBV,EAxBU,EAyBV,EAzBU,EA0BV,GA1BU,EA2BV,EA3BU,EA4BV,EA5BU,EA6BV,EA7BU,EA8BV,GA9BU,EA+BV,CA/BU,EAgCV,GAhCU,EAiCV,GAjCU,EAkCV,GAlCU,EAmCV,GAnCU,EAoCV,EApCU,EAqCV,CArCU,EAsCV,EAtCU,EAuCV,GAvCU,EAwCV,EAxCU,EAyCV,EAzCU,EA0CV,GA1CU,EA2CV,GA3CU,EA4CV,GA5CU,EA6CV,GA7CU,EA8CV,EA9CU,EA+CV,EA/CU,EAgDV,EAhDU,EAiDV,EAjDU,EAkDV,GAlDU,EAmDV,EAnDU,EAoDV,EApDU,EAqDV,GArDU,EAsDV,GAtDU,EAuDV,EAvDU,EAwDV,EAxDU,EAyDV,GAzDU,EA0DV,EA1DU,EA2DV,GA3DU,EA4DV,GA5DU,EA6DV,GA7DU,EA8DV,GA9DU,EA+DV,EA/DU,EAgEV,GAhEU,EAiEV,EAjEU,EAkEV,GAlEU,EAmEV,EAnEU,EAoEV,GApEU,EAqEV,GArEU,EAsEV,EAtEU,EAuEV,EAvEU,EAwEV,GAxEU,EAyEV,EAzEU,EA0EV,GA1EU,EA2EV,GA3EU,EA4EV,GA5EU,EA6EV,EA7EU,EA8EV,GA9EU,EA+EV,GA/EU,EAgFV,GAhFU,EAiFV,EAjFU,EAkFV,GAlFU,EAmFV,GAnFU,EAoFV,GApFU,EAqFV,GArFU,EAsFV,GAtFU,EAuFV,EAvFU,EAwFV,EAxFU,EAyFV,EAzFU,EA0FV,EA1FU,EA2FV,GA3FU,EA4FV,EA5FU,EA6FV,GA7FU,EA8FV,GA9FU,EA+FV,GA/FU,EAgGV,EAhGU,EAiGV,EAjGU,EAkGV,EAlGU,EAmGV,EAnGU,EAoGV,GApGU,EAqGV,CArGU,EAsGV,GAtGU,EAuGV,EAvGU,EAwGV,EAxGU,EAyGV,GAzGU,EA0GV,EA1GU,EA2GV,GA3GU,EA4GV,GA5GU,EA6GV,GA7GU,EA8GV,EA9GU,EA+GV,EA/GU,EAgHV,GAhHU,EAiHV,GAjHU,EAkHV,GAlHU,EAmHV,GAnHU,EAoHV,GApHU,EAqHV,GArHU,EAsHV,GAtHU,EAuHV,GAvHU,EAwHV,EAxHU,EAyHV,GAzHU,EA0HV,GA1HU,EA2HV,GA3HU,EA4HV,GA5HU,EA6HV,GA7HU,EA8HV,GA9HU,EA+HV,CA/HU,EAgIV,EAhIU,EAiIV,EAjIU,EAkIV,GAlIU,EAmIV,GAnIU,EAoIV,GApIU,EAqIV,GArIU,EAsIV,GAtIU,EAuIV,CAvIU,EAwIV,GAxIU,EAyIV,EAzIU,EA0IV,GA1IU,EA2IV,GA3IU,EA4IV,GA5IU,EA6IV,GA7IU,EA8IV,EA9IU,EA+IV,EA/IU,EAgJV,GAhJU,EAiJV,GAjJU,EAkJV,GAlJU,EAmJV,EAnJU,EAoJV,GApJU,EAqJV,EArJU,EAsJV,EAtJU,EAuJV,EAvJU,EAwJV,EAxJU,EAyJV,GAzJU,EA0JV,GA1JU,EA2JV,EA3JU,EA4JV,EA5JU,EA6JV,GA7JU,EA8JV,GA9JU,EA+JV,GA/JU,EAgKV,GAhKU,EAiKV,GAjKU,EAkKV,GAlKU,EAmKV,GAnKU,EAoKV,CApKU,EAqKV,EArKU,EAsKV,GAtKU,EAuKV,GAvKU,EAwKV,EAxKU,EAyKV,GAzKU,EA0KV,GA1KU,EA2KV,GA3KU,EA4KV,GA5KU,EA6KV,GA7KU,EA8KV,EA9KU,EA+KV,GA/KU,EAgLV,CAhLU,EAiLV,GAjLU,EAkLV,EAlLU,EAmLV,EAnLU,EAoLV,GApLU,EAqLV,EArLU,EAsLV,EAtLU,EAuLV,GAvLU,EAwLV,GAxLU,EAyLV,EAzLU,EA0LV,GA1LU,EA2LV,GA3LU,EA4LV,GA5LU,EA6LV,GA7LU,EA8LV,GA9LU,EA+LV,GA/LU,EAgMV,GAhMU,EAiMV,GAjMU,EAkMV,GAlMU,EAmMV,EAnMU,EAoMV,GApMU,EAqMV,GArMU,EAsMV,EAtMU,EAuMV,GAvMU,EAwMV,GAxMU,EAyMV,GAzMU,EA0MV,GA1MU,EA2MV,GA3MU,EA4MV,EA5MU,EA6MV,GA7MU,EA8MV,GA9MU,EA+MV,GA/MU,EAgNV,GAhNU,EAiNV,EAjNU,EAkNV,EAlNU,EAmNV,GAnNU,EAoNV,GApNU,EAqNV,GArNU,EAsNV,EAtNU,EAuNV,GAvNU,EAwNV,GAxNU,EAyNV,EAzNU,EA0NV,GA1NU,EA2NV,GA3NU,EA4NV,EA5NU,EA6NV,GA7NU,EA8NV,GA9NU,EA+NV,GA/NU,EAgOV,GAhOU,EAiOV,GAjOU,EAkOV,EAlOU,EAmOV,GAnOU,EAoOV,GApOU,EAqOV,GArOU,EAsOV,GAtOU,EAuOV,EAvOU,EAwOV,EAxOU,EAyOV,GAzOU,EA0OV,CA1OU,EA2OV,GA3OU,EA4OV,GA5OU,EA6OV,GA7OU,EA8OV,GA9OU,EA+OV,GA/OU,EAgPV,EAhPU,EAiPV,GAjPU,EAkPV,GAlPU,EAmPV,EAnPU,EAoPV,EApPU,EAqPV,EArPU,EAsPV,EAtPU,EAuPV,GAvPU,EAwPV,GAxPU,EAyPV,GAzPU,EA0PV,GA1PU,EA2PV,EA3PU,EA4PV,EA5PU,EA6PV,GA7PU,EA8PV,EA9PU,EA+PV,GA/PU,EAgQV,GAhQU,CAAZ;;AAkQA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAC5BD,IAAAA,GAAG,CAAC,MAAMC,CAAP,CAAH,GAAeD,GAAG,CAACC,CAAD,CAAlB;AACD;;AACD,SAAOD,GAAP;AACD;;AACD,MAAME,EAAE,GAAG,eAAgBH,IAAI,EAA/B;;AACA,SAASI,IAAT,CAAcC,CAAd,EAAiB;AACf,SAAOA,CAAC,GAAGA,CAAJ,GAAQA,CAAR,IAAaA,CAAC,IAAIA,CAAC,GAAG,CAAJ,GAAQ,EAAZ,CAAD,GAAmB,EAAhC,CAAP;AACD;;AACD,SAASC,IAAT,CAAcD,CAAd,EAAiBE,CAAjB,EAAoBC,CAApB,EAAuB;AACrB,SAAOD,CAAC,GAAGF,CAAC,IAAIG,CAAC,GAAGD,CAAR,CAAZ;AACD;;AACD,SAASE,IAAT,CAAcC,IAAd,EAAoBC,CAApB,EAAuBC,CAAvB,EAA0BC,CAA1B,EAA6B;AAC3B,QAAMC,CAAC,GAAGJ,IAAI,GAAG,EAAjB;AACA,QAAMK,CAAC,GAAGD,CAAC,GAAG,CAAJ,GAAQH,CAAR,GAAYC,CAAtB;AAAA,QAAyBI,CAAC,GAAGF,CAAC,GAAG,CAAJ,GAAQF,CAAR,GAAYE,CAAC,IAAI,EAAL,IAAWA,CAAC,IAAI,EAAhB,GAAqBH,CAArB,GAAyBE,CAAlE;AACA,SAAO,CAAC,CAACC,CAAC,GAAG,CAAL,KAAW,CAAX,GAAeC,CAAf,GAAmB,CAACA,CAArB,KAA2B,CAACD,CAAC,GAAG,CAAL,KAAW,CAAX,GAAeE,CAAf,GAAmB,CAACA,CAA/C,CAAP;AACD;;AACD,MAAMC,aAAN,CAAoB;AAClBC,EAAAA,KAAK,CAACP,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAU;AACb,UAAMM,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWV,CAAX,CAAf;AAAA,UAA8BW,MAAM,GAAGF,IAAI,CAACC,KAAL,CAAWT,CAAX,CAAvC;AAAA,UAAsDW,MAAM,GAAGH,IAAI,CAACC,KAAL,CAAWR,CAAX,CAA/D;AACA,UAAMW,CAAC,GAAGL,MAAM,GAAG,GAAnB;AAAA,UAAwBM,CAAC,GAAGH,MAAM,GAAG,GAArC;AAAA,UAA0CI,CAAC,GAAGH,MAAM,GAAG,GAAvD;AACAZ,IAAAA,CAAC,IAAIQ,MAAL;AACAP,IAAAA,CAAC,IAAIU,MAAL;AACAT,IAAAA,CAAC,IAAIU,MAAL;AACA,UAAMI,OAAO,GAAGhB,CAAC,GAAG,CAApB;AAAA,UAAuBiB,OAAO,GAAGhB,CAAC,GAAG,CAArC;AAAA,UAAwCiB,OAAO,GAAGhB,CAAC,GAAG,CAAtD;AACA,UAAME,CAAC,GAAGX,IAAI,CAACO,CAAD,CAAd;AAAA,UAAmBK,CAAC,GAAGZ,IAAI,CAACQ,CAAD,CAA3B;AAAA,UAAgCkB,CAAC,GAAG1B,IAAI,CAACS,CAAD,CAAxC;AACA,UAAMkB,CAAC,GAAG5B,EAAE,CAACqB,CAAD,CAAF,GAAQC,CAAlB;AAAA,UAAqBO,EAAE,GAAG7B,EAAE,CAAC4B,CAAD,CAAF,GAAQL,CAAlC;AAAA,UAAqCO,EAAE,GAAG9B,EAAE,CAAC4B,CAAC,GAAG,CAAL,CAAF,GAAYL,CAAtD;AAAA,UAAyDQ,CAAC,GAAG/B,EAAE,CAACqB,CAAC,GAAG,CAAL,CAAF,GAAYC,CAAzE;AAAA,UAA4EU,EAAE,GAAGhC,EAAE,CAAC+B,CAAD,CAAF,GAAQR,CAAzF;AAAA,UAA4FU,EAAE,GAAGjC,EAAE,CAAC+B,CAAC,GAAG,CAAL,CAAF,GAAYR,CAA7G;AACA,WAAOpB,IAAI,CACTwB,CADS,EAETxB,IAAI,CACFU,CADE,EAEFV,IAAI,CAACS,CAAD,EAAIN,IAAI,CAACN,EAAE,CAAC6B,EAAD,CAAH,EAASrB,CAAT,EAAYC,CAAZ,EAAeC,CAAf,CAAR,EAA2BJ,IAAI,CAACN,EAAE,CAACgC,EAAD,CAAH,EAASR,OAAT,EAAkBf,CAAlB,EAAqBC,CAArB,CAA/B,CAFF,EAGFP,IAAI,CAACS,CAAD,EAAIN,IAAI,CAACN,EAAE,CAAC8B,EAAD,CAAH,EAAStB,CAAT,EAAYiB,OAAZ,EAAqBf,CAArB,CAAR,EAAiCJ,IAAI,CAACN,EAAE,CAACiC,EAAD,CAAH,EAAST,OAAT,EAAkBC,OAAlB,EAA2Bf,CAA3B,CAArC,CAHF,CAFK,EAOTP,IAAI,CACFU,CADE,EAEFV,IAAI,CAACS,CAAD,EAAIN,IAAI,CAACN,EAAE,CAAC6B,EAAE,GAAG,CAAN,CAAH,EAAarB,CAAb,EAAgBC,CAAhB,EAAmBiB,OAAnB,CAAR,EAAqCpB,IAAI,CAACN,EAAE,CAACgC,EAAE,GAAG,CAAN,CAAH,EAAaR,OAAb,EAAsBf,CAAtB,EAAyBiB,OAAzB,CAAzC,CAFF,EAGFvB,IAAI,CAACS,CAAD,EAAIN,IAAI,CAACN,EAAE,CAAC8B,EAAE,GAAG,CAAN,CAAH,EAAatB,CAAb,EAAgBiB,OAAhB,EAAyBC,OAAzB,CAAR,EAA2CpB,IAAI,CAACN,EAAE,CAACiC,EAAE,GAAG,CAAN,CAAH,EAAaT,OAAb,EAAsBC,OAAtB,EAA+BC,OAA/B,CAA/C,CAHF,CAPK,CAAX;AAaD;;AAvBiB;;AAyBpB,SACEZ,aADF","sourcesContent":["function init() {\n  const _p2 = [\n    151,\n    160,\n    137,\n    91,\n    90,\n    15,\n    131,\n    13,\n    201,\n    95,\n    96,\n    53,\n    194,\n    233,\n    7,\n    225,\n    140,\n    36,\n    103,\n    30,\n    69,\n    142,\n    8,\n    99,\n    37,\n    240,\n    21,\n    10,\n    23,\n    190,\n    6,\n    148,\n    247,\n    120,\n    234,\n    75,\n    0,\n    26,\n    197,\n    62,\n    94,\n    252,\n    219,\n    203,\n    117,\n    35,\n    11,\n    32,\n    57,\n    177,\n    33,\n    88,\n    237,\n    149,\n    56,\n    87,\n    174,\n    20,\n    125,\n    136,\n    171,\n    168,\n    68,\n    175,\n    74,\n    165,\n    71,\n    134,\n    139,\n    48,\n    27,\n    166,\n    77,\n    146,\n    158,\n    231,\n    83,\n    111,\n    229,\n    122,\n    60,\n    211,\n    133,\n    230,\n    220,\n    105,\n    92,\n    41,\n    55,\n    46,\n    245,\n    40,\n    244,\n    102,\n    143,\n    54,\n    65,\n    25,\n    63,\n    161,\n    1,\n    216,\n    80,\n    73,\n    209,\n    76,\n    132,\n    187,\n    208,\n    89,\n    18,\n    169,\n    200,\n    196,\n    135,\n    130,\n    116,\n    188,\n    159,\n    86,\n    164,\n    100,\n    109,\n    198,\n    173,\n    186,\n    3,\n    64,\n    52,\n    217,\n    226,\n    250,\n    124,\n    123,\n    5,\n    202,\n    38,\n    147,\n    118,\n    126,\n    255,\n    82,\n    85,\n    212,\n    207,\n    206,\n    59,\n    227,\n    47,\n    16,\n    58,\n    17,\n    182,\n    189,\n    28,\n    42,\n    223,\n    183,\n    170,\n    213,\n    119,\n    248,\n    152,\n    2,\n    44,\n    154,\n    163,\n    70,\n    221,\n    153,\n    101,\n    155,\n    167,\n    43,\n    172,\n    9,\n    129,\n    22,\n    39,\n    253,\n    19,\n    98,\n    108,\n    110,\n    79,\n    113,\n    224,\n    232,\n    178,\n    185,\n    112,\n    104,\n    218,\n    246,\n    97,\n    228,\n    251,\n    34,\n    242,\n    193,\n    238,\n    210,\n    144,\n    12,\n    191,\n    179,\n    162,\n    241,\n    81,\n    51,\n    145,\n    235,\n    249,\n    14,\n    239,\n    107,\n    49,\n    192,\n    214,\n    31,\n    181,\n    199,\n    106,\n    157,\n    184,\n    84,\n    204,\n    176,\n    115,\n    121,\n    50,\n    45,\n    127,\n    4,\n    150,\n    254,\n    138,\n    236,\n    205,\n    93,\n    222,\n    114,\n    67,\n    29,\n    24,\n    72,\n    243,\n    141,\n    128,\n    195,\n    78,\n    66,\n    215,\n    61,\n    156,\n    180\n  ];\n  for (let i = 0; i < 256; i++) {\n    _p2[256 + i] = _p2[i];\n  }\n  return _p2;\n}\nconst _p = /* @__PURE__ */ init();\nfunction fade(t) {\n  return t * t * t * (t * (t * 6 - 15) + 10);\n}\nfunction lerp(t, a, b) {\n  return a + t * (b - a);\n}\nfunction grad(hash, x, y, z) {\n  const h = hash & 15;\n  const u = h < 8 ? x : y, v = h < 4 ? y : h == 12 || h == 14 ? x : z;\n  return ((h & 1) == 0 ? u : -u) + ((h & 2) == 0 ? v : -v);\n}\nclass ImprovedNoise {\n  noise(x, y, z) {\n    const floorX = Math.floor(x), floorY = Math.floor(y), floorZ = Math.floor(z);\n    const X = floorX & 255, Y = floorY & 255, Z = floorZ & 255;\n    x -= floorX;\n    y -= floorY;\n    z -= floorZ;\n    const xMinus1 = x - 1, yMinus1 = y - 1, zMinus1 = z - 1;\n    const u = fade(x), v = fade(y), w = fade(z);\n    const A = _p[X] + Y, AA = _p[A] + Z, AB = _p[A + 1] + Z, B = _p[X + 1] + Y, BA = _p[B] + Z, BB = _p[B + 1] + Z;\n    return lerp(\n      w,\n      lerp(\n        v,\n        lerp(u, grad(_p[AA], x, y, z), grad(_p[BA], xMinus1, y, z)),\n        lerp(u, grad(_p[AB], x, yMinus1, z), grad(_p[BB], xMinus1, yMinus1, z))\n      ),\n      lerp(\n        v,\n        lerp(u, grad(_p[AA + 1], x, y, zMinus1), grad(_p[BA + 1], xMinus1, y, zMinus1)),\n        lerp(u, grad(_p[AB + 1], x, yMinus1, zMinus1), grad(_p[BB + 1], xMinus1, yMinus1, zMinus1))\n      )\n    );\n  }\n}\nexport {\n  ImprovedNoise\n};\n"]},"metadata":{},"sourceType":"module"}