{"ast":null,"code":"import { PerspectiveCamera, ShaderMaterial, Scene, OrthographicCamera, WebGLRenderTarget, UniformsUtils, Mesh, PlaneGeometry } from \"three\";\nimport { BokehDepthShader, BokehShader2 } from \"../shaders/BokehShader2.js\";\n\nclass CinematicCamera extends PerspectiveCamera {\n  constructor(fov, aspect, near, far) {\n    super(fov, aspect, near, far);\n    this.type = \"CinematicCamera\";\n    this.postprocessing = {\n      enabled: true\n    };\n    this.shaderSettings = {\n      rings: 3,\n      samples: 4\n    };\n    const depthShader = BokehDepthShader;\n    this.materialDepth = new ShaderMaterial({\n      uniforms: depthShader.uniforms,\n      vertexShader: depthShader.vertexShader,\n      fragmentShader: depthShader.fragmentShader\n    });\n    this.materialDepth.uniforms[\"mNear\"].value = near;\n    this.materialDepth.uniforms[\"mFar\"].value = far;\n    this.setLens();\n    this.initPostProcessing();\n  } // providing fnumber and coc(Circle of Confusion) as extra arguments\n\n\n  setLens(focalLength, filmGauge, fNumber, coc) {\n    if (focalLength === void 0) focalLength = 35;\n    if (filmGauge !== void 0) this.filmGauge = filmGauge;\n    this.setFocalLength(focalLength);\n    if (fNumber === void 0) fNumber = 8;\n    if (coc === void 0) coc = 0.019;\n    this.fNumber = fNumber;\n    this.coc = coc;\n    this.aperture = focalLength / this.fNumber;\n    this.hyperFocal = focalLength * focalLength / (this.aperture * this.coc);\n  }\n\n  linearize(depth) {\n    const zfar = this.far;\n    const znear = this.near;\n    return -zfar * znear / (depth * (zfar - znear) - zfar);\n  }\n\n  smoothstep(near, far, depth) {\n    const x = this.saturate((depth - near) / (far - near));\n    return x * x * (3 - 2 * x);\n  }\n\n  saturate(x) {\n    return Math.max(0, Math.min(1, x));\n  } // function for focusing at a distance from the camera\n\n\n  focusAt(focusDistance) {\n    if (focusDistance === void 0) focusDistance = 20;\n    const focalLength = this.getFocalLength();\n    this.focus = focusDistance;\n    this.nearPoint = this.hyperFocal * this.focus / (this.hyperFocal + (this.focus - focalLength));\n    this.farPoint = this.hyperFocal * this.focus / (this.hyperFocal - (this.focus - focalLength));\n    this.depthOfField = this.farPoint - this.nearPoint;\n    if (this.depthOfField < 0) this.depthOfField = 0;\n    this.sdistance = this.smoothstep(this.near, this.far, this.focus);\n    this.ldistance = this.linearize(1 - this.sdistance);\n    this.postprocessing.bokeh_uniforms[\"focalDepth\"].value = this.ldistance;\n  }\n\n  initPostProcessing() {\n    if (this.postprocessing.enabled) {\n      this.postprocessing.scene = new Scene();\n      this.postprocessing.camera = new OrthographicCamera(window.innerWidth / -2, window.innerWidth / 2, window.innerHeight / 2, window.innerHeight / -2, -1e4, 1e4);\n      this.postprocessing.scene.add(this.postprocessing.camera);\n      this.postprocessing.rtTextureDepth = new WebGLRenderTarget(window.innerWidth, window.innerHeight);\n      this.postprocessing.rtTextureColor = new WebGLRenderTarget(window.innerWidth, window.innerHeight);\n      const bokeh_shader = BokehShader2;\n      this.postprocessing.bokeh_uniforms = UniformsUtils.clone(bokeh_shader.uniforms);\n      this.postprocessing.bokeh_uniforms[\"tColor\"].value = this.postprocessing.rtTextureColor.texture;\n      this.postprocessing.bokeh_uniforms[\"tDepth\"].value = this.postprocessing.rtTextureDepth.texture;\n      this.postprocessing.bokeh_uniforms[\"manualdof\"].value = 0;\n      this.postprocessing.bokeh_uniforms[\"shaderFocus\"].value = 0;\n      this.postprocessing.bokeh_uniforms[\"fstop\"].value = 2.8;\n      this.postprocessing.bokeh_uniforms[\"showFocus\"].value = 1;\n      this.postprocessing.bokeh_uniforms[\"focalDepth\"].value = 0.1;\n      this.postprocessing.bokeh_uniforms[\"znear\"].value = this.near;\n      this.postprocessing.bokeh_uniforms[\"zfar\"].value = this.near;\n      this.postprocessing.bokeh_uniforms[\"textureWidth\"].value = window.innerWidth;\n      this.postprocessing.bokeh_uniforms[\"textureHeight\"].value = window.innerHeight;\n      this.postprocessing.materialBokeh = new ShaderMaterial({\n        uniforms: this.postprocessing.bokeh_uniforms,\n        vertexShader: bokeh_shader.vertexShader,\n        fragmentShader: bokeh_shader.fragmentShader,\n        defines: {\n          RINGS: this.shaderSettings.rings,\n          SAMPLES: this.shaderSettings.samples,\n          DEPTH_PACKING: 1\n        }\n      });\n      this.postprocessing.quad = new Mesh(new PlaneGeometry(window.innerWidth, window.innerHeight), this.postprocessing.materialBokeh);\n      this.postprocessing.quad.position.z = -500;\n      this.postprocessing.scene.add(this.postprocessing.quad);\n    }\n  }\n\n  renderCinematic(scene, renderer) {\n    if (this.postprocessing.enabled) {\n      const currentRenderTarget = renderer.getRenderTarget();\n      renderer.clear();\n      scene.overrideMaterial = null;\n      renderer.setRenderTarget(this.postprocessing.rtTextureColor);\n      renderer.clear();\n      renderer.render(scene, this);\n      scene.overrideMaterial = this.materialDepth;\n      renderer.setRenderTarget(this.postprocessing.rtTextureDepth);\n      renderer.clear();\n      renderer.render(scene, this);\n      renderer.setRenderTarget(null);\n      renderer.render(this.postprocessing.scene, this.postprocessing.camera);\n      renderer.setRenderTarget(currentRenderTarget);\n    }\n  }\n\n}\n\nexport { CinematicCamera };","map":{"version":3,"sources":["/Users/theodaguier/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/three-stdlib/cameras/CinematicCamera.js"],"names":["PerspectiveCamera","ShaderMaterial","Scene","OrthographicCamera","WebGLRenderTarget","UniformsUtils","Mesh","PlaneGeometry","BokehDepthShader","BokehShader2","CinematicCamera","constructor","fov","aspect","near","far","type","postprocessing","enabled","shaderSettings","rings","samples","depthShader","materialDepth","uniforms","vertexShader","fragmentShader","value","setLens","initPostProcessing","focalLength","filmGauge","fNumber","coc","setFocalLength","aperture","hyperFocal","linearize","depth","zfar","znear","smoothstep","x","saturate","Math","max","min","focusAt","focusDistance","getFocalLength","focus","nearPoint","farPoint","depthOfField","sdistance","ldistance","bokeh_uniforms","scene","camera","window","innerWidth","innerHeight","add","rtTextureDepth","rtTextureColor","bokeh_shader","clone","texture","materialBokeh","defines","RINGS","SAMPLES","DEPTH_PACKING","quad","position","z","renderCinematic","renderer","currentRenderTarget","getRenderTarget","clear","overrideMaterial","setRenderTarget","render"],"mappings":"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","sourcesContent":["import { PerspectiveCamera, ShaderMaterial, Scene, OrthographicCamera, WebGLRenderTarget, UniformsUtils, Mesh, PlaneGeometry } from \"three\";\nimport { BokehDepthShader, BokehShader2 } from \"../shaders/BokehShader2.js\";\nclass CinematicCamera extends PerspectiveCamera {\n  constructor(fov, aspect, near, far) {\n    super(fov, aspect, near, far);\n    this.type = \"CinematicCamera\";\n    this.postprocessing = { enabled: true };\n    this.shaderSettings = {\n      rings: 3,\n      samples: 4\n    };\n    const depthShader = BokehDepthShader;\n    this.materialDepth = new ShaderMaterial({\n      uniforms: depthShader.uniforms,\n      vertexShader: depthShader.vertexShader,\n      fragmentShader: depthShader.fragmentShader\n    });\n    this.materialDepth.uniforms[\"mNear\"].value = near;\n    this.materialDepth.uniforms[\"mFar\"].value = far;\n    this.setLens();\n    this.initPostProcessing();\n  }\n  // providing fnumber and coc(Circle of Confusion) as extra arguments\n  setLens(focalLength, filmGauge, fNumber, coc) {\n    if (focalLength === void 0)\n      focalLength = 35;\n    if (filmGauge !== void 0)\n      this.filmGauge = filmGauge;\n    this.setFocalLength(focalLength);\n    if (fNumber === void 0)\n      fNumber = 8;\n    if (coc === void 0)\n      coc = 0.019;\n    this.fNumber = fNumber;\n    this.coc = coc;\n    this.aperture = focalLength / this.fNumber;\n    this.hyperFocal = focalLength * focalLength / (this.aperture * this.coc);\n  }\n  linearize(depth) {\n    const zfar = this.far;\n    const znear = this.near;\n    return -zfar * znear / (depth * (zfar - znear) - zfar);\n  }\n  smoothstep(near, far, depth) {\n    const x = this.saturate((depth - near) / (far - near));\n    return x * x * (3 - 2 * x);\n  }\n  saturate(x) {\n    return Math.max(0, Math.min(1, x));\n  }\n  // function for focusing at a distance from the camera\n  focusAt(focusDistance) {\n    if (focusDistance === void 0)\n      focusDistance = 20;\n    const focalLength = this.getFocalLength();\n    this.focus = focusDistance;\n    this.nearPoint = this.hyperFocal * this.focus / (this.hyperFocal + (this.focus - focalLength));\n    this.farPoint = this.hyperFocal * this.focus / (this.hyperFocal - (this.focus - focalLength));\n    this.depthOfField = this.farPoint - this.nearPoint;\n    if (this.depthOfField < 0)\n      this.depthOfField = 0;\n    this.sdistance = this.smoothstep(this.near, this.far, this.focus);\n    this.ldistance = this.linearize(1 - this.sdistance);\n    this.postprocessing.bokeh_uniforms[\"focalDepth\"].value = this.ldistance;\n  }\n  initPostProcessing() {\n    if (this.postprocessing.enabled) {\n      this.postprocessing.scene = new Scene();\n      this.postprocessing.camera = new OrthographicCamera(\n        window.innerWidth / -2,\n        window.innerWidth / 2,\n        window.innerHeight / 2,\n        window.innerHeight / -2,\n        -1e4,\n        1e4\n      );\n      this.postprocessing.scene.add(this.postprocessing.camera);\n      this.postprocessing.rtTextureDepth = new WebGLRenderTarget(window.innerWidth, window.innerHeight);\n      this.postprocessing.rtTextureColor = new WebGLRenderTarget(window.innerWidth, window.innerHeight);\n      const bokeh_shader = BokehShader2;\n      this.postprocessing.bokeh_uniforms = UniformsUtils.clone(bokeh_shader.uniforms);\n      this.postprocessing.bokeh_uniforms[\"tColor\"].value = this.postprocessing.rtTextureColor.texture;\n      this.postprocessing.bokeh_uniforms[\"tDepth\"].value = this.postprocessing.rtTextureDepth.texture;\n      this.postprocessing.bokeh_uniforms[\"manualdof\"].value = 0;\n      this.postprocessing.bokeh_uniforms[\"shaderFocus\"].value = 0;\n      this.postprocessing.bokeh_uniforms[\"fstop\"].value = 2.8;\n      this.postprocessing.bokeh_uniforms[\"showFocus\"].value = 1;\n      this.postprocessing.bokeh_uniforms[\"focalDepth\"].value = 0.1;\n      this.postprocessing.bokeh_uniforms[\"znear\"].value = this.near;\n      this.postprocessing.bokeh_uniforms[\"zfar\"].value = this.near;\n      this.postprocessing.bokeh_uniforms[\"textureWidth\"].value = window.innerWidth;\n      this.postprocessing.bokeh_uniforms[\"textureHeight\"].value = window.innerHeight;\n      this.postprocessing.materialBokeh = new ShaderMaterial({\n        uniforms: this.postprocessing.bokeh_uniforms,\n        vertexShader: bokeh_shader.vertexShader,\n        fragmentShader: bokeh_shader.fragmentShader,\n        defines: {\n          RINGS: this.shaderSettings.rings,\n          SAMPLES: this.shaderSettings.samples,\n          DEPTH_PACKING: 1\n        }\n      });\n      this.postprocessing.quad = new Mesh(\n        new PlaneGeometry(window.innerWidth, window.innerHeight),\n        this.postprocessing.materialBokeh\n      );\n      this.postprocessing.quad.position.z = -500;\n      this.postprocessing.scene.add(this.postprocessing.quad);\n    }\n  }\n  renderCinematic(scene, renderer) {\n    if (this.postprocessing.enabled) {\n      const currentRenderTarget = renderer.getRenderTarget();\n      renderer.clear();\n      scene.overrideMaterial = null;\n      renderer.setRenderTarget(this.postprocessing.rtTextureColor);\n      renderer.clear();\n      renderer.render(scene, this);\n      scene.overrideMaterial = this.materialDepth;\n      renderer.setRenderTarget(this.postprocessing.rtTextureDepth);\n      renderer.clear();\n      renderer.render(scene, this);\n      renderer.setRenderTarget(null);\n      renderer.render(this.postprocessing.scene, this.postprocessing.camera);\n      renderer.setRenderTarget(currentRenderTarget);\n    }\n  }\n}\nexport {\n  CinematicCamera\n};\n"]},"metadata":{},"sourceType":"module"}