{"ast":null,"code":"var __defProp = Object.defineProperty;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n  return value;\n};\n\nclass SimplexNoise {\n  /**\n   * You can pass in a random number generator object if you like.\n   * It is assumed to have a random() method.\n   */\n  constructor(r = Math) {\n    __publicField(this, \"grad3\", [[1, 1, 0], [-1, 1, 0], [1, -1, 0], [-1, -1, 0], [1, 0, 1], [-1, 0, 1], [1, 0, -1], [-1, 0, -1], [0, 1, 1], [0, -1, 1], [0, 1, -1], [0, -1, -1]]);\n\n    __publicField(this, \"grad4\", [[0, 1, 1, 1], [0, 1, 1, -1], [0, 1, -1, 1], [0, 1, -1, -1], [0, -1, 1, 1], [0, -1, 1, -1], [0, -1, -1, 1], [0, -1, -1, -1], [1, 0, 1, 1], [1, 0, 1, -1], [1, 0, -1, 1], [1, 0, -1, -1], [-1, 0, 1, 1], [-1, 0, 1, -1], [-1, 0, -1, 1], [-1, 0, -1, -1], [1, 1, 0, 1], [1, 1, 0, -1], [1, -1, 0, 1], [1, -1, 0, -1], [-1, 1, 0, 1], [-1, 1, 0, -1], [-1, -1, 0, 1], [-1, -1, 0, -1], [1, 1, 1, 0], [1, 1, -1, 0], [1, -1, 1, 0], [1, -1, -1, 0], [-1, 1, 1, 0], [-1, 1, -1, 0], [-1, -1, 1, 0], [-1, -1, -1, 0]]);\n\n    __publicField(this, \"p\", []); // To remove the need for index wrapping, double the permutation table length\n\n\n    __publicField(this, \"perm\", []); // A lookup table to traverse the simplex around a given point in 4D.\n    // Details can be found where this table is used, in the 4D noise method.\n\n\n    __publicField(this, \"simplex\", [[0, 1, 2, 3], [0, 1, 3, 2], [0, 0, 0, 0], [0, 2, 3, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 2, 3, 0], [0, 2, 1, 3], [0, 0, 0, 0], [0, 3, 1, 2], [0, 3, 2, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 3, 2, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 2, 0, 3], [0, 0, 0, 0], [1, 3, 0, 2], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [2, 3, 0, 1], [2, 3, 1, 0], [1, 0, 2, 3], [1, 0, 3, 2], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [2, 0, 3, 1], [0, 0, 0, 0], [2, 1, 3, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [2, 0, 1, 3], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [3, 0, 1, 2], [3, 0, 2, 1], [0, 0, 0, 0], [3, 1, 2, 0], [2, 1, 0, 3], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [3, 1, 0, 2], [0, 0, 0, 0], [3, 2, 0, 1], [3, 2, 1, 0]]);\n\n    __publicField(this, \"dot\", (g, x, y) => {\n      return g[0] * x + g[1] * y;\n    });\n\n    __publicField(this, \"dot3\", (g, x, y, z) => {\n      return g[0] * x + g[1] * y + g[2] * z;\n    });\n\n    __publicField(this, \"dot4\", (g, x, y, z, w) => {\n      return g[0] * x + g[1] * y + g[2] * z + g[3] * w;\n    });\n\n    __publicField(this, \"noise\", (xin, yin) => {\n      let n0;\n      let n1;\n      let n2;\n      const F2 = 0.5 * (Math.sqrt(3) - 1);\n      const s = (xin + yin) * F2;\n      const i = Math.floor(xin + s);\n      const j = Math.floor(yin + s);\n      const G2 = (3 - Math.sqrt(3)) / 6;\n      const t = (i + j) * G2;\n      const X0 = i - t;\n      const Y0 = j - t;\n      const x0 = xin - X0;\n      const y0 = yin - Y0;\n      let i1 = 0;\n      let j1 = 1;\n\n      if (x0 > y0) {\n        i1 = 1;\n        j1 = 0;\n      }\n\n      const x1 = x0 - i1 + G2;\n      const y1 = y0 - j1 + G2;\n      const x2 = x0 - 1 + 2 * G2;\n      const y2 = y0 - 1 + 2 * G2;\n      const ii = i & 255;\n      const jj = j & 255;\n      const gi0 = this.perm[ii + this.perm[jj]] % 12;\n      const gi1 = this.perm[ii + i1 + this.perm[jj + j1]] % 12;\n      const gi2 = this.perm[ii + 1 + this.perm[jj + 1]] % 12;\n      let t0 = 0.5 - x0 * x0 - y0 * y0;\n\n      if (t0 < 0) {\n        n0 = 0;\n      } else {\n        t0 *= t0;\n        n0 = t0 * t0 * this.dot(this.grad3[gi0], x0, y0);\n      }\n\n      let t1 = 0.5 - x1 * x1 - y1 * y1;\n\n      if (t1 < 0) {\n        n1 = 0;\n      } else {\n        t1 *= t1;\n        n1 = t1 * t1 * this.dot(this.grad3[gi1], x1, y1);\n      }\n\n      let t2 = 0.5 - x2 * x2 - y2 * y2;\n\n      if (t2 < 0) {\n        n2 = 0;\n      } else {\n        t2 *= t2;\n        n2 = t2 * t2 * this.dot(this.grad3[gi2], x2, y2);\n      }\n\n      return 70 * (n0 + n1 + n2);\n    }); // 3D simplex noise\n\n\n    __publicField(this, \"noise3d\", (xin, yin, zin) => {\n      let n0;\n      let n1;\n      let n2;\n      let n3;\n      const F3 = 1 / 3;\n      const s = (xin + yin + zin) * F3;\n      const i = Math.floor(xin + s);\n      const j = Math.floor(yin + s);\n      const k = Math.floor(zin + s);\n      const G3 = 1 / 6;\n      const t = (i + j + k) * G3;\n      const X0 = i - t;\n      const Y0 = j - t;\n      const Z0 = k - t;\n      const x0 = xin - X0;\n      const y0 = yin - Y0;\n      const z0 = zin - Z0;\n      let i1;\n      let j1;\n      let k1;\n      let i2;\n      let j2;\n      let k2;\n\n      if (x0 >= y0) {\n        if (y0 >= z0) {\n          i1 = 1;\n          j1 = 0;\n          k1 = 0;\n          i2 = 1;\n          j2 = 1;\n          k2 = 0;\n        } else if (x0 >= z0) {\n          i1 = 1;\n          j1 = 0;\n          k1 = 0;\n          i2 = 1;\n          j2 = 0;\n          k2 = 1;\n        } else {\n          i1 = 0;\n          j1 = 0;\n          k1 = 1;\n          i2 = 1;\n          j2 = 0;\n          k2 = 1;\n        }\n      } else {\n        if (y0 < z0) {\n          i1 = 0;\n          j1 = 0;\n          k1 = 1;\n          i2 = 0;\n          j2 = 1;\n          k2 = 1;\n        } else if (x0 < z0) {\n          i1 = 0;\n          j1 = 1;\n          k1 = 0;\n          i2 = 0;\n          j2 = 1;\n          k2 = 1;\n        } else {\n          i1 = 0;\n          j1 = 1;\n          k1 = 0;\n          i2 = 1;\n          j2 = 1;\n          k2 = 0;\n        }\n      }\n\n      const x1 = x0 - i1 + G3;\n      const y1 = y0 - j1 + G3;\n      const z1 = z0 - k1 + G3;\n      const x2 = x0 - i2 + 2 * G3;\n      const y2 = y0 - j2 + 2 * G3;\n      const z2 = z0 - k2 + 2 * G3;\n      const x3 = x0 - 1 + 3 * G3;\n      const y3 = y0 - 1 + 3 * G3;\n      const z3 = z0 - 1 + 3 * G3;\n      const ii = i & 255;\n      const jj = j & 255;\n      const kk = k & 255;\n      const gi0 = this.perm[ii + this.perm[jj + this.perm[kk]]] % 12;\n      const gi1 = this.perm[ii + i1 + this.perm[jj + j1 + this.perm[kk + k1]]] % 12;\n      const gi2 = this.perm[ii + i2 + this.perm[jj + j2 + this.perm[kk + k2]]] % 12;\n      const gi3 = this.perm[ii + 1 + this.perm[jj + 1 + this.perm[kk + 1]]] % 12;\n      let t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0;\n\n      if (t0 < 0) {\n        n0 = 0;\n      } else {\n        t0 *= t0;\n        n0 = t0 * t0 * this.dot3(this.grad3[gi0], x0, y0, z0);\n      }\n\n      let t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1;\n\n      if (t1 < 0) {\n        n1 = 0;\n      } else {\n        t1 *= t1;\n        n1 = t1 * t1 * this.dot3(this.grad3[gi1], x1, y1, z1);\n      }\n\n      let t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2;\n\n      if (t2 < 0) {\n        n2 = 0;\n      } else {\n        t2 *= t2;\n        n2 = t2 * t2 * this.dot3(this.grad3[gi2], x2, y2, z2);\n      }\n\n      let t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3;\n\n      if (t3 < 0) {\n        n3 = 0;\n      } else {\n        t3 *= t3;\n        n3 = t3 * t3 * this.dot3(this.grad3[gi3], x3, y3, z3);\n      }\n\n      return 32 * (n0 + n1 + n2 + n3);\n    }); // 4D simplex noise\n\n\n    __publicField(this, \"noise4d\", (x, y, z, w) => {\n      const grad4 = this.grad4;\n      const simplex = this.simplex;\n      const perm = this.perm;\n      const F4 = (Math.sqrt(5) - 1) / 4;\n      const G4 = (5 - Math.sqrt(5)) / 20;\n      let n0;\n      let n1;\n      let n2;\n      let n3;\n      let n4;\n      const s = (x + y + z + w) * F4;\n      const i = Math.floor(x + s);\n      const j = Math.floor(y + s);\n      const k = Math.floor(z + s);\n      const l = Math.floor(w + s);\n      const t = (i + j + k + l) * G4;\n      const X0 = i - t;\n      const Y0 = j - t;\n      const Z0 = k - t;\n      const W0 = l - t;\n      const x0 = x - X0;\n      const y0 = y - Y0;\n      const z0 = z - Z0;\n      const w0 = w - W0;\n      const c1 = x0 > y0 ? 32 : 0;\n      const c2 = x0 > z0 ? 16 : 0;\n      const c3 = y0 > z0 ? 8 : 0;\n      const c4 = x0 > w0 ? 4 : 0;\n      const c5 = y0 > w0 ? 2 : 0;\n      const c6 = z0 > w0 ? 1 : 0;\n      const c = c1 + c2 + c3 + c4 + c5 + c6;\n      let i1;\n      let j1;\n      let k1;\n      let l1;\n      let i2;\n      let j2;\n      let k2;\n      let l2;\n      let i3;\n      let j3;\n      let k3;\n      let l3;\n      i1 = simplex[c][0] >= 3 ? 1 : 0;\n      j1 = simplex[c][1] >= 3 ? 1 : 0;\n      k1 = simplex[c][2] >= 3 ? 1 : 0;\n      l1 = simplex[c][3] >= 3 ? 1 : 0;\n      i2 = simplex[c][0] >= 2 ? 1 : 0;\n      j2 = simplex[c][1] >= 2 ? 1 : 0;\n      k2 = simplex[c][2] >= 2 ? 1 : 0;\n      l2 = simplex[c][3] >= 2 ? 1 : 0;\n      i3 = simplex[c][0] >= 1 ? 1 : 0;\n      j3 = simplex[c][1] >= 1 ? 1 : 0;\n      k3 = simplex[c][2] >= 1 ? 1 : 0;\n      l3 = simplex[c][3] >= 1 ? 1 : 0;\n      const x1 = x0 - i1 + G4;\n      const y1 = y0 - j1 + G4;\n      const z1 = z0 - k1 + G4;\n      const w1 = w0 - l1 + G4;\n      const x2 = x0 - i2 + 2 * G4;\n      const y2 = y0 - j2 + 2 * G4;\n      const z2 = z0 - k2 + 2 * G4;\n      const w2 = w0 - l2 + 2 * G4;\n      const x3 = x0 - i3 + 3 * G4;\n      const y3 = y0 - j3 + 3 * G4;\n      const z3 = z0 - k3 + 3 * G4;\n      const w3 = w0 - l3 + 3 * G4;\n      const x4 = x0 - 1 + 4 * G4;\n      const y4 = y0 - 1 + 4 * G4;\n      const z4 = z0 - 1 + 4 * G4;\n      const w4 = w0 - 1 + 4 * G4;\n      const ii = i & 255;\n      const jj = j & 255;\n      const kk = k & 255;\n      const ll = l & 255;\n      const gi0 = perm[ii + perm[jj + perm[kk + perm[ll]]]] % 32;\n      const gi1 = perm[ii + i1 + perm[jj + j1 + perm[kk + k1 + perm[ll + l1]]]] % 32;\n      const gi2 = perm[ii + i2 + perm[jj + j2 + perm[kk + k2 + perm[ll + l2]]]] % 32;\n      const gi3 = perm[ii + i3 + perm[jj + j3 + perm[kk + k3 + perm[ll + l3]]]] % 32;\n      const gi4 = perm[ii + 1 + perm[jj + 1 + perm[kk + 1 + perm[ll + 1]]]] % 32;\n      let t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0 - w0 * w0;\n\n      if (t0 < 0) {\n        n0 = 0;\n      } else {\n        t0 *= t0;\n        n0 = t0 * t0 * this.dot4(grad4[gi0], x0, y0, z0, w0);\n      }\n\n      let t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1 - w1 * w1;\n\n      if (t1 < 0) {\n        n1 = 0;\n      } else {\n        t1 *= t1;\n        n1 = t1 * t1 * this.dot4(grad4[gi1], x1, y1, z1, w1);\n      }\n\n      let t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2 - w2 * w2;\n\n      if (t2 < 0) {\n        n2 = 0;\n      } else {\n        t2 *= t2;\n        n2 = t2 * t2 * this.dot4(grad4[gi2], x2, y2, z2, w2);\n      }\n\n      let t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3 - w3 * w3;\n\n      if (t3 < 0) {\n        n3 = 0;\n      } else {\n        t3 *= t3;\n        n3 = t3 * t3 * this.dot4(grad4[gi3], x3, y3, z3, w3);\n      }\n\n      let t4 = 0.6 - x4 * x4 - y4 * y4 - z4 * z4 - w4 * w4;\n\n      if (t4 < 0) {\n        n4 = 0;\n      } else {\n        t4 *= t4;\n        n4 = t4 * t4 * this.dot4(grad4[gi4], x4, y4, z4, w4);\n      }\n\n      return 27 * (n0 + n1 + n2 + n3 + n4);\n    });\n\n    for (let i = 0; i < 256; i++) {\n      this.p[i] = Math.floor(r.random() * 256);\n    }\n\n    for (let i = 0; i < 512; i++) {\n      this.perm[i] = this.p[i & 255];\n    }\n  }\n\n}\n\nexport { SimplexNoise };","map":{"version":3,"sources":["/Users/theodaguier/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/three-stdlib/math/SimplexNoise.js"],"names":["__defProp","Object","defineProperty","__defNormalProp","obj","key","value","enumerable","configurable","writable","__publicField","SimplexNoise","constructor","r","Math","g","x","y","z","w","xin","yin","n0","n1","n2","F2","sqrt","s","i","floor","j","G2","t","X0","Y0","x0","y0","i1","j1","x1","y1","x2","y2","ii","jj","gi0","perm","gi1","gi2","t0","dot","grad3","t1","t2","zin","n3","F3","k","G3","Z0","z0","k1","i2","j2","k2","z1","z2","x3","y3","z3","kk","gi3","dot3","t3","grad4","simplex","F4","G4","n4","l","W0","w0","c1","c2","c3","c4","c5","c6","c","l1","l2","i3","j3","k3","l3","w1","w2","w3","x4","y4","z4","w4","ll","gi4","dot4","t4","p","random"],"mappings":"AAAA,IAAIA,SAAS,GAAGC,MAAM,CAACC,cAAvB;;AACA,IAAIC,eAAe,GAAG,CAACC,GAAD,EAAMC,GAAN,EAAWC,KAAX,KAAqBD,GAAG,IAAID,GAAP,GAAaJ,SAAS,CAACI,GAAD,EAAMC,GAAN,EAAW;AAAEE,EAAAA,UAAU,EAAE,IAAd;AAAoBC,EAAAA,YAAY,EAAE,IAAlC;AAAwCC,EAAAA,QAAQ,EAAE,IAAlD;AAAwDH,EAAAA;AAAxD,CAAX,CAAtB,GAAoGF,GAAG,CAACC,GAAD,CAAH,GAAWC,KAA1J;;AACA,IAAII,aAAa,GAAG,CAACN,GAAD,EAAMC,GAAN,EAAWC,KAAX,KAAqB;AACvCH,EAAAA,eAAe,CAACC,GAAD,EAAM,OAAOC,GAAP,KAAe,QAAf,GAA0BA,GAAG,GAAG,EAAhC,GAAqCA,GAA3C,EAAgDC,KAAhD,CAAf;;AACA,SAAOA,KAAP;AACD,CAHD;;AAIA,MAAMK,YAAN,CAAmB;AACjB;AACF;AACA;AACA;AACEC,EAAAA,WAAW,CAACC,CAAC,GAAGC,IAAL,EAAW;AACpBJ,IAAAA,aAAa,CAAC,IAAD,EAAO,OAAP,EAAgB,CAC3B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAD2B,EAE3B,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,CAAR,CAF2B,EAG3B,CAAC,CAAD,EAAI,CAAC,CAAL,EAAQ,CAAR,CAH2B,EAI3B,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,EAAS,CAAT,CAJ2B,EAK3B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAL2B,EAM3B,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,CAAR,CAN2B,EAO3B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAC,CAAR,CAP2B,EAQ3B,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,CAAC,CAAT,CAR2B,EAS3B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAT2B,EAU3B,CAAC,CAAD,EAAI,CAAC,CAAL,EAAQ,CAAR,CAV2B,EAW3B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAC,CAAR,CAX2B,EAY3B,CAAC,CAAD,EAAI,CAAC,CAAL,EAAQ,CAAC,CAAT,CAZ2B,CAAhB,CAAb;;AAcAA,IAAAA,aAAa,CAAC,IAAD,EAAO,OAAP,EAAgB,CAC3B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAD2B,EAE3B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAC,CAAX,CAF2B,EAG3B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAC,CAAR,EAAW,CAAX,CAH2B,EAI3B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAC,CAAR,EAAW,CAAC,CAAZ,CAJ2B,EAK3B,CAAC,CAAD,EAAI,CAAC,CAAL,EAAQ,CAAR,EAAW,CAAX,CAL2B,EAM3B,CAAC,CAAD,EAAI,CAAC,CAAL,EAAQ,CAAR,EAAW,CAAC,CAAZ,CAN2B,EAO3B,CAAC,CAAD,EAAI,CAAC,CAAL,EAAQ,CAAC,CAAT,EAAY,CAAZ,CAP2B,EAQ3B,CAAC,CAAD,EAAI,CAAC,CAAL,EAAQ,CAAC,CAAT,EAAY,CAAC,CAAb,CAR2B,EAS3B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAT2B,EAU3B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAC,CAAX,CAV2B,EAW3B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAC,CAAR,EAAW,CAAX,CAX2B,EAY3B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAC,CAAR,EAAW,CAAC,CAAZ,CAZ2B,EAa3B,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAX,CAb2B,EAc3B,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAC,CAAZ,CAd2B,EAe3B,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,CAAC,CAAT,EAAY,CAAZ,CAf2B,EAgB3B,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,CAAC,CAAT,EAAY,CAAC,CAAb,CAhB2B,EAiB3B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAjB2B,EAkB3B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAC,CAAX,CAlB2B,EAmB3B,CAAC,CAAD,EAAI,CAAC,CAAL,EAAQ,CAAR,EAAW,CAAX,CAnB2B,EAoB3B,CAAC,CAAD,EAAI,CAAC,CAAL,EAAQ,CAAR,EAAW,CAAC,CAAZ,CApB2B,EAqB3B,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAX,CArB2B,EAsB3B,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAC,CAAZ,CAtB2B,EAuB3B,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,EAAS,CAAT,EAAY,CAAZ,CAvB2B,EAwB3B,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,EAAS,CAAT,EAAY,CAAC,CAAb,CAxB2B,EAyB3B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAzB2B,EA0B3B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAC,CAAR,EAAW,CAAX,CA1B2B,EA2B3B,CAAC,CAAD,EAAI,CAAC,CAAL,EAAQ,CAAR,EAAW,CAAX,CA3B2B,EA4B3B,CAAC,CAAD,EAAI,CAAC,CAAL,EAAQ,CAAC,CAAT,EAAY,CAAZ,CA5B2B,EA6B3B,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAX,CA7B2B,EA8B3B,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,CAAC,CAAT,EAAY,CAAZ,CA9B2B,EA+B3B,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,EAAS,CAAT,EAAY,CAAZ,CA/B2B,EAgC3B,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,EAAS,CAAC,CAAV,EAAa,CAAb,CAhC2B,CAAhB,CAAb;;AAkCAA,IAAAA,aAAa,CAAC,IAAD,EAAO,GAAP,EAAY,EAAZ,CAAb,CAjDoB,CAkDpB;;;AACAA,IAAAA,aAAa,CAAC,IAAD,EAAO,MAAP,EAAe,EAAf,CAAb,CAnDoB,CAoDpB;AACA;;;AACAA,IAAAA,aAAa,CAAC,IAAD,EAAO,SAAP,EAAkB,CAC7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAD6B,EAE7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAF6B,EAG7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAH6B,EAI7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAJ6B,EAK7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAL6B,EAM7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAN6B,EAO7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAP6B,EAQ7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAR6B,EAS7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAT6B,EAU7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAV6B,EAW7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAX6B,EAY7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAZ6B,EAa7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAb6B,EAc7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAd6B,EAe7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAf6B,EAgB7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAhB6B,EAiB7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAjB6B,EAkB7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAlB6B,EAmB7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAnB6B,EAoB7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CApB6B,EAqB7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CArB6B,EAsB7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAtB6B,EAuB7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAvB6B,EAwB7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAxB6B,EAyB7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAzB6B,EA0B7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CA1B6B,EA2B7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CA3B6B,EA4B7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CA5B6B,EA6B7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CA7B6B,EA8B7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CA9B6B,EA+B7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CA/B6B,EAgC7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAhC6B,EAiC7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAjC6B,EAkC7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAlC6B,EAmC7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAnC6B,EAoC7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CApC6B,EAqC7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CArC6B,EAsC7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAtC6B,EAuC7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAvC6B,EAwC7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAxC6B,EAyC7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAzC6B,EA0C7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CA1C6B,EA2C7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CA3C6B,EA4C7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CA5C6B,EA6C7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CA7C6B,EA8C7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CA9C6B,EA+C7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CA/C6B,EAgD7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAhD6B,EAiD7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAjD6B,EAkD7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAlD6B,EAmD7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAnD6B,EAoD7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CApD6B,EAqD7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CArD6B,EAsD7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAtD6B,EAuD7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAvD6B,EAwD7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAxD6B,EAyD7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAzD6B,EA0D7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CA1D6B,EA2D7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CA3D6B,EA4D7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CA5D6B,EA6D7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CA7D6B,EA8D7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CA9D6B,EA+D7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CA/D6B,EAgE7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAhE6B,CAAlB,CAAb;;AAkEAA,IAAAA,aAAa,CAAC,IAAD,EAAO,KAAP,EAAc,CAACK,CAAD,EAAIC,CAAJ,EAAOC,CAAP,KAAa;AACtC,aAAOF,CAAC,CAAC,CAAD,CAAD,GAAOC,CAAP,GAAWD,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAzB;AACD,KAFY,CAAb;;AAGAP,IAAAA,aAAa,CAAC,IAAD,EAAO,MAAP,EAAe,CAACK,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,KAAgB;AAC1C,aAAOH,CAAC,CAAC,CAAD,CAAD,GAAOC,CAAP,GAAWD,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAlB,GAAsBF,CAAC,CAAC,CAAD,CAAD,GAAOG,CAApC;AACD,KAFY,CAAb;;AAGAR,IAAAA,aAAa,CAAC,IAAD,EAAO,MAAP,EAAe,CAACK,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAaC,CAAb,KAAmB;AAC7C,aAAOJ,CAAC,CAAC,CAAD,CAAD,GAAOC,CAAP,GAAWD,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAlB,GAAsBF,CAAC,CAAC,CAAD,CAAD,GAAOG,CAA7B,GAAiCH,CAAC,CAAC,CAAD,CAAD,GAAOI,CAA/C;AACD,KAFY,CAAb;;AAGAT,IAAAA,aAAa,CAAC,IAAD,EAAO,OAAP,EAAgB,CAACU,GAAD,EAAMC,GAAN,KAAc;AACzC,UAAIC,EAAJ;AACA,UAAIC,EAAJ;AACA,UAAIC,EAAJ;AACA,YAAMC,EAAE,GAAG,OAAOX,IAAI,CAACY,IAAL,CAAU,CAAV,IAAe,CAAtB,CAAX;AACA,YAAMC,CAAC,GAAG,CAACP,GAAG,GAAGC,GAAP,IAAcI,EAAxB;AACA,YAAMG,CAAC,GAAGd,IAAI,CAACe,KAAL,CAAWT,GAAG,GAAGO,CAAjB,CAAV;AACA,YAAMG,CAAC,GAAGhB,IAAI,CAACe,KAAL,CAAWR,GAAG,GAAGM,CAAjB,CAAV;AACA,YAAMI,EAAE,GAAG,CAAC,IAAIjB,IAAI,CAACY,IAAL,CAAU,CAAV,CAAL,IAAqB,CAAhC;AACA,YAAMM,CAAC,GAAG,CAACJ,CAAC,GAAGE,CAAL,IAAUC,EAApB;AACA,YAAME,EAAE,GAAGL,CAAC,GAAGI,CAAf;AACA,YAAME,EAAE,GAAGJ,CAAC,GAAGE,CAAf;AACA,YAAMG,EAAE,GAAGf,GAAG,GAAGa,EAAjB;AACA,YAAMG,EAAE,GAAGf,GAAG,GAAGa,EAAjB;AACA,UAAIG,EAAE,GAAG,CAAT;AACA,UAAIC,EAAE,GAAG,CAAT;;AACA,UAAIH,EAAE,GAAGC,EAAT,EAAa;AACXC,QAAAA,EAAE,GAAG,CAAL;AACAC,QAAAA,EAAE,GAAG,CAAL;AACD;;AACD,YAAMC,EAAE,GAAGJ,EAAE,GAAGE,EAAL,GAAUN,EAArB;AACA,YAAMS,EAAE,GAAGJ,EAAE,GAAGE,EAAL,GAAUP,EAArB;AACA,YAAMU,EAAE,GAAGN,EAAE,GAAG,CAAL,GAAS,IAAIJ,EAAxB;AACA,YAAMW,EAAE,GAAGN,EAAE,GAAG,CAAL,GAAS,IAAIL,EAAxB;AACA,YAAMY,EAAE,GAAGf,CAAC,GAAG,GAAf;AACA,YAAMgB,EAAE,GAAGd,CAAC,GAAG,GAAf;AACA,YAAMe,GAAG,GAAG,KAAKC,IAAL,CAAUH,EAAE,GAAG,KAAKG,IAAL,CAAUF,EAAV,CAAf,IAAgC,EAA5C;AACA,YAAMG,GAAG,GAAG,KAAKD,IAAL,CAAUH,EAAE,GAAGN,EAAL,GAAU,KAAKS,IAAL,CAAUF,EAAE,GAAGN,EAAf,CAApB,IAA0C,EAAtD;AACA,YAAMU,GAAG,GAAG,KAAKF,IAAL,CAAUH,EAAE,GAAG,CAAL,GAAS,KAAKG,IAAL,CAAUF,EAAE,GAAG,CAAf,CAAnB,IAAwC,EAApD;AACA,UAAIK,EAAE,GAAG,MAAMd,EAAE,GAAGA,EAAX,GAAgBC,EAAE,GAAGA,EAA9B;;AACA,UAAIa,EAAE,GAAG,CAAT,EAAY;AACV3B,QAAAA,EAAE,GAAG,CAAL;AACD,OAFD,MAEO;AACL2B,QAAAA,EAAE,IAAIA,EAAN;AACA3B,QAAAA,EAAE,GAAG2B,EAAE,GAAGA,EAAL,GAAU,KAAKC,GAAL,CAAS,KAAKC,KAAL,CAAWN,GAAX,CAAT,EAA0BV,EAA1B,EAA8BC,EAA9B,CAAf;AACD;;AACD,UAAIgB,EAAE,GAAG,MAAMb,EAAE,GAAGA,EAAX,GAAgBC,EAAE,GAAGA,EAA9B;;AACA,UAAIY,EAAE,GAAG,CAAT,EAAY;AACV7B,QAAAA,EAAE,GAAG,CAAL;AACD,OAFD,MAEO;AACL6B,QAAAA,EAAE,IAAIA,EAAN;AACA7B,QAAAA,EAAE,GAAG6B,EAAE,GAAGA,EAAL,GAAU,KAAKF,GAAL,CAAS,KAAKC,KAAL,CAAWJ,GAAX,CAAT,EAA0BR,EAA1B,EAA8BC,EAA9B,CAAf;AACD;;AACD,UAAIa,EAAE,GAAG,MAAMZ,EAAE,GAAGA,EAAX,GAAgBC,EAAE,GAAGA,EAA9B;;AACA,UAAIW,EAAE,GAAG,CAAT,EAAY;AACV7B,QAAAA,EAAE,GAAG,CAAL;AACD,OAFD,MAEO;AACL6B,QAAAA,EAAE,IAAIA,EAAN;AACA7B,QAAAA,EAAE,GAAG6B,EAAE,GAAGA,EAAL,GAAU,KAAKH,GAAL,CAAS,KAAKC,KAAL,CAAWH,GAAX,CAAT,EAA0BP,EAA1B,EAA8BC,EAA9B,CAAf;AACD;;AACD,aAAO,MAAMpB,EAAE,GAAGC,EAAL,GAAUC,EAAhB,CAAP;AACD,KAnDY,CAAb,CAjIoB,CAqLpB;;;AACAd,IAAAA,aAAa,CAAC,IAAD,EAAO,SAAP,EAAkB,CAACU,GAAD,EAAMC,GAAN,EAAWiC,GAAX,KAAmB;AAChD,UAAIhC,EAAJ;AACA,UAAIC,EAAJ;AACA,UAAIC,EAAJ;AACA,UAAI+B,EAAJ;AACA,YAAMC,EAAE,GAAG,IAAI,CAAf;AACA,YAAM7B,CAAC,GAAG,CAACP,GAAG,GAAGC,GAAN,GAAYiC,GAAb,IAAoBE,EAA9B;AACA,YAAM5B,CAAC,GAAGd,IAAI,CAACe,KAAL,CAAWT,GAAG,GAAGO,CAAjB,CAAV;AACA,YAAMG,CAAC,GAAGhB,IAAI,CAACe,KAAL,CAAWR,GAAG,GAAGM,CAAjB,CAAV;AACA,YAAM8B,CAAC,GAAG3C,IAAI,CAACe,KAAL,CAAWyB,GAAG,GAAG3B,CAAjB,CAAV;AACA,YAAM+B,EAAE,GAAG,IAAI,CAAf;AACA,YAAM1B,CAAC,GAAG,CAACJ,CAAC,GAAGE,CAAJ,GAAQ2B,CAAT,IAAcC,EAAxB;AACA,YAAMzB,EAAE,GAAGL,CAAC,GAAGI,CAAf;AACA,YAAME,EAAE,GAAGJ,CAAC,GAAGE,CAAf;AACA,YAAM2B,EAAE,GAAGF,CAAC,GAAGzB,CAAf;AACA,YAAMG,EAAE,GAAGf,GAAG,GAAGa,EAAjB;AACA,YAAMG,EAAE,GAAGf,GAAG,GAAGa,EAAjB;AACA,YAAM0B,EAAE,GAAGN,GAAG,GAAGK,EAAjB;AACA,UAAItB,EAAJ;AACA,UAAIC,EAAJ;AACA,UAAIuB,EAAJ;AACA,UAAIC,EAAJ;AACA,UAAIC,EAAJ;AACA,UAAIC,EAAJ;;AACA,UAAI7B,EAAE,IAAIC,EAAV,EAAc;AACZ,YAAIA,EAAE,IAAIwB,EAAV,EAAc;AACZvB,UAAAA,EAAE,GAAG,CAAL;AACAC,UAAAA,EAAE,GAAG,CAAL;AACAuB,UAAAA,EAAE,GAAG,CAAL;AACAC,UAAAA,EAAE,GAAG,CAAL;AACAC,UAAAA,EAAE,GAAG,CAAL;AACAC,UAAAA,EAAE,GAAG,CAAL;AACD,SAPD,MAOO,IAAI7B,EAAE,IAAIyB,EAAV,EAAc;AACnBvB,UAAAA,EAAE,GAAG,CAAL;AACAC,UAAAA,EAAE,GAAG,CAAL;AACAuB,UAAAA,EAAE,GAAG,CAAL;AACAC,UAAAA,EAAE,GAAG,CAAL;AACAC,UAAAA,EAAE,GAAG,CAAL;AACAC,UAAAA,EAAE,GAAG,CAAL;AACD,SAPM,MAOA;AACL3B,UAAAA,EAAE,GAAG,CAAL;AACAC,UAAAA,EAAE,GAAG,CAAL;AACAuB,UAAAA,EAAE,GAAG,CAAL;AACAC,UAAAA,EAAE,GAAG,CAAL;AACAC,UAAAA,EAAE,GAAG,CAAL;AACAC,UAAAA,EAAE,GAAG,CAAL;AACD;AACF,OAvBD,MAuBO;AACL,YAAI5B,EAAE,GAAGwB,EAAT,EAAa;AACXvB,UAAAA,EAAE,GAAG,CAAL;AACAC,UAAAA,EAAE,GAAG,CAAL;AACAuB,UAAAA,EAAE,GAAG,CAAL;AACAC,UAAAA,EAAE,GAAG,CAAL;AACAC,UAAAA,EAAE,GAAG,CAAL;AACAC,UAAAA,EAAE,GAAG,CAAL;AACD,SAPD,MAOO,IAAI7B,EAAE,GAAGyB,EAAT,EAAa;AAClBvB,UAAAA,EAAE,GAAG,CAAL;AACAC,UAAAA,EAAE,GAAG,CAAL;AACAuB,UAAAA,EAAE,GAAG,CAAL;AACAC,UAAAA,EAAE,GAAG,CAAL;AACAC,UAAAA,EAAE,GAAG,CAAL;AACAC,UAAAA,EAAE,GAAG,CAAL;AACD,SAPM,MAOA;AACL3B,UAAAA,EAAE,GAAG,CAAL;AACAC,UAAAA,EAAE,GAAG,CAAL;AACAuB,UAAAA,EAAE,GAAG,CAAL;AACAC,UAAAA,EAAE,GAAG,CAAL;AACAC,UAAAA,EAAE,GAAG,CAAL;AACAC,UAAAA,EAAE,GAAG,CAAL;AACD;AACF;;AACD,YAAMzB,EAAE,GAAGJ,EAAE,GAAGE,EAAL,GAAUqB,EAArB;AACA,YAAMlB,EAAE,GAAGJ,EAAE,GAAGE,EAAL,GAAUoB,EAArB;AACA,YAAMO,EAAE,GAAGL,EAAE,GAAGC,EAAL,GAAUH,EAArB;AACA,YAAMjB,EAAE,GAAGN,EAAE,GAAG2B,EAAL,GAAU,IAAIJ,EAAzB;AACA,YAAMhB,EAAE,GAAGN,EAAE,GAAG2B,EAAL,GAAU,IAAIL,EAAzB;AACA,YAAMQ,EAAE,GAAGN,EAAE,GAAGI,EAAL,GAAU,IAAIN,EAAzB;AACA,YAAMS,EAAE,GAAGhC,EAAE,GAAG,CAAL,GAAS,IAAIuB,EAAxB;AACA,YAAMU,EAAE,GAAGhC,EAAE,GAAG,CAAL,GAAS,IAAIsB,EAAxB;AACA,YAAMW,EAAE,GAAGT,EAAE,GAAG,CAAL,GAAS,IAAIF,EAAxB;AACA,YAAMf,EAAE,GAAGf,CAAC,GAAG,GAAf;AACA,YAAMgB,EAAE,GAAGd,CAAC,GAAG,GAAf;AACA,YAAMwC,EAAE,GAAGb,CAAC,GAAG,GAAf;AACA,YAAMZ,GAAG,GAAG,KAAKC,IAAL,CAAUH,EAAE,GAAG,KAAKG,IAAL,CAAUF,EAAE,GAAG,KAAKE,IAAL,CAAUwB,EAAV,CAAf,CAAf,IAAgD,EAA5D;AACA,YAAMvB,GAAG,GAAG,KAAKD,IAAL,CAAUH,EAAE,GAAGN,EAAL,GAAU,KAAKS,IAAL,CAAUF,EAAE,GAAGN,EAAL,GAAU,KAAKQ,IAAL,CAAUwB,EAAE,GAAGT,EAAf,CAApB,CAApB,IAA+D,EAA3E;AACA,YAAMb,GAAG,GAAG,KAAKF,IAAL,CAAUH,EAAE,GAAGmB,EAAL,GAAU,KAAKhB,IAAL,CAAUF,EAAE,GAAGmB,EAAL,GAAU,KAAKjB,IAAL,CAAUwB,EAAE,GAAGN,EAAf,CAApB,CAApB,IAA+D,EAA3E;AACA,YAAMO,GAAG,GAAG,KAAKzB,IAAL,CAAUH,EAAE,GAAG,CAAL,GAAS,KAAKG,IAAL,CAAUF,EAAE,GAAG,CAAL,GAAS,KAAKE,IAAL,CAAUwB,EAAE,GAAG,CAAf,CAAnB,CAAnB,IAA4D,EAAxE;AACA,UAAIrB,EAAE,GAAG,MAAMd,EAAE,GAAGA,EAAX,GAAgBC,EAAE,GAAGA,EAArB,GAA0BwB,EAAE,GAAGA,EAAxC;;AACA,UAAIX,EAAE,GAAG,CAAT,EAAY;AACV3B,QAAAA,EAAE,GAAG,CAAL;AACD,OAFD,MAEO;AACL2B,QAAAA,EAAE,IAAIA,EAAN;AACA3B,QAAAA,EAAE,GAAG2B,EAAE,GAAGA,EAAL,GAAU,KAAKuB,IAAL,CAAU,KAAKrB,KAAL,CAAWN,GAAX,CAAV,EAA2BV,EAA3B,EAA+BC,EAA/B,EAAmCwB,EAAnC,CAAf;AACD;;AACD,UAAIR,EAAE,GAAG,MAAMb,EAAE,GAAGA,EAAX,GAAgBC,EAAE,GAAGA,EAArB,GAA0ByB,EAAE,GAAGA,EAAxC;;AACA,UAAIb,EAAE,GAAG,CAAT,EAAY;AACV7B,QAAAA,EAAE,GAAG,CAAL;AACD,OAFD,MAEO;AACL6B,QAAAA,EAAE,IAAIA,EAAN;AACA7B,QAAAA,EAAE,GAAG6B,EAAE,GAAGA,EAAL,GAAU,KAAKoB,IAAL,CAAU,KAAKrB,KAAL,CAAWJ,GAAX,CAAV,EAA2BR,EAA3B,EAA+BC,EAA/B,EAAmCyB,EAAnC,CAAf;AACD;;AACD,UAAIZ,EAAE,GAAG,MAAMZ,EAAE,GAAGA,EAAX,GAAgBC,EAAE,GAAGA,EAArB,GAA0BwB,EAAE,GAAGA,EAAxC;;AACA,UAAIb,EAAE,GAAG,CAAT,EAAY;AACV7B,QAAAA,EAAE,GAAG,CAAL;AACD,OAFD,MAEO;AACL6B,QAAAA,EAAE,IAAIA,EAAN;AACA7B,QAAAA,EAAE,GAAG6B,EAAE,GAAGA,EAAL,GAAU,KAAKmB,IAAL,CAAU,KAAKrB,KAAL,CAAWH,GAAX,CAAV,EAA2BP,EAA3B,EAA+BC,EAA/B,EAAmCwB,EAAnC,CAAf;AACD;;AACD,UAAIO,EAAE,GAAG,MAAMN,EAAE,GAAGA,EAAX,GAAgBC,EAAE,GAAGA,EAArB,GAA0BC,EAAE,GAAGA,EAAxC;;AACA,UAAII,EAAE,GAAG,CAAT,EAAY;AACVlB,QAAAA,EAAE,GAAG,CAAL;AACD,OAFD,MAEO;AACLkB,QAAAA,EAAE,IAAIA,EAAN;AACAlB,QAAAA,EAAE,GAAGkB,EAAE,GAAGA,EAAL,GAAU,KAAKD,IAAL,CAAU,KAAKrB,KAAL,CAAWoB,GAAX,CAAV,EAA2BJ,EAA3B,EAA+BC,EAA/B,EAAmCC,EAAnC,CAAf;AACD;;AACD,aAAO,MAAM/C,EAAE,GAAGC,EAAL,GAAUC,EAAV,GAAe+B,EAArB,CAAP;AACD,KApHY,CAAb,CAtLoB,CA2SpB;;;AACA7C,IAAAA,aAAa,CAAC,IAAD,EAAO,SAAP,EAAkB,CAACM,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,KAAgB;AAC7C,YAAMuD,KAAK,GAAG,KAAKA,KAAnB;AACA,YAAMC,OAAO,GAAG,KAAKA,OAArB;AACA,YAAM7B,IAAI,GAAG,KAAKA,IAAlB;AACA,YAAM8B,EAAE,GAAG,CAAC9D,IAAI,CAACY,IAAL,CAAU,CAAV,IAAe,CAAhB,IAAqB,CAAhC;AACA,YAAMmD,EAAE,GAAG,CAAC,IAAI/D,IAAI,CAACY,IAAL,CAAU,CAAV,CAAL,IAAqB,EAAhC;AACA,UAAIJ,EAAJ;AACA,UAAIC,EAAJ;AACA,UAAIC,EAAJ;AACA,UAAI+B,EAAJ;AACA,UAAIuB,EAAJ;AACA,YAAMnD,CAAC,GAAG,CAACX,CAAC,GAAGC,CAAJ,GAAQC,CAAR,GAAYC,CAAb,IAAkByD,EAA5B;AACA,YAAMhD,CAAC,GAAGd,IAAI,CAACe,KAAL,CAAWb,CAAC,GAAGW,CAAf,CAAV;AACA,YAAMG,CAAC,GAAGhB,IAAI,CAACe,KAAL,CAAWZ,CAAC,GAAGU,CAAf,CAAV;AACA,YAAM8B,CAAC,GAAG3C,IAAI,CAACe,KAAL,CAAWX,CAAC,GAAGS,CAAf,CAAV;AACA,YAAMoD,CAAC,GAAGjE,IAAI,CAACe,KAAL,CAAWV,CAAC,GAAGQ,CAAf,CAAV;AACA,YAAMK,CAAC,GAAG,CAACJ,CAAC,GAAGE,CAAJ,GAAQ2B,CAAR,GAAYsB,CAAb,IAAkBF,EAA5B;AACA,YAAM5C,EAAE,GAAGL,CAAC,GAAGI,CAAf;AACA,YAAME,EAAE,GAAGJ,CAAC,GAAGE,CAAf;AACA,YAAM2B,EAAE,GAAGF,CAAC,GAAGzB,CAAf;AACA,YAAMgD,EAAE,GAAGD,CAAC,GAAG/C,CAAf;AACA,YAAMG,EAAE,GAAGnB,CAAC,GAAGiB,EAAf;AACA,YAAMG,EAAE,GAAGnB,CAAC,GAAGiB,EAAf;AACA,YAAM0B,EAAE,GAAG1C,CAAC,GAAGyC,EAAf;AACA,YAAMsB,EAAE,GAAG9D,CAAC,GAAG6D,EAAf;AACA,YAAME,EAAE,GAAG/C,EAAE,GAAGC,EAAL,GAAU,EAAV,GAAe,CAA1B;AACA,YAAM+C,EAAE,GAAGhD,EAAE,GAAGyB,EAAL,GAAU,EAAV,GAAe,CAA1B;AACA,YAAMwB,EAAE,GAAGhD,EAAE,GAAGwB,EAAL,GAAU,CAAV,GAAc,CAAzB;AACA,YAAMyB,EAAE,GAAGlD,EAAE,GAAG8C,EAAL,GAAU,CAAV,GAAc,CAAzB;AACA,YAAMK,EAAE,GAAGlD,EAAE,GAAG6C,EAAL,GAAU,CAAV,GAAc,CAAzB;AACA,YAAMM,EAAE,GAAG3B,EAAE,GAAGqB,EAAL,GAAU,CAAV,GAAc,CAAzB;AACA,YAAMO,CAAC,GAAGN,EAAE,GAAGC,EAAL,GAAUC,EAAV,GAAeC,EAAf,GAAoBC,EAApB,GAAyBC,EAAnC;AACA,UAAIlD,EAAJ;AACA,UAAIC,EAAJ;AACA,UAAIuB,EAAJ;AACA,UAAI4B,EAAJ;AACA,UAAI3B,EAAJ;AACA,UAAIC,EAAJ;AACA,UAAIC,EAAJ;AACA,UAAI0B,EAAJ;AACA,UAAIC,EAAJ;AACA,UAAIC,EAAJ;AACA,UAAIC,EAAJ;AACA,UAAIC,EAAJ;AACAzD,MAAAA,EAAE,GAAGsC,OAAO,CAACa,CAAD,CAAP,CAAW,CAAX,KAAiB,CAAjB,GAAqB,CAArB,GAAyB,CAA9B;AACAlD,MAAAA,EAAE,GAAGqC,OAAO,CAACa,CAAD,CAAP,CAAW,CAAX,KAAiB,CAAjB,GAAqB,CAArB,GAAyB,CAA9B;AACA3B,MAAAA,EAAE,GAAGc,OAAO,CAACa,CAAD,CAAP,CAAW,CAAX,KAAiB,CAAjB,GAAqB,CAArB,GAAyB,CAA9B;AACAC,MAAAA,EAAE,GAAGd,OAAO,CAACa,CAAD,CAAP,CAAW,CAAX,KAAiB,CAAjB,GAAqB,CAArB,GAAyB,CAA9B;AACA1B,MAAAA,EAAE,GAAGa,OAAO,CAACa,CAAD,CAAP,CAAW,CAAX,KAAiB,CAAjB,GAAqB,CAArB,GAAyB,CAA9B;AACAzB,MAAAA,EAAE,GAAGY,OAAO,CAACa,CAAD,CAAP,CAAW,CAAX,KAAiB,CAAjB,GAAqB,CAArB,GAAyB,CAA9B;AACAxB,MAAAA,EAAE,GAAGW,OAAO,CAACa,CAAD,CAAP,CAAW,CAAX,KAAiB,CAAjB,GAAqB,CAArB,GAAyB,CAA9B;AACAE,MAAAA,EAAE,GAAGf,OAAO,CAACa,CAAD,CAAP,CAAW,CAAX,KAAiB,CAAjB,GAAqB,CAArB,GAAyB,CAA9B;AACAG,MAAAA,EAAE,GAAGhB,OAAO,CAACa,CAAD,CAAP,CAAW,CAAX,KAAiB,CAAjB,GAAqB,CAArB,GAAyB,CAA9B;AACAI,MAAAA,EAAE,GAAGjB,OAAO,CAACa,CAAD,CAAP,CAAW,CAAX,KAAiB,CAAjB,GAAqB,CAArB,GAAyB,CAA9B;AACAK,MAAAA,EAAE,GAAGlB,OAAO,CAACa,CAAD,CAAP,CAAW,CAAX,KAAiB,CAAjB,GAAqB,CAArB,GAAyB,CAA9B;AACAM,MAAAA,EAAE,GAAGnB,OAAO,CAACa,CAAD,CAAP,CAAW,CAAX,KAAiB,CAAjB,GAAqB,CAArB,GAAyB,CAA9B;AACA,YAAMjD,EAAE,GAAGJ,EAAE,GAAGE,EAAL,GAAUwC,EAArB;AACA,YAAMrC,EAAE,GAAGJ,EAAE,GAAGE,EAAL,GAAUuC,EAArB;AACA,YAAMZ,EAAE,GAAGL,EAAE,GAAGC,EAAL,GAAUgB,EAArB;AACA,YAAMkB,EAAE,GAAGd,EAAE,GAAGQ,EAAL,GAAUZ,EAArB;AACA,YAAMpC,EAAE,GAAGN,EAAE,GAAG2B,EAAL,GAAU,IAAIe,EAAzB;AACA,YAAMnC,EAAE,GAAGN,EAAE,GAAG2B,EAAL,GAAU,IAAIc,EAAzB;AACA,YAAMX,EAAE,GAAGN,EAAE,GAAGI,EAAL,GAAU,IAAIa,EAAzB;AACA,YAAMmB,EAAE,GAAGf,EAAE,GAAGS,EAAL,GAAU,IAAIb,EAAzB;AACA,YAAMV,EAAE,GAAGhC,EAAE,GAAGwD,EAAL,GAAU,IAAId,EAAzB;AACA,YAAMT,EAAE,GAAGhC,EAAE,GAAGwD,EAAL,GAAU,IAAIf,EAAzB;AACA,YAAMR,EAAE,GAAGT,EAAE,GAAGiC,EAAL,GAAU,IAAIhB,EAAzB;AACA,YAAMoB,EAAE,GAAGhB,EAAE,GAAGa,EAAL,GAAU,IAAIjB,EAAzB;AACA,YAAMqB,EAAE,GAAG/D,EAAE,GAAG,CAAL,GAAS,IAAI0C,EAAxB;AACA,YAAMsB,EAAE,GAAG/D,EAAE,GAAG,CAAL,GAAS,IAAIyC,EAAxB;AACA,YAAMuB,EAAE,GAAGxC,EAAE,GAAG,CAAL,GAAS,IAAIiB,EAAxB;AACA,YAAMwB,EAAE,GAAGpB,EAAE,GAAG,CAAL,GAAS,IAAIJ,EAAxB;AACA,YAAMlC,EAAE,GAAGf,CAAC,GAAG,GAAf;AACA,YAAMgB,EAAE,GAAGd,CAAC,GAAG,GAAf;AACA,YAAMwC,EAAE,GAAGb,CAAC,GAAG,GAAf;AACA,YAAM6C,EAAE,GAAGvB,CAAC,GAAG,GAAf;AACA,YAAMlC,GAAG,GAAGC,IAAI,CAACH,EAAE,GAAGG,IAAI,CAACF,EAAE,GAAGE,IAAI,CAACwB,EAAE,GAAGxB,IAAI,CAACwD,EAAD,CAAV,CAAV,CAAV,CAAJ,GAA4C,EAAxD;AACA,YAAMvD,GAAG,GAAGD,IAAI,CAACH,EAAE,GAAGN,EAAL,GAAUS,IAAI,CAACF,EAAE,GAAGN,EAAL,GAAUQ,IAAI,CAACwB,EAAE,GAAGT,EAAL,GAAUf,IAAI,CAACwD,EAAE,GAAGb,EAAN,CAAf,CAAf,CAAf,CAAJ,GAAgE,EAA5E;AACA,YAAMzC,GAAG,GAAGF,IAAI,CAACH,EAAE,GAAGmB,EAAL,GAAUhB,IAAI,CAACF,EAAE,GAAGmB,EAAL,GAAUjB,IAAI,CAACwB,EAAE,GAAGN,EAAL,GAAUlB,IAAI,CAACwD,EAAE,GAAGZ,EAAN,CAAf,CAAf,CAAf,CAAJ,GAAgE,EAA5E;AACA,YAAMnB,GAAG,GAAGzB,IAAI,CAACH,EAAE,GAAGgD,EAAL,GAAU7C,IAAI,CAACF,EAAE,GAAGgD,EAAL,GAAU9C,IAAI,CAACwB,EAAE,GAAGuB,EAAL,GAAU/C,IAAI,CAACwD,EAAE,GAAGR,EAAN,CAAf,CAAf,CAAf,CAAJ,GAAgE,EAA5E;AACA,YAAMS,GAAG,GAAGzD,IAAI,CAACH,EAAE,GAAG,CAAL,GAASG,IAAI,CAACF,EAAE,GAAG,CAAL,GAASE,IAAI,CAACwB,EAAE,GAAG,CAAL,GAASxB,IAAI,CAACwD,EAAE,GAAG,CAAN,CAAd,CAAd,CAAd,CAAJ,GAA4D,EAAxE;AACA,UAAIrD,EAAE,GAAG,MAAMd,EAAE,GAAGA,EAAX,GAAgBC,EAAE,GAAGA,EAArB,GAA0BwB,EAAE,GAAGA,EAA/B,GAAoCqB,EAAE,GAAGA,EAAlD;;AACA,UAAIhC,EAAE,GAAG,CAAT,EAAY;AACV3B,QAAAA,EAAE,GAAG,CAAL;AACD,OAFD,MAEO;AACL2B,QAAAA,EAAE,IAAIA,EAAN;AACA3B,QAAAA,EAAE,GAAG2B,EAAE,GAAGA,EAAL,GAAU,KAAKuD,IAAL,CAAU9B,KAAK,CAAC7B,GAAD,CAAf,EAAsBV,EAAtB,EAA0BC,EAA1B,EAA8BwB,EAA9B,EAAkCqB,EAAlC,CAAf;AACD;;AACD,UAAI7B,EAAE,GAAG,MAAMb,EAAE,GAAGA,EAAX,GAAgBC,EAAE,GAAGA,EAArB,GAA0ByB,EAAE,GAAGA,EAA/B,GAAoC8B,EAAE,GAAGA,EAAlD;;AACA,UAAI3C,EAAE,GAAG,CAAT,EAAY;AACV7B,QAAAA,EAAE,GAAG,CAAL;AACD,OAFD,MAEO;AACL6B,QAAAA,EAAE,IAAIA,EAAN;AACA7B,QAAAA,EAAE,GAAG6B,EAAE,GAAGA,EAAL,GAAU,KAAKoD,IAAL,CAAU9B,KAAK,CAAC3B,GAAD,CAAf,EAAsBR,EAAtB,EAA0BC,EAA1B,EAA8ByB,EAA9B,EAAkC8B,EAAlC,CAAf;AACD;;AACD,UAAI1C,EAAE,GAAG,MAAMZ,EAAE,GAAGA,EAAX,GAAgBC,EAAE,GAAGA,EAArB,GAA0BwB,EAAE,GAAGA,EAA/B,GAAoC8B,EAAE,GAAGA,EAAlD;;AACA,UAAI3C,EAAE,GAAG,CAAT,EAAY;AACV7B,QAAAA,EAAE,GAAG,CAAL;AACD,OAFD,MAEO;AACL6B,QAAAA,EAAE,IAAIA,EAAN;AACA7B,QAAAA,EAAE,GAAG6B,EAAE,GAAGA,EAAL,GAAU,KAAKmD,IAAL,CAAU9B,KAAK,CAAC1B,GAAD,CAAf,EAAsBP,EAAtB,EAA0BC,EAA1B,EAA8BwB,EAA9B,EAAkC8B,EAAlC,CAAf;AACD;;AACD,UAAIvB,EAAE,GAAG,MAAMN,EAAE,GAAGA,EAAX,GAAgBC,EAAE,GAAGA,EAArB,GAA0BC,EAAE,GAAGA,EAA/B,GAAoC4B,EAAE,GAAGA,EAAlD;;AACA,UAAIxB,EAAE,GAAG,CAAT,EAAY;AACVlB,QAAAA,EAAE,GAAG,CAAL;AACD,OAFD,MAEO;AACLkB,QAAAA,EAAE,IAAIA,EAAN;AACAlB,QAAAA,EAAE,GAAGkB,EAAE,GAAGA,EAAL,GAAU,KAAK+B,IAAL,CAAU9B,KAAK,CAACH,GAAD,CAAf,EAAsBJ,EAAtB,EAA0BC,EAA1B,EAA8BC,EAA9B,EAAkC4B,EAAlC,CAAf;AACD;;AACD,UAAIQ,EAAE,GAAG,MAAMP,EAAE,GAAGA,EAAX,GAAgBC,EAAE,GAAGA,EAArB,GAA0BC,EAAE,GAAGA,EAA/B,GAAoCC,EAAE,GAAGA,EAAlD;;AACA,UAAII,EAAE,GAAG,CAAT,EAAY;AACV3B,QAAAA,EAAE,GAAG,CAAL;AACD,OAFD,MAEO;AACL2B,QAAAA,EAAE,IAAIA,EAAN;AACA3B,QAAAA,EAAE,GAAG2B,EAAE,GAAGA,EAAL,GAAU,KAAKD,IAAL,CAAU9B,KAAK,CAAC6B,GAAD,CAAf,EAAsBL,EAAtB,EAA0BC,EAA1B,EAA8BC,EAA9B,EAAkCC,EAAlC,CAAf;AACD;;AACD,aAAO,MAAM/E,EAAE,GAAGC,EAAL,GAAUC,EAAV,GAAe+B,EAAf,GAAoBuB,EAA1B,CAAP;AACD,KArHY,CAAb;;AAsHA,SAAK,IAAIlD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAC5B,WAAK8E,CAAL,CAAO9E,CAAP,IAAYd,IAAI,CAACe,KAAL,CAAWhB,CAAC,CAAC8F,MAAF,KAAa,GAAxB,CAAZ;AACD;;AACD,SAAK,IAAI/E,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAC5B,WAAKkB,IAAL,CAAUlB,CAAV,IAAe,KAAK8E,CAAL,CAAO9E,CAAC,GAAG,GAAX,CAAf;AACD;AACF;;AA7agB;;AA+anB,SACEjB,YADF","sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nclass SimplexNoise {\n  /**\n   * You can pass in a random number generator object if you like.\n   * It is assumed to have a random() method.\n   */\n  constructor(r = Math) {\n    __publicField(this, \"grad3\", [\n      [1, 1, 0],\n      [-1, 1, 0],\n      [1, -1, 0],\n      [-1, -1, 0],\n      [1, 0, 1],\n      [-1, 0, 1],\n      [1, 0, -1],\n      [-1, 0, -1],\n      [0, 1, 1],\n      [0, -1, 1],\n      [0, 1, -1],\n      [0, -1, -1]\n    ]);\n    __publicField(this, \"grad4\", [\n      [0, 1, 1, 1],\n      [0, 1, 1, -1],\n      [0, 1, -1, 1],\n      [0, 1, -1, -1],\n      [0, -1, 1, 1],\n      [0, -1, 1, -1],\n      [0, -1, -1, 1],\n      [0, -1, -1, -1],\n      [1, 0, 1, 1],\n      [1, 0, 1, -1],\n      [1, 0, -1, 1],\n      [1, 0, -1, -1],\n      [-1, 0, 1, 1],\n      [-1, 0, 1, -1],\n      [-1, 0, -1, 1],\n      [-1, 0, -1, -1],\n      [1, 1, 0, 1],\n      [1, 1, 0, -1],\n      [1, -1, 0, 1],\n      [1, -1, 0, -1],\n      [-1, 1, 0, 1],\n      [-1, 1, 0, -1],\n      [-1, -1, 0, 1],\n      [-1, -1, 0, -1],\n      [1, 1, 1, 0],\n      [1, 1, -1, 0],\n      [1, -1, 1, 0],\n      [1, -1, -1, 0],\n      [-1, 1, 1, 0],\n      [-1, 1, -1, 0],\n      [-1, -1, 1, 0],\n      [-1, -1, -1, 0]\n    ]);\n    __publicField(this, \"p\", []);\n    // To remove the need for index wrapping, double the permutation table length\n    __publicField(this, \"perm\", []);\n    // A lookup table to traverse the simplex around a given point in 4D.\n    // Details can be found where this table is used, in the 4D noise method.\n    __publicField(this, \"simplex\", [\n      [0, 1, 2, 3],\n      [0, 1, 3, 2],\n      [0, 0, 0, 0],\n      [0, 2, 3, 1],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [1, 2, 3, 0],\n      [0, 2, 1, 3],\n      [0, 0, 0, 0],\n      [0, 3, 1, 2],\n      [0, 3, 2, 1],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [1, 3, 2, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [1, 2, 0, 3],\n      [0, 0, 0, 0],\n      [1, 3, 0, 2],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [2, 3, 0, 1],\n      [2, 3, 1, 0],\n      [1, 0, 2, 3],\n      [1, 0, 3, 2],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [2, 0, 3, 1],\n      [0, 0, 0, 0],\n      [2, 1, 3, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [2, 0, 1, 3],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [3, 0, 1, 2],\n      [3, 0, 2, 1],\n      [0, 0, 0, 0],\n      [3, 1, 2, 0],\n      [2, 1, 0, 3],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [3, 1, 0, 2],\n      [0, 0, 0, 0],\n      [3, 2, 0, 1],\n      [3, 2, 1, 0]\n    ]);\n    __publicField(this, \"dot\", (g, x, y) => {\n      return g[0] * x + g[1] * y;\n    });\n    __publicField(this, \"dot3\", (g, x, y, z) => {\n      return g[0] * x + g[1] * y + g[2] * z;\n    });\n    __publicField(this, \"dot4\", (g, x, y, z, w) => {\n      return g[0] * x + g[1] * y + g[2] * z + g[3] * w;\n    });\n    __publicField(this, \"noise\", (xin, yin) => {\n      let n0;\n      let n1;\n      let n2;\n      const F2 = 0.5 * (Math.sqrt(3) - 1);\n      const s = (xin + yin) * F2;\n      const i = Math.floor(xin + s);\n      const j = Math.floor(yin + s);\n      const G2 = (3 - Math.sqrt(3)) / 6;\n      const t = (i + j) * G2;\n      const X0 = i - t;\n      const Y0 = j - t;\n      const x0 = xin - X0;\n      const y0 = yin - Y0;\n      let i1 = 0;\n      let j1 = 1;\n      if (x0 > y0) {\n        i1 = 1;\n        j1 = 0;\n      }\n      const x1 = x0 - i1 + G2;\n      const y1 = y0 - j1 + G2;\n      const x2 = x0 - 1 + 2 * G2;\n      const y2 = y0 - 1 + 2 * G2;\n      const ii = i & 255;\n      const jj = j & 255;\n      const gi0 = this.perm[ii + this.perm[jj]] % 12;\n      const gi1 = this.perm[ii + i1 + this.perm[jj + j1]] % 12;\n      const gi2 = this.perm[ii + 1 + this.perm[jj + 1]] % 12;\n      let t0 = 0.5 - x0 * x0 - y0 * y0;\n      if (t0 < 0) {\n        n0 = 0;\n      } else {\n        t0 *= t0;\n        n0 = t0 * t0 * this.dot(this.grad3[gi0], x0, y0);\n      }\n      let t1 = 0.5 - x1 * x1 - y1 * y1;\n      if (t1 < 0) {\n        n1 = 0;\n      } else {\n        t1 *= t1;\n        n1 = t1 * t1 * this.dot(this.grad3[gi1], x1, y1);\n      }\n      let t2 = 0.5 - x2 * x2 - y2 * y2;\n      if (t2 < 0) {\n        n2 = 0;\n      } else {\n        t2 *= t2;\n        n2 = t2 * t2 * this.dot(this.grad3[gi2], x2, y2);\n      }\n      return 70 * (n0 + n1 + n2);\n    });\n    // 3D simplex noise\n    __publicField(this, \"noise3d\", (xin, yin, zin) => {\n      let n0;\n      let n1;\n      let n2;\n      let n3;\n      const F3 = 1 / 3;\n      const s = (xin + yin + zin) * F3;\n      const i = Math.floor(xin + s);\n      const j = Math.floor(yin + s);\n      const k = Math.floor(zin + s);\n      const G3 = 1 / 6;\n      const t = (i + j + k) * G3;\n      const X0 = i - t;\n      const Y0 = j - t;\n      const Z0 = k - t;\n      const x0 = xin - X0;\n      const y0 = yin - Y0;\n      const z0 = zin - Z0;\n      let i1;\n      let j1;\n      let k1;\n      let i2;\n      let j2;\n      let k2;\n      if (x0 >= y0) {\n        if (y0 >= z0) {\n          i1 = 1;\n          j1 = 0;\n          k1 = 0;\n          i2 = 1;\n          j2 = 1;\n          k2 = 0;\n        } else if (x0 >= z0) {\n          i1 = 1;\n          j1 = 0;\n          k1 = 0;\n          i2 = 1;\n          j2 = 0;\n          k2 = 1;\n        } else {\n          i1 = 0;\n          j1 = 0;\n          k1 = 1;\n          i2 = 1;\n          j2 = 0;\n          k2 = 1;\n        }\n      } else {\n        if (y0 < z0) {\n          i1 = 0;\n          j1 = 0;\n          k1 = 1;\n          i2 = 0;\n          j2 = 1;\n          k2 = 1;\n        } else if (x0 < z0) {\n          i1 = 0;\n          j1 = 1;\n          k1 = 0;\n          i2 = 0;\n          j2 = 1;\n          k2 = 1;\n        } else {\n          i1 = 0;\n          j1 = 1;\n          k1 = 0;\n          i2 = 1;\n          j2 = 1;\n          k2 = 0;\n        }\n      }\n      const x1 = x0 - i1 + G3;\n      const y1 = y0 - j1 + G3;\n      const z1 = z0 - k1 + G3;\n      const x2 = x0 - i2 + 2 * G3;\n      const y2 = y0 - j2 + 2 * G3;\n      const z2 = z0 - k2 + 2 * G3;\n      const x3 = x0 - 1 + 3 * G3;\n      const y3 = y0 - 1 + 3 * G3;\n      const z3 = z0 - 1 + 3 * G3;\n      const ii = i & 255;\n      const jj = j & 255;\n      const kk = k & 255;\n      const gi0 = this.perm[ii + this.perm[jj + this.perm[kk]]] % 12;\n      const gi1 = this.perm[ii + i1 + this.perm[jj + j1 + this.perm[kk + k1]]] % 12;\n      const gi2 = this.perm[ii + i2 + this.perm[jj + j2 + this.perm[kk + k2]]] % 12;\n      const gi3 = this.perm[ii + 1 + this.perm[jj + 1 + this.perm[kk + 1]]] % 12;\n      let t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0;\n      if (t0 < 0) {\n        n0 = 0;\n      } else {\n        t0 *= t0;\n        n0 = t0 * t0 * this.dot3(this.grad3[gi0], x0, y0, z0);\n      }\n      let t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1;\n      if (t1 < 0) {\n        n1 = 0;\n      } else {\n        t1 *= t1;\n        n1 = t1 * t1 * this.dot3(this.grad3[gi1], x1, y1, z1);\n      }\n      let t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2;\n      if (t2 < 0) {\n        n2 = 0;\n      } else {\n        t2 *= t2;\n        n2 = t2 * t2 * this.dot3(this.grad3[gi2], x2, y2, z2);\n      }\n      let t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3;\n      if (t3 < 0) {\n        n3 = 0;\n      } else {\n        t3 *= t3;\n        n3 = t3 * t3 * this.dot3(this.grad3[gi3], x3, y3, z3);\n      }\n      return 32 * (n0 + n1 + n2 + n3);\n    });\n    // 4D simplex noise\n    __publicField(this, \"noise4d\", (x, y, z, w) => {\n      const grad4 = this.grad4;\n      const simplex = this.simplex;\n      const perm = this.perm;\n      const F4 = (Math.sqrt(5) - 1) / 4;\n      const G4 = (5 - Math.sqrt(5)) / 20;\n      let n0;\n      let n1;\n      let n2;\n      let n3;\n      let n4;\n      const s = (x + y + z + w) * F4;\n      const i = Math.floor(x + s);\n      const j = Math.floor(y + s);\n      const k = Math.floor(z + s);\n      const l = Math.floor(w + s);\n      const t = (i + j + k + l) * G4;\n      const X0 = i - t;\n      const Y0 = j - t;\n      const Z0 = k - t;\n      const W0 = l - t;\n      const x0 = x - X0;\n      const y0 = y - Y0;\n      const z0 = z - Z0;\n      const w0 = w - W0;\n      const c1 = x0 > y0 ? 32 : 0;\n      const c2 = x0 > z0 ? 16 : 0;\n      const c3 = y0 > z0 ? 8 : 0;\n      const c4 = x0 > w0 ? 4 : 0;\n      const c5 = y0 > w0 ? 2 : 0;\n      const c6 = z0 > w0 ? 1 : 0;\n      const c = c1 + c2 + c3 + c4 + c5 + c6;\n      let i1;\n      let j1;\n      let k1;\n      let l1;\n      let i2;\n      let j2;\n      let k2;\n      let l2;\n      let i3;\n      let j3;\n      let k3;\n      let l3;\n      i1 = simplex[c][0] >= 3 ? 1 : 0;\n      j1 = simplex[c][1] >= 3 ? 1 : 0;\n      k1 = simplex[c][2] >= 3 ? 1 : 0;\n      l1 = simplex[c][3] >= 3 ? 1 : 0;\n      i2 = simplex[c][0] >= 2 ? 1 : 0;\n      j2 = simplex[c][1] >= 2 ? 1 : 0;\n      k2 = simplex[c][2] >= 2 ? 1 : 0;\n      l2 = simplex[c][3] >= 2 ? 1 : 0;\n      i3 = simplex[c][0] >= 1 ? 1 : 0;\n      j3 = simplex[c][1] >= 1 ? 1 : 0;\n      k3 = simplex[c][2] >= 1 ? 1 : 0;\n      l3 = simplex[c][3] >= 1 ? 1 : 0;\n      const x1 = x0 - i1 + G4;\n      const y1 = y0 - j1 + G4;\n      const z1 = z0 - k1 + G4;\n      const w1 = w0 - l1 + G4;\n      const x2 = x0 - i2 + 2 * G4;\n      const y2 = y0 - j2 + 2 * G4;\n      const z2 = z0 - k2 + 2 * G4;\n      const w2 = w0 - l2 + 2 * G4;\n      const x3 = x0 - i3 + 3 * G4;\n      const y3 = y0 - j3 + 3 * G4;\n      const z3 = z0 - k3 + 3 * G4;\n      const w3 = w0 - l3 + 3 * G4;\n      const x4 = x0 - 1 + 4 * G4;\n      const y4 = y0 - 1 + 4 * G4;\n      const z4 = z0 - 1 + 4 * G4;\n      const w4 = w0 - 1 + 4 * G4;\n      const ii = i & 255;\n      const jj = j & 255;\n      const kk = k & 255;\n      const ll = l & 255;\n      const gi0 = perm[ii + perm[jj + perm[kk + perm[ll]]]] % 32;\n      const gi1 = perm[ii + i1 + perm[jj + j1 + perm[kk + k1 + perm[ll + l1]]]] % 32;\n      const gi2 = perm[ii + i2 + perm[jj + j2 + perm[kk + k2 + perm[ll + l2]]]] % 32;\n      const gi3 = perm[ii + i3 + perm[jj + j3 + perm[kk + k3 + perm[ll + l3]]]] % 32;\n      const gi4 = perm[ii + 1 + perm[jj + 1 + perm[kk + 1 + perm[ll + 1]]]] % 32;\n      let t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0 - w0 * w0;\n      if (t0 < 0) {\n        n0 = 0;\n      } else {\n        t0 *= t0;\n        n0 = t0 * t0 * this.dot4(grad4[gi0], x0, y0, z0, w0);\n      }\n      let t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1 - w1 * w1;\n      if (t1 < 0) {\n        n1 = 0;\n      } else {\n        t1 *= t1;\n        n1 = t1 * t1 * this.dot4(grad4[gi1], x1, y1, z1, w1);\n      }\n      let t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2 - w2 * w2;\n      if (t2 < 0) {\n        n2 = 0;\n      } else {\n        t2 *= t2;\n        n2 = t2 * t2 * this.dot4(grad4[gi2], x2, y2, z2, w2);\n      }\n      let t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3 - w3 * w3;\n      if (t3 < 0) {\n        n3 = 0;\n      } else {\n        t3 *= t3;\n        n3 = t3 * t3 * this.dot4(grad4[gi3], x3, y3, z3, w3);\n      }\n      let t4 = 0.6 - x4 * x4 - y4 * y4 - z4 * z4 - w4 * w4;\n      if (t4 < 0) {\n        n4 = 0;\n      } else {\n        t4 *= t4;\n        n4 = t4 * t4 * this.dot4(grad4[gi4], x4, y4, z4, w4);\n      }\n      return 27 * (n0 + n1 + n2 + n3 + n4);\n    });\n    for (let i = 0; i < 256; i++) {\n      this.p[i] = Math.floor(r.random() * 256);\n    }\n    for (let i = 0; i < 512; i++) {\n      this.perm[i] = this.p[i & 255];\n    }\n  }\n}\nexport {\n  SimplexNoise\n};\n"]},"metadata":{},"sourceType":"module"}