{"ast":null,"code":"import _classCallCheck from \"/Users/theodaguier/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/theodaguier/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/Users/theodaguier/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/theodaguier/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/theodaguier/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/theodaguier/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { WebGLRenderTarget, HalfFloatType } from \"three\";\nimport { SSAARenderPass } from \"./SSAARenderPass.js\";\n\nvar TAARenderPass = /*#__PURE__*/function (_SSAARenderPass) {\n  _inherits(TAARenderPass, _SSAARenderPass);\n\n  var _super = _createSuper(TAARenderPass);\n\n  function TAARenderPass(scene, camera, clearColor, clearAlpha) {\n    var _this;\n\n    _classCallCheck(this, TAARenderPass);\n\n    _this = _super.call(this, scene, camera, clearColor, clearAlpha);\n    _this.sampleLevel = 0;\n    _this.accumulate = false;\n    return _this;\n  }\n\n  _createClass(TAARenderPass, [{\n    key: \"render\",\n    value: function render(renderer, writeBuffer, readBuffer, deltaTime) {\n      if (this.accumulate === false) {\n        _get(_getPrototypeOf(TAARenderPass.prototype), \"render\", this).call(this, renderer, writeBuffer, readBuffer, deltaTime);\n\n        this.accumulateIndex = -1;\n        return;\n      }\n\n      var jitterOffsets = _JitterVectors[5];\n\n      if (this.sampleRenderTarget === void 0) {\n        this.sampleRenderTarget = new WebGLRenderTarget(readBuffer.width, readBuffer.height, {\n          type: HalfFloatType\n        });\n        this.sampleRenderTarget.texture.name = \"TAARenderPass.sample\";\n      }\n\n      if (this.holdRenderTarget === void 0) {\n        this.holdRenderTarget = new WebGLRenderTarget(readBuffer.width, readBuffer.height, {\n          type: HalfFloatType\n        });\n        this.holdRenderTarget.texture.name = \"TAARenderPass.hold\";\n      }\n\n      if (this.accumulateIndex === -1) {\n        _get(_getPrototypeOf(TAARenderPass.prototype), \"render\", this).call(this, renderer, this.holdRenderTarget, readBuffer, deltaTime);\n\n        this.accumulateIndex = 0;\n      }\n\n      var autoClear = renderer.autoClear;\n      renderer.autoClear = false;\n      var sampleWeight = 1 / jitterOffsets.length;\n\n      if (this.accumulateIndex >= 0 && this.accumulateIndex < jitterOffsets.length) {\n        this.copyUniforms[\"opacity\"].value = sampleWeight;\n        this.copyUniforms[\"tDiffuse\"].value = writeBuffer.texture;\n        var numSamplesPerFrame = Math.pow(2, this.sampleLevel);\n\n        for (var i = 0; i < numSamplesPerFrame; i++) {\n          var j = this.accumulateIndex;\n          var jitterOffset = jitterOffsets[j];\n\n          if (this.camera.setViewOffset) {\n            this.camera.setViewOffset(readBuffer.width, readBuffer.height, jitterOffset[0] * 0.0625, jitterOffset[1] * 0.0625, // 0.0625 = 1 / 16\n            readBuffer.width, readBuffer.height);\n          }\n\n          renderer.setRenderTarget(writeBuffer);\n          renderer.clear();\n          renderer.render(this.scene, this.camera);\n          renderer.setRenderTarget(this.sampleRenderTarget);\n          if (this.accumulateIndex === 0) renderer.clear();\n          this.fsQuad.render(renderer);\n          this.accumulateIndex++;\n          if (this.accumulateIndex >= jitterOffsets.length) break;\n        }\n\n        if (this.camera.clearViewOffset) this.camera.clearViewOffset();\n      }\n\n      var accumulationWeight = this.accumulateIndex * sampleWeight;\n\n      if (accumulationWeight > 0) {\n        this.copyUniforms[\"opacity\"].value = 1;\n        this.copyUniforms[\"tDiffuse\"].value = this.sampleRenderTarget.texture;\n        renderer.setRenderTarget(writeBuffer);\n        renderer.clear();\n        this.fsQuad.render(renderer);\n      }\n\n      if (accumulationWeight < 1) {\n        this.copyUniforms[\"opacity\"].value = 1 - accumulationWeight;\n        this.copyUniforms[\"tDiffuse\"].value = this.holdRenderTarget.texture;\n        renderer.setRenderTarget(writeBuffer);\n        if (accumulationWeight === 0) renderer.clear();\n        this.fsQuad.render(renderer);\n      }\n\n      renderer.autoClear = autoClear;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(TAARenderPass.prototype), \"dispose\", this).call(this);\n\n      if (this.sampleRenderTarget !== void 0) this.sampleRenderTarget.dispose();\n      if (this.holdRenderTarget !== void 0) this.holdRenderTarget.dispose();\n    }\n  }]);\n\n  return TAARenderPass;\n}(SSAARenderPass);\n\nvar _JitterVectors = [[[0, 0]], [[4, 4], [-4, -4]], [[-2, -6], [6, -2], [-6, 2], [2, 6]], [[1, -3], [-1, 3], [5, 1], [-3, -5], [-5, 5], [-7, -1], [3, 7], [7, -7]], [[1, 1], [-1, -3], [-3, 2], [4, -1], [-5, -2], [2, 5], [5, 3], [3, -5], [-2, 6], [0, -7], [-4, -6], [-6, 4], [-8, 0], [7, -4], [6, 7], [-7, -8]], [[-4, -7], [-7, -5], [-3, -5], [-5, -4], [-1, -4], [-2, -2], [-6, -1], [-4, 0], [-7, 1], [-1, 2], [-6, 3], [-3, 3], [-7, 6], [-3, 6], [-5, 7], [-1, 7], [5, -7], [1, -6], [6, -5], [4, -4], [2, -3], [7, -2], [1, -1], [4, -1], [2, 1], [6, 2], [0, 4], [4, 4], [2, 5], [7, 5], [5, 6], [3, 7]]];\nexport { TAARenderPass };","map":{"version":3,"sources":["/Users/theodaguier/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/three-stdlib/postprocessing/TAARenderPass.js"],"names":["WebGLRenderTarget","HalfFloatType","SSAARenderPass","TAARenderPass","scene","camera","clearColor","clearAlpha","sampleLevel","accumulate","renderer","writeBuffer","readBuffer","deltaTime","accumulateIndex","jitterOffsets","_JitterVectors","sampleRenderTarget","width","height","type","texture","name","holdRenderTarget","autoClear","sampleWeight","length","copyUniforms","value","numSamplesPerFrame","Math","pow","i","j","jitterOffset","setViewOffset","setRenderTarget","clear","render","fsQuad","clearViewOffset","accumulationWeight","dispose"],"mappings":"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","sourcesContent":["import { WebGLRenderTarget, HalfFloatType } from \"three\";\nimport { SSAARenderPass } from \"./SSAARenderPass.js\";\nclass TAARenderPass extends SSAARenderPass {\n  constructor(scene, camera, clearColor, clearAlpha) {\n    super(scene, camera, clearColor, clearAlpha);\n    this.sampleLevel = 0;\n    this.accumulate = false;\n  }\n  render(renderer, writeBuffer, readBuffer, deltaTime) {\n    if (this.accumulate === false) {\n      super.render(renderer, writeBuffer, readBuffer, deltaTime);\n      this.accumulateIndex = -1;\n      return;\n    }\n    const jitterOffsets = _JitterVectors[5];\n    if (this.sampleRenderTarget === void 0) {\n      this.sampleRenderTarget = new WebGLRenderTarget(readBuffer.width, readBuffer.height, { type: HalfFloatType });\n      this.sampleRenderTarget.texture.name = \"TAARenderPass.sample\";\n    }\n    if (this.holdRenderTarget === void 0) {\n      this.holdRenderTarget = new WebGLRenderTarget(readBuffer.width, readBuffer.height, { type: HalfFloatType });\n      this.holdRenderTarget.texture.name = \"TAARenderPass.hold\";\n    }\n    if (this.accumulateIndex === -1) {\n      super.render(renderer, this.holdRenderTarget, readBuffer, deltaTime);\n      this.accumulateIndex = 0;\n    }\n    const autoClear = renderer.autoClear;\n    renderer.autoClear = false;\n    const sampleWeight = 1 / jitterOffsets.length;\n    if (this.accumulateIndex >= 0 && this.accumulateIndex < jitterOffsets.length) {\n      this.copyUniforms[\"opacity\"].value = sampleWeight;\n      this.copyUniforms[\"tDiffuse\"].value = writeBuffer.texture;\n      const numSamplesPerFrame = Math.pow(2, this.sampleLevel);\n      for (let i = 0; i < numSamplesPerFrame; i++) {\n        const j = this.accumulateIndex;\n        const jitterOffset = jitterOffsets[j];\n        if (this.camera.setViewOffset) {\n          this.camera.setViewOffset(\n            readBuffer.width,\n            readBuffer.height,\n            jitterOffset[0] * 0.0625,\n            jitterOffset[1] * 0.0625,\n            // 0.0625 = 1 / 16\n            readBuffer.width,\n            readBuffer.height\n          );\n        }\n        renderer.setRenderTarget(writeBuffer);\n        renderer.clear();\n        renderer.render(this.scene, this.camera);\n        renderer.setRenderTarget(this.sampleRenderTarget);\n        if (this.accumulateIndex === 0)\n          renderer.clear();\n        this.fsQuad.render(renderer);\n        this.accumulateIndex++;\n        if (this.accumulateIndex >= jitterOffsets.length)\n          break;\n      }\n      if (this.camera.clearViewOffset)\n        this.camera.clearViewOffset();\n    }\n    const accumulationWeight = this.accumulateIndex * sampleWeight;\n    if (accumulationWeight > 0) {\n      this.copyUniforms[\"opacity\"].value = 1;\n      this.copyUniforms[\"tDiffuse\"].value = this.sampleRenderTarget.texture;\n      renderer.setRenderTarget(writeBuffer);\n      renderer.clear();\n      this.fsQuad.render(renderer);\n    }\n    if (accumulationWeight < 1) {\n      this.copyUniforms[\"opacity\"].value = 1 - accumulationWeight;\n      this.copyUniforms[\"tDiffuse\"].value = this.holdRenderTarget.texture;\n      renderer.setRenderTarget(writeBuffer);\n      if (accumulationWeight === 0)\n        renderer.clear();\n      this.fsQuad.render(renderer);\n    }\n    renderer.autoClear = autoClear;\n  }\n  dispose() {\n    super.dispose();\n    if (this.sampleRenderTarget !== void 0)\n      this.sampleRenderTarget.dispose();\n    if (this.holdRenderTarget !== void 0)\n      this.holdRenderTarget.dispose();\n  }\n}\nconst _JitterVectors = [\n  [\n    [0, 0]\n  ],\n  [\n    [4, 4],\n    [-4, -4]\n  ],\n  [\n    [-2, -6],\n    [6, -2],\n    [-6, 2],\n    [2, 6]\n  ],\n  [\n    [1, -3],\n    [-1, 3],\n    [5, 1],\n    [-3, -5],\n    [-5, 5],\n    [-7, -1],\n    [3, 7],\n    [7, -7]\n  ],\n  [\n    [1, 1],\n    [-1, -3],\n    [-3, 2],\n    [4, -1],\n    [-5, -2],\n    [2, 5],\n    [5, 3],\n    [3, -5],\n    [-2, 6],\n    [0, -7],\n    [-4, -6],\n    [-6, 4],\n    [-8, 0],\n    [7, -4],\n    [6, 7],\n    [-7, -8]\n  ],\n  [\n    [-4, -7],\n    [-7, -5],\n    [-3, -5],\n    [-5, -4],\n    [-1, -4],\n    [-2, -2],\n    [-6, -1],\n    [-4, 0],\n    [-7, 1],\n    [-1, 2],\n    [-6, 3],\n    [-3, 3],\n    [-7, 6],\n    [-3, 6],\n    [-5, 7],\n    [-1, 7],\n    [5, -7],\n    [1, -6],\n    [6, -5],\n    [4, -4],\n    [2, -3],\n    [7, -2],\n    [1, -1],\n    [4, -1],\n    [2, 1],\n    [6, 2],\n    [0, 4],\n    [4, 4],\n    [2, 5],\n    [7, 5],\n    [5, 6],\n    [3, 7]\n  ]\n];\nexport {\n  TAARenderPass\n};\n"]},"metadata":{},"sourceType":"module"}