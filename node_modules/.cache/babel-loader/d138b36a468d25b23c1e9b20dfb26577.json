{"ast":null,"code":"import _classCallCheck from \"/Users/theodaguier/_workdir/dev/pro/e-do/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _inherits from \"/Users/theodaguier/_workdir/dev/pro/e-do/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/theodaguier/_workdir/dev/pro/e-do/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { BufferGeometry, Matrix4, Vector3, Vector4, BufferAttribute } from \"three\";\n\nvar TeapotGeometry = /*#__PURE__*/function (_BufferGeometry) {\n  _inherits(TeapotGeometry, _BufferGeometry);\n\n  var _super = _createSuper(TeapotGeometry);\n\n  function TeapotGeometry(size, segments, bottom, lid, body, fitLid, blinn) {\n    var _this;\n\n    _classCallCheck(this, TeapotGeometry);\n\n    var teapotPatches = [\n    /*rim*/\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 3, 16, 17, 18, 7, 19, 20, 21, 11, 22, 23, 24, 15, 25, 26, 27, 18, 28, 29, 30, 21, 31, 32, 33, 24, 34, 35, 36, 27, 37, 38, 39, 30, 40, 41, 0, 33, 42, 43, 4, 36, 44, 45, 8, 39, 46, 47, 12,\n    /*body*/\n    12, 13, 14, 15, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 15, 25, 26, 27, 51, 60, 61, 62, 55, 63, 64, 65, 59, 66, 67, 68, 27, 37, 38, 39, 62, 69, 70, 71, 65, 72, 73, 74, 68, 75, 76, 77, 39, 46, 47, 12, 71, 78, 79, 48, 74, 80, 81, 52, 77, 82, 83, 56, 56, 57, 58, 59, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 59, 66, 67, 68, 87, 96, 97, 98, 91, 99, 100, 101, 95, 102, 103, 104, 68, 75, 76, 77, 98, 105, 106, 107, 101, 108, 109, 110, 104, 111, 112, 113, 77, 82, 83, 56, 107, 114, 115, 84, 110, 116, 117, 88, 113, 118, 119, 92,\n    /*handle*/\n    120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 123, 136, 137, 120, 127, 138, 139, 124, 131, 140, 141, 128, 135, 142, 143, 132, 132, 133, 134, 135, 144, 145, 146, 147, 148, 149, 150, 151, 68, 152, 153, 154, 135, 142, 143, 132, 147, 155, 156, 144, 151, 157, 158, 148, 154, 159, 160, 68,\n    /*spout*/\n    161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 164, 177, 178, 161, 168, 179, 180, 165, 172, 181, 182, 169, 176, 183, 184, 173, 173, 174, 175, 176, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 176, 183, 184, 173, 188, 197, 198, 185, 192, 199, 200, 189, 196, 201, 202, 193,\n    /*lid*/\n    203, 203, 203, 203, 204, 205, 206, 207, 208, 208, 208, 208, 209, 210, 211, 212, 203, 203, 203, 203, 207, 213, 214, 215, 208, 208, 208, 208, 212, 216, 217, 218, 203, 203, 203, 203, 215, 219, 220, 221, 208, 208, 208, 208, 218, 222, 223, 224, 203, 203, 203, 203, 221, 225, 226, 204, 208, 208, 208, 208, 224, 227, 228, 209, 209, 210, 211, 212, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 212, 216, 217, 218, 232, 241, 242, 243, 236, 244, 245, 246, 240, 247, 248, 249, 218, 222, 223, 224, 243, 250, 251, 252, 246, 253, 254, 255, 249, 256, 257, 258, 224, 227, 228, 209, 252, 259, 260, 229, 255, 261, 262, 233, 258, 263, 264, 237,\n    /*bottom*/\n    265, 265, 265, 265, 266, 267, 268, 269, 270, 271, 272, 273, 92, 119, 118, 113, 265, 265, 265, 265, 269, 274, 275, 276, 273, 277, 278, 279, 113, 112, 111, 104, 265, 265, 265, 265, 276, 280, 281, 282, 279, 283, 284, 285, 104, 103, 102, 95, 265, 265, 265, 265, 282, 286, 287, 266, 285, 288, 289, 270, 95, 94, 93, 92];\n    var teapotVertices = [1.4, 0, 2.4, 1.4, -0.784, 2.4, 0.784, -1.4, 2.4, 0, -1.4, 2.4, 1.3375, 0, 2.53125, 1.3375, -0.749, 2.53125, 0.749, -1.3375, 2.53125, 0, -1.3375, 2.53125, 1.4375, 0, 2.53125, 1.4375, -0.805, 2.53125, 0.805, -1.4375, 2.53125, 0, -1.4375, 2.53125, 1.5, 0, 2.4, 1.5, -0.84, 2.4, 0.84, -1.5, 2.4, 0, -1.5, 2.4, -0.784, -1.4, 2.4, -1.4, -0.784, 2.4, -1.4, 0, 2.4, -0.749, -1.3375, 2.53125, -1.3375, -0.749, 2.53125, -1.3375, 0, 2.53125, -0.805, -1.4375, 2.53125, -1.4375, -0.805, 2.53125, -1.4375, 0, 2.53125, -0.84, -1.5, 2.4, -1.5, -0.84, 2.4, -1.5, 0, 2.4, -1.4, 0.784, 2.4, -0.784, 1.4, 2.4, 0, 1.4, 2.4, -1.3375, 0.749, 2.53125, -0.749, 1.3375, 2.53125, 0, 1.3375, 2.53125, -1.4375, 0.805, 2.53125, -0.805, 1.4375, 2.53125, 0, 1.4375, 2.53125, -1.5, 0.84, 2.4, -0.84, 1.5, 2.4, 0, 1.5, 2.4, 0.784, 1.4, 2.4, 1.4, 0.784, 2.4, 0.749, 1.3375, 2.53125, 1.3375, 0.749, 2.53125, 0.805, 1.4375, 2.53125, 1.4375, 0.805, 2.53125, 0.84, 1.5, 2.4, 1.5, 0.84, 2.4, 1.75, 0, 1.875, 1.75, -0.98, 1.875, 0.98, -1.75, 1.875, 0, -1.75, 1.875, 2, 0, 1.35, 2, -1.12, 1.35, 1.12, -2, 1.35, 0, -2, 1.35, 2, 0, 0.9, 2, -1.12, 0.9, 1.12, -2, 0.9, 0, -2, 0.9, -0.98, -1.75, 1.875, -1.75, -0.98, 1.875, -1.75, 0, 1.875, -1.12, -2, 1.35, -2, -1.12, 1.35, -2, 0, 1.35, -1.12, -2, 0.9, -2, -1.12, 0.9, -2, 0, 0.9, -1.75, 0.98, 1.875, -0.98, 1.75, 1.875, 0, 1.75, 1.875, -2, 1.12, 1.35, -1.12, 2, 1.35, 0, 2, 1.35, -2, 1.12, 0.9, -1.12, 2, 0.9, 0, 2, 0.9, 0.98, 1.75, 1.875, 1.75, 0.98, 1.875, 1.12, 2, 1.35, 2, 1.12, 1.35, 1.12, 2, 0.9, 2, 1.12, 0.9, 2, 0, 0.45, 2, -1.12, 0.45, 1.12, -2, 0.45, 0, -2, 0.45, 1.5, 0, 0.225, 1.5, -0.84, 0.225, 0.84, -1.5, 0.225, 0, -1.5, 0.225, 1.5, 0, 0.15, 1.5, -0.84, 0.15, 0.84, -1.5, 0.15, 0, -1.5, 0.15, -1.12, -2, 0.45, -2, -1.12, 0.45, -2, 0, 0.45, -0.84, -1.5, 0.225, -1.5, -0.84, 0.225, -1.5, 0, 0.225, -0.84, -1.5, 0.15, -1.5, -0.84, 0.15, -1.5, 0, 0.15, -2, 1.12, 0.45, -1.12, 2, 0.45, 0, 2, 0.45, -1.5, 0.84, 0.225, -0.84, 1.5, 0.225, 0, 1.5, 0.225, -1.5, 0.84, 0.15, -0.84, 1.5, 0.15, 0, 1.5, 0.15, 1.12, 2, 0.45, 2, 1.12, 0.45, 0.84, 1.5, 0.225, 1.5, 0.84, 0.225, 0.84, 1.5, 0.15, 1.5, 0.84, 0.15, -1.6, 0, 2.025, -1.6, -0.3, 2.025, -1.5, -0.3, 2.25, -1.5, 0, 2.25, -2.3, 0, 2.025, -2.3, -0.3, 2.025, -2.5, -0.3, 2.25, -2.5, 0, 2.25, -2.7, 0, 2.025, -2.7, -0.3, 2.025, -3, -0.3, 2.25, -3, 0, 2.25, -2.7, 0, 1.8, -2.7, -0.3, 1.8, -3, -0.3, 1.8, -3, 0, 1.8, -1.5, 0.3, 2.25, -1.6, 0.3, 2.025, -2.5, 0.3, 2.25, -2.3, 0.3, 2.025, -3, 0.3, 2.25, -2.7, 0.3, 2.025, -3, 0.3, 1.8, -2.7, 0.3, 1.8, -2.7, 0, 1.575, -2.7, -0.3, 1.575, -3, -0.3, 1.35, -3, 0, 1.35, -2.5, 0, 1.125, -2.5, -0.3, 1.125, -2.65, -0.3, 0.9375, -2.65, 0, 0.9375, -2, -0.3, 0.9, -1.9, -0.3, 0.6, -1.9, 0, 0.6, -3, 0.3, 1.35, -2.7, 0.3, 1.575, -2.65, 0.3, 0.9375, -2.5, 0.3, 1.125, -1.9, 0.3, 0.6, -2, 0.3, 0.9, 1.7, 0, 1.425, 1.7, -0.66, 1.425, 1.7, -0.66, 0.6, 1.7, 0, 0.6, 2.6, 0, 1.425, 2.6, -0.66, 1.425, 3.1, -0.66, 0.825, 3.1, 0, 0.825, 2.3, 0, 2.1, 2.3, -0.25, 2.1, 2.4, -0.25, 2.025, 2.4, 0, 2.025, 2.7, 0, 2.4, 2.7, -0.25, 2.4, 3.3, -0.25, 2.4, 3.3, 0, 2.4, 1.7, 0.66, 0.6, 1.7, 0.66, 1.425, 3.1, 0.66, 0.825, 2.6, 0.66, 1.425, 2.4, 0.25, 2.025, 2.3, 0.25, 2.1, 3.3, 0.25, 2.4, 2.7, 0.25, 2.4, 2.8, 0, 2.475, 2.8, -0.25, 2.475, 3.525, -0.25, 2.49375, 3.525, 0, 2.49375, 2.9, 0, 2.475, 2.9, -0.15, 2.475, 3.45, -0.15, 2.5125, 3.45, 0, 2.5125, 2.8, 0, 2.4, 2.8, -0.15, 2.4, 3.2, -0.15, 2.4, 3.2, 0, 2.4, 3.525, 0.25, 2.49375, 2.8, 0.25, 2.475, 3.45, 0.15, 2.5125, 2.9, 0.15, 2.475, 3.2, 0.15, 2.4, 2.8, 0.15, 2.4, 0, 0, 3.15, 0.8, 0, 3.15, 0.8, -0.45, 3.15, 0.45, -0.8, 3.15, 0, -0.8, 3.15, 0, 0, 2.85, 0.2, 0, 2.7, 0.2, -0.112, 2.7, 0.112, -0.2, 2.7, 0, -0.2, 2.7, -0.45, -0.8, 3.15, -0.8, -0.45, 3.15, -0.8, 0, 3.15, -0.112, -0.2, 2.7, -0.2, -0.112, 2.7, -0.2, 0, 2.7, -0.8, 0.45, 3.15, -0.45, 0.8, 3.15, 0, 0.8, 3.15, -0.2, 0.112, 2.7, -0.112, 0.2, 2.7, 0, 0.2, 2.7, 0.45, 0.8, 3.15, 0.8, 0.45, 3.15, 0.112, 0.2, 2.7, 0.2, 0.112, 2.7, 0.4, 0, 2.55, 0.4, -0.224, 2.55, 0.224, -0.4, 2.55, 0, -0.4, 2.55, 1.3, 0, 2.55, 1.3, -0.728, 2.55, 0.728, -1.3, 2.55, 0, -1.3, 2.55, 1.3, 0, 2.4, 1.3, -0.728, 2.4, 0.728, -1.3, 2.4, 0, -1.3, 2.4, -0.224, -0.4, 2.55, -0.4, -0.224, 2.55, -0.4, 0, 2.55, -0.728, -1.3, 2.55, -1.3, -0.728, 2.55, -1.3, 0, 2.55, -0.728, -1.3, 2.4, -1.3, -0.728, 2.4, -1.3, 0, 2.4, -0.4, 0.224, 2.55, -0.224, 0.4, 2.55, 0, 0.4, 2.55, -1.3, 0.728, 2.55, -0.728, 1.3, 2.55, 0, 1.3, 2.55, -1.3, 0.728, 2.4, -0.728, 1.3, 2.4, 0, 1.3, 2.4, 0.224, 0.4, 2.55, 0.4, 0.224, 2.55, 0.728, 1.3, 2.55, 1.3, 0.728, 2.55, 0.728, 1.3, 2.4, 1.3, 0.728, 2.4, 0, 0, 0, 1.425, 0, 0, 1.425, 0.798, 0, 0.798, 1.425, 0, 0, 1.425, 0, 1.5, 0, 0.075, 1.5, 0.84, 0.075, 0.84, 1.5, 0.075, 0, 1.5, 0.075, -0.798, 1.425, 0, -1.425, 0.798, 0, -1.425, 0, 0, -0.84, 1.5, 0.075, -1.5, 0.84, 0.075, -1.5, 0, 0.075, -1.425, -0.798, 0, -0.798, -1.425, 0, 0, -1.425, 0, -1.5, -0.84, 0.075, -0.84, -1.5, 0.075, 0, -1.5, 0.075, 0.798, -1.425, 0, 1.425, -0.798, 0, 0.84, -1.5, 0.075, 1.5, -0.84, 0.075];\n    _this = _super.call(this);\n    size = size || 50;\n    segments = segments !== void 0 ? Math.max(2, Math.floor(segments) || 10) : 10;\n    bottom = bottom === void 0 ? true : bottom;\n    lid = lid === void 0 ? true : lid;\n    body = body === void 0 ? true : body;\n    fitLid = fitLid === void 0 ? true : fitLid;\n    var blinnScale = 1.3;\n    blinn = blinn === void 0 ? true : blinn;\n    var maxHeight = 3.15 * (blinn ? 1 : blinnScale);\n    var maxHeight2 = maxHeight / 2;\n    var trueSize = size / maxHeight2;\n    var numTriangles = bottom ? (8 * segments - 4) * segments : 0;\n    numTriangles += lid ? (16 * segments - 4) * segments : 0;\n    numTriangles += body ? 40 * segments * segments : 0;\n    var indices = new Uint32Array(numTriangles * 3);\n    var numVertices = bottom ? 4 : 0;\n    numVertices += lid ? 8 : 0;\n    numVertices += body ? 20 : 0;\n    numVertices *= (segments + 1) * (segments + 1);\n    var vertices = new Float32Array(numVertices * 3);\n    var normals = new Float32Array(numVertices * 3);\n    var uvs = new Float32Array(numVertices * 2);\n    var ms = new Matrix4();\n    ms.set(-1, 3, -3, 1, 3, -6, 3, 0, -3, 3, 0, 0, 1, 0, 0, 0);\n    var g = [];\n    var i, r, c;\n    var sp = [];\n    var tp = [];\n    var dsp = [];\n    var dtp = [];\n    var mgm = [];\n    var vert = [];\n    var sdir = [];\n    var tdir = [];\n    var norm = new Vector3();\n    var tcoord;\n    var sstep, tstep;\n    var vertPerRow;\n    var s, t, sval, tval, p;\n    var dsval = 0;\n    var dtval = 0;\n    var normOut = new Vector3();\n    var v1, v2, v3, v4;\n    var gmx = new Matrix4();\n    var tmtx = new Matrix4();\n    var vsp = new Vector4();\n    var vtp = new Vector4();\n    var vdsp = new Vector4();\n    var vdtp = new Vector4();\n    var vsdir = new Vector3();\n    var vtdir = new Vector3();\n    var mst = ms.clone();\n    mst.transpose();\n\n    var notDegenerate = function notDegenerate(vtx1, vtx2, vtx3) {\n      return !(vertices[vtx1 * 3] === vertices[vtx2 * 3] && vertices[vtx1 * 3 + 1] === vertices[vtx2 * 3 + 1] && vertices[vtx1 * 3 + 2] === vertices[vtx2 * 3 + 2] || vertices[vtx1 * 3] === vertices[vtx3 * 3] && vertices[vtx1 * 3 + 1] === vertices[vtx3 * 3 + 1] && vertices[vtx1 * 3 + 2] === vertices[vtx3 * 3 + 2] || vertices[vtx2 * 3] === vertices[vtx3 * 3] && vertices[vtx2 * 3 + 1] === vertices[vtx3 * 3 + 1] && vertices[vtx2 * 3 + 2] === vertices[vtx3 * 3 + 2]);\n    };\n\n    for (i = 0; i < 3; i++) {\n      mgm[i] = new Matrix4();\n    }\n\n    var minPatches = body ? 0 : 20;\n    var maxPatches = bottom ? 32 : 28;\n    vertPerRow = segments + 1;\n    var surfCount = 0;\n    var vertCount = 0;\n    var normCount = 0;\n    var uvCount = 0;\n    var indexCount = 0;\n\n    for (var surf = minPatches; surf < maxPatches; surf++) {\n      if (lid || surf < 20 || surf >= 28) {\n        for (i = 0; i < 3; i++) {\n          for (r = 0; r < 4; r++) {\n            for (c = 0; c < 4; c++) {\n              g[c * 4 + r] = teapotVertices[teapotPatches[surf * 16 + r * 4 + c] * 3 + i];\n\n              if (fitLid && surf >= 20 && surf < 28 && i !== 2) {\n                g[c * 4 + r] *= 1.077;\n              }\n\n              if (!blinn && i === 2) {\n                g[c * 4 + r] *= blinnScale;\n              }\n            }\n          }\n\n          gmx.set(g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], g[9], g[10], g[11], g[12], g[13], g[14], g[15]);\n          tmtx.multiplyMatrices(gmx, ms);\n          mgm[i].multiplyMatrices(mst, tmtx);\n        }\n\n        for (sstep = 0; sstep <= segments; sstep++) {\n          s = sstep / segments;\n\n          for (tstep = 0; tstep <= segments; tstep++) {\n            t = tstep / segments;\n\n            for (p = 4, sval = tval = 1; p--;) {\n              sp[p] = sval;\n              tp[p] = tval;\n              sval *= s;\n              tval *= t;\n\n              if (p === 3) {\n                dsp[p] = dtp[p] = 0;\n                dsval = dtval = 1;\n              } else {\n                dsp[p] = dsval * (3 - p);\n                dtp[p] = dtval * (3 - p);\n                dsval *= s;\n                dtval *= t;\n              }\n            }\n\n            vsp.fromArray(sp);\n            vtp.fromArray(tp);\n            vdsp.fromArray(dsp);\n            vdtp.fromArray(dtp);\n\n            for (i = 0; i < 3; i++) {\n              tcoord = vsp.clone();\n              tcoord.applyMatrix4(mgm[i]);\n              vert[i] = tcoord.dot(vtp);\n              tcoord = vdsp.clone();\n              tcoord.applyMatrix4(mgm[i]);\n              sdir[i] = tcoord.dot(vtp);\n              tcoord = vsp.clone();\n              tcoord.applyMatrix4(mgm[i]);\n              tdir[i] = tcoord.dot(vdtp);\n            }\n\n            vsdir.fromArray(sdir);\n            vtdir.fromArray(tdir);\n            norm.crossVectors(vtdir, vsdir);\n            norm.normalize();\n\n            if (vert[0] === 0 && vert[1] === 0) {\n              normOut.set(0, vert[2] > maxHeight2 ? 1 : -1, 0);\n            } else {\n              normOut.set(norm.x, norm.z, -norm.y);\n            }\n\n            vertices[vertCount++] = trueSize * vert[0];\n            vertices[vertCount++] = trueSize * (vert[2] - maxHeight2);\n            vertices[vertCount++] = -trueSize * vert[1];\n            normals[normCount++] = normOut.x;\n            normals[normCount++] = normOut.y;\n            normals[normCount++] = normOut.z;\n            uvs[uvCount++] = 1 - t;\n            uvs[uvCount++] = 1 - s;\n          }\n        }\n\n        for (sstep = 0; sstep < segments; sstep++) {\n          for (tstep = 0; tstep < segments; tstep++) {\n            v1 = surfCount * vertPerRow * vertPerRow + sstep * vertPerRow + tstep;\n            v2 = v1 + 1;\n            v3 = v2 + vertPerRow;\n            v4 = v1 + vertPerRow;\n\n            if (notDegenerate(v1, v2, v3)) {\n              indices[indexCount++] = v1;\n              indices[indexCount++] = v2;\n              indices[indexCount++] = v3;\n            }\n\n            if (notDegenerate(v1, v3, v4)) {\n              indices[indexCount++] = v1;\n              indices[indexCount++] = v3;\n              indices[indexCount++] = v4;\n            }\n          }\n        }\n\n        surfCount++;\n      }\n    }\n\n    _this.setIndex(new BufferAttribute(indices, 1));\n\n    _this.setAttribute(\"position\", new BufferAttribute(vertices, 3));\n\n    _this.setAttribute(\"normal\", new BufferAttribute(normals, 3));\n\n    _this.setAttribute(\"uv\", new BufferAttribute(uvs, 2));\n\n    _this.computeBoundingSphere();\n\n    return _this;\n  }\n\n  return TeapotGeometry;\n}(BufferGeometry);\n\nexport { TeapotGeometry };","map":{"version":3,"sources":["/Users/theodaguier/_workdir/dev/pro/e-do/E-Do-Studio/node_modules/three-stdlib/geometries/TeapotGeometry.js"],"names":["BufferGeometry","Matrix4","Vector3","Vector4","BufferAttribute","TeapotGeometry","size","segments","bottom","lid","body","fitLid","blinn","teapotPatches","teapotVertices","Math","max","floor","blinnScale","maxHeight","maxHeight2","trueSize","numTriangles","indices","Uint32Array","numVertices","vertices","Float32Array","normals","uvs","ms","set","g","i","r","c","sp","tp","dsp","dtp","mgm","vert","sdir","tdir","norm","tcoord","sstep","tstep","vertPerRow","s","t","sval","tval","p","dsval","dtval","normOut","v1","v2","v3","v4","gmx","tmtx","vsp","vtp","vdsp","vdtp","vsdir","vtdir","mst","clone","transpose","notDegenerate","vtx1","vtx2","vtx3","minPatches","maxPatches","surfCount","vertCount","normCount","uvCount","indexCount","surf","multiplyMatrices","fromArray","applyMatrix4","dot","crossVectors","normalize","x","z","y","setIndex","setAttribute","computeBoundingSphere"],"mappings":"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","sourcesContent":["import { BufferGeometry, Matrix4, Vector3, Vector4, BufferAttribute } from \"three\";\nclass TeapotGeometry extends BufferGeometry {\n  constructor(size, segments, bottom, lid, body, fitLid, blinn) {\n    const teapotPatches = [\n      /*rim*/\n      0,\n      1,\n      2,\n      3,\n      4,\n      5,\n      6,\n      7,\n      8,\n      9,\n      10,\n      11,\n      12,\n      13,\n      14,\n      15,\n      3,\n      16,\n      17,\n      18,\n      7,\n      19,\n      20,\n      21,\n      11,\n      22,\n      23,\n      24,\n      15,\n      25,\n      26,\n      27,\n      18,\n      28,\n      29,\n      30,\n      21,\n      31,\n      32,\n      33,\n      24,\n      34,\n      35,\n      36,\n      27,\n      37,\n      38,\n      39,\n      30,\n      40,\n      41,\n      0,\n      33,\n      42,\n      43,\n      4,\n      36,\n      44,\n      45,\n      8,\n      39,\n      46,\n      47,\n      12,\n      /*body*/\n      12,\n      13,\n      14,\n      15,\n      48,\n      49,\n      50,\n      51,\n      52,\n      53,\n      54,\n      55,\n      56,\n      57,\n      58,\n      59,\n      15,\n      25,\n      26,\n      27,\n      51,\n      60,\n      61,\n      62,\n      55,\n      63,\n      64,\n      65,\n      59,\n      66,\n      67,\n      68,\n      27,\n      37,\n      38,\n      39,\n      62,\n      69,\n      70,\n      71,\n      65,\n      72,\n      73,\n      74,\n      68,\n      75,\n      76,\n      77,\n      39,\n      46,\n      47,\n      12,\n      71,\n      78,\n      79,\n      48,\n      74,\n      80,\n      81,\n      52,\n      77,\n      82,\n      83,\n      56,\n      56,\n      57,\n      58,\n      59,\n      84,\n      85,\n      86,\n      87,\n      88,\n      89,\n      90,\n      91,\n      92,\n      93,\n      94,\n      95,\n      59,\n      66,\n      67,\n      68,\n      87,\n      96,\n      97,\n      98,\n      91,\n      99,\n      100,\n      101,\n      95,\n      102,\n      103,\n      104,\n      68,\n      75,\n      76,\n      77,\n      98,\n      105,\n      106,\n      107,\n      101,\n      108,\n      109,\n      110,\n      104,\n      111,\n      112,\n      113,\n      77,\n      82,\n      83,\n      56,\n      107,\n      114,\n      115,\n      84,\n      110,\n      116,\n      117,\n      88,\n      113,\n      118,\n      119,\n      92,\n      /*handle*/\n      120,\n      121,\n      122,\n      123,\n      124,\n      125,\n      126,\n      127,\n      128,\n      129,\n      130,\n      131,\n      132,\n      133,\n      134,\n      135,\n      123,\n      136,\n      137,\n      120,\n      127,\n      138,\n      139,\n      124,\n      131,\n      140,\n      141,\n      128,\n      135,\n      142,\n      143,\n      132,\n      132,\n      133,\n      134,\n      135,\n      144,\n      145,\n      146,\n      147,\n      148,\n      149,\n      150,\n      151,\n      68,\n      152,\n      153,\n      154,\n      135,\n      142,\n      143,\n      132,\n      147,\n      155,\n      156,\n      144,\n      151,\n      157,\n      158,\n      148,\n      154,\n      159,\n      160,\n      68,\n      /*spout*/\n      161,\n      162,\n      163,\n      164,\n      165,\n      166,\n      167,\n      168,\n      169,\n      170,\n      171,\n      172,\n      173,\n      174,\n      175,\n      176,\n      164,\n      177,\n      178,\n      161,\n      168,\n      179,\n      180,\n      165,\n      172,\n      181,\n      182,\n      169,\n      176,\n      183,\n      184,\n      173,\n      173,\n      174,\n      175,\n      176,\n      185,\n      186,\n      187,\n      188,\n      189,\n      190,\n      191,\n      192,\n      193,\n      194,\n      195,\n      196,\n      176,\n      183,\n      184,\n      173,\n      188,\n      197,\n      198,\n      185,\n      192,\n      199,\n      200,\n      189,\n      196,\n      201,\n      202,\n      193,\n      /*lid*/\n      203,\n      203,\n      203,\n      203,\n      204,\n      205,\n      206,\n      207,\n      208,\n      208,\n      208,\n      208,\n      209,\n      210,\n      211,\n      212,\n      203,\n      203,\n      203,\n      203,\n      207,\n      213,\n      214,\n      215,\n      208,\n      208,\n      208,\n      208,\n      212,\n      216,\n      217,\n      218,\n      203,\n      203,\n      203,\n      203,\n      215,\n      219,\n      220,\n      221,\n      208,\n      208,\n      208,\n      208,\n      218,\n      222,\n      223,\n      224,\n      203,\n      203,\n      203,\n      203,\n      221,\n      225,\n      226,\n      204,\n      208,\n      208,\n      208,\n      208,\n      224,\n      227,\n      228,\n      209,\n      209,\n      210,\n      211,\n      212,\n      229,\n      230,\n      231,\n      232,\n      233,\n      234,\n      235,\n      236,\n      237,\n      238,\n      239,\n      240,\n      212,\n      216,\n      217,\n      218,\n      232,\n      241,\n      242,\n      243,\n      236,\n      244,\n      245,\n      246,\n      240,\n      247,\n      248,\n      249,\n      218,\n      222,\n      223,\n      224,\n      243,\n      250,\n      251,\n      252,\n      246,\n      253,\n      254,\n      255,\n      249,\n      256,\n      257,\n      258,\n      224,\n      227,\n      228,\n      209,\n      252,\n      259,\n      260,\n      229,\n      255,\n      261,\n      262,\n      233,\n      258,\n      263,\n      264,\n      237,\n      /*bottom*/\n      265,\n      265,\n      265,\n      265,\n      266,\n      267,\n      268,\n      269,\n      270,\n      271,\n      272,\n      273,\n      92,\n      119,\n      118,\n      113,\n      265,\n      265,\n      265,\n      265,\n      269,\n      274,\n      275,\n      276,\n      273,\n      277,\n      278,\n      279,\n      113,\n      112,\n      111,\n      104,\n      265,\n      265,\n      265,\n      265,\n      276,\n      280,\n      281,\n      282,\n      279,\n      283,\n      284,\n      285,\n      104,\n      103,\n      102,\n      95,\n      265,\n      265,\n      265,\n      265,\n      282,\n      286,\n      287,\n      266,\n      285,\n      288,\n      289,\n      270,\n      95,\n      94,\n      93,\n      92\n    ];\n    const teapotVertices = [\n      1.4,\n      0,\n      2.4,\n      1.4,\n      -0.784,\n      2.4,\n      0.784,\n      -1.4,\n      2.4,\n      0,\n      -1.4,\n      2.4,\n      1.3375,\n      0,\n      2.53125,\n      1.3375,\n      -0.749,\n      2.53125,\n      0.749,\n      -1.3375,\n      2.53125,\n      0,\n      -1.3375,\n      2.53125,\n      1.4375,\n      0,\n      2.53125,\n      1.4375,\n      -0.805,\n      2.53125,\n      0.805,\n      -1.4375,\n      2.53125,\n      0,\n      -1.4375,\n      2.53125,\n      1.5,\n      0,\n      2.4,\n      1.5,\n      -0.84,\n      2.4,\n      0.84,\n      -1.5,\n      2.4,\n      0,\n      -1.5,\n      2.4,\n      -0.784,\n      -1.4,\n      2.4,\n      -1.4,\n      -0.784,\n      2.4,\n      -1.4,\n      0,\n      2.4,\n      -0.749,\n      -1.3375,\n      2.53125,\n      -1.3375,\n      -0.749,\n      2.53125,\n      -1.3375,\n      0,\n      2.53125,\n      -0.805,\n      -1.4375,\n      2.53125,\n      -1.4375,\n      -0.805,\n      2.53125,\n      -1.4375,\n      0,\n      2.53125,\n      -0.84,\n      -1.5,\n      2.4,\n      -1.5,\n      -0.84,\n      2.4,\n      -1.5,\n      0,\n      2.4,\n      -1.4,\n      0.784,\n      2.4,\n      -0.784,\n      1.4,\n      2.4,\n      0,\n      1.4,\n      2.4,\n      -1.3375,\n      0.749,\n      2.53125,\n      -0.749,\n      1.3375,\n      2.53125,\n      0,\n      1.3375,\n      2.53125,\n      -1.4375,\n      0.805,\n      2.53125,\n      -0.805,\n      1.4375,\n      2.53125,\n      0,\n      1.4375,\n      2.53125,\n      -1.5,\n      0.84,\n      2.4,\n      -0.84,\n      1.5,\n      2.4,\n      0,\n      1.5,\n      2.4,\n      0.784,\n      1.4,\n      2.4,\n      1.4,\n      0.784,\n      2.4,\n      0.749,\n      1.3375,\n      2.53125,\n      1.3375,\n      0.749,\n      2.53125,\n      0.805,\n      1.4375,\n      2.53125,\n      1.4375,\n      0.805,\n      2.53125,\n      0.84,\n      1.5,\n      2.4,\n      1.5,\n      0.84,\n      2.4,\n      1.75,\n      0,\n      1.875,\n      1.75,\n      -0.98,\n      1.875,\n      0.98,\n      -1.75,\n      1.875,\n      0,\n      -1.75,\n      1.875,\n      2,\n      0,\n      1.35,\n      2,\n      -1.12,\n      1.35,\n      1.12,\n      -2,\n      1.35,\n      0,\n      -2,\n      1.35,\n      2,\n      0,\n      0.9,\n      2,\n      -1.12,\n      0.9,\n      1.12,\n      -2,\n      0.9,\n      0,\n      -2,\n      0.9,\n      -0.98,\n      -1.75,\n      1.875,\n      -1.75,\n      -0.98,\n      1.875,\n      -1.75,\n      0,\n      1.875,\n      -1.12,\n      -2,\n      1.35,\n      -2,\n      -1.12,\n      1.35,\n      -2,\n      0,\n      1.35,\n      -1.12,\n      -2,\n      0.9,\n      -2,\n      -1.12,\n      0.9,\n      -2,\n      0,\n      0.9,\n      -1.75,\n      0.98,\n      1.875,\n      -0.98,\n      1.75,\n      1.875,\n      0,\n      1.75,\n      1.875,\n      -2,\n      1.12,\n      1.35,\n      -1.12,\n      2,\n      1.35,\n      0,\n      2,\n      1.35,\n      -2,\n      1.12,\n      0.9,\n      -1.12,\n      2,\n      0.9,\n      0,\n      2,\n      0.9,\n      0.98,\n      1.75,\n      1.875,\n      1.75,\n      0.98,\n      1.875,\n      1.12,\n      2,\n      1.35,\n      2,\n      1.12,\n      1.35,\n      1.12,\n      2,\n      0.9,\n      2,\n      1.12,\n      0.9,\n      2,\n      0,\n      0.45,\n      2,\n      -1.12,\n      0.45,\n      1.12,\n      -2,\n      0.45,\n      0,\n      -2,\n      0.45,\n      1.5,\n      0,\n      0.225,\n      1.5,\n      -0.84,\n      0.225,\n      0.84,\n      -1.5,\n      0.225,\n      0,\n      -1.5,\n      0.225,\n      1.5,\n      0,\n      0.15,\n      1.5,\n      -0.84,\n      0.15,\n      0.84,\n      -1.5,\n      0.15,\n      0,\n      -1.5,\n      0.15,\n      -1.12,\n      -2,\n      0.45,\n      -2,\n      -1.12,\n      0.45,\n      -2,\n      0,\n      0.45,\n      -0.84,\n      -1.5,\n      0.225,\n      -1.5,\n      -0.84,\n      0.225,\n      -1.5,\n      0,\n      0.225,\n      -0.84,\n      -1.5,\n      0.15,\n      -1.5,\n      -0.84,\n      0.15,\n      -1.5,\n      0,\n      0.15,\n      -2,\n      1.12,\n      0.45,\n      -1.12,\n      2,\n      0.45,\n      0,\n      2,\n      0.45,\n      -1.5,\n      0.84,\n      0.225,\n      -0.84,\n      1.5,\n      0.225,\n      0,\n      1.5,\n      0.225,\n      -1.5,\n      0.84,\n      0.15,\n      -0.84,\n      1.5,\n      0.15,\n      0,\n      1.5,\n      0.15,\n      1.12,\n      2,\n      0.45,\n      2,\n      1.12,\n      0.45,\n      0.84,\n      1.5,\n      0.225,\n      1.5,\n      0.84,\n      0.225,\n      0.84,\n      1.5,\n      0.15,\n      1.5,\n      0.84,\n      0.15,\n      -1.6,\n      0,\n      2.025,\n      -1.6,\n      -0.3,\n      2.025,\n      -1.5,\n      -0.3,\n      2.25,\n      -1.5,\n      0,\n      2.25,\n      -2.3,\n      0,\n      2.025,\n      -2.3,\n      -0.3,\n      2.025,\n      -2.5,\n      -0.3,\n      2.25,\n      -2.5,\n      0,\n      2.25,\n      -2.7,\n      0,\n      2.025,\n      -2.7,\n      -0.3,\n      2.025,\n      -3,\n      -0.3,\n      2.25,\n      -3,\n      0,\n      2.25,\n      -2.7,\n      0,\n      1.8,\n      -2.7,\n      -0.3,\n      1.8,\n      -3,\n      -0.3,\n      1.8,\n      -3,\n      0,\n      1.8,\n      -1.5,\n      0.3,\n      2.25,\n      -1.6,\n      0.3,\n      2.025,\n      -2.5,\n      0.3,\n      2.25,\n      -2.3,\n      0.3,\n      2.025,\n      -3,\n      0.3,\n      2.25,\n      -2.7,\n      0.3,\n      2.025,\n      -3,\n      0.3,\n      1.8,\n      -2.7,\n      0.3,\n      1.8,\n      -2.7,\n      0,\n      1.575,\n      -2.7,\n      -0.3,\n      1.575,\n      -3,\n      -0.3,\n      1.35,\n      -3,\n      0,\n      1.35,\n      -2.5,\n      0,\n      1.125,\n      -2.5,\n      -0.3,\n      1.125,\n      -2.65,\n      -0.3,\n      0.9375,\n      -2.65,\n      0,\n      0.9375,\n      -2,\n      -0.3,\n      0.9,\n      -1.9,\n      -0.3,\n      0.6,\n      -1.9,\n      0,\n      0.6,\n      -3,\n      0.3,\n      1.35,\n      -2.7,\n      0.3,\n      1.575,\n      -2.65,\n      0.3,\n      0.9375,\n      -2.5,\n      0.3,\n      1.125,\n      -1.9,\n      0.3,\n      0.6,\n      -2,\n      0.3,\n      0.9,\n      1.7,\n      0,\n      1.425,\n      1.7,\n      -0.66,\n      1.425,\n      1.7,\n      -0.66,\n      0.6,\n      1.7,\n      0,\n      0.6,\n      2.6,\n      0,\n      1.425,\n      2.6,\n      -0.66,\n      1.425,\n      3.1,\n      -0.66,\n      0.825,\n      3.1,\n      0,\n      0.825,\n      2.3,\n      0,\n      2.1,\n      2.3,\n      -0.25,\n      2.1,\n      2.4,\n      -0.25,\n      2.025,\n      2.4,\n      0,\n      2.025,\n      2.7,\n      0,\n      2.4,\n      2.7,\n      -0.25,\n      2.4,\n      3.3,\n      -0.25,\n      2.4,\n      3.3,\n      0,\n      2.4,\n      1.7,\n      0.66,\n      0.6,\n      1.7,\n      0.66,\n      1.425,\n      3.1,\n      0.66,\n      0.825,\n      2.6,\n      0.66,\n      1.425,\n      2.4,\n      0.25,\n      2.025,\n      2.3,\n      0.25,\n      2.1,\n      3.3,\n      0.25,\n      2.4,\n      2.7,\n      0.25,\n      2.4,\n      2.8,\n      0,\n      2.475,\n      2.8,\n      -0.25,\n      2.475,\n      3.525,\n      -0.25,\n      2.49375,\n      3.525,\n      0,\n      2.49375,\n      2.9,\n      0,\n      2.475,\n      2.9,\n      -0.15,\n      2.475,\n      3.45,\n      -0.15,\n      2.5125,\n      3.45,\n      0,\n      2.5125,\n      2.8,\n      0,\n      2.4,\n      2.8,\n      -0.15,\n      2.4,\n      3.2,\n      -0.15,\n      2.4,\n      3.2,\n      0,\n      2.4,\n      3.525,\n      0.25,\n      2.49375,\n      2.8,\n      0.25,\n      2.475,\n      3.45,\n      0.15,\n      2.5125,\n      2.9,\n      0.15,\n      2.475,\n      3.2,\n      0.15,\n      2.4,\n      2.8,\n      0.15,\n      2.4,\n      0,\n      0,\n      3.15,\n      0.8,\n      0,\n      3.15,\n      0.8,\n      -0.45,\n      3.15,\n      0.45,\n      -0.8,\n      3.15,\n      0,\n      -0.8,\n      3.15,\n      0,\n      0,\n      2.85,\n      0.2,\n      0,\n      2.7,\n      0.2,\n      -0.112,\n      2.7,\n      0.112,\n      -0.2,\n      2.7,\n      0,\n      -0.2,\n      2.7,\n      -0.45,\n      -0.8,\n      3.15,\n      -0.8,\n      -0.45,\n      3.15,\n      -0.8,\n      0,\n      3.15,\n      -0.112,\n      -0.2,\n      2.7,\n      -0.2,\n      -0.112,\n      2.7,\n      -0.2,\n      0,\n      2.7,\n      -0.8,\n      0.45,\n      3.15,\n      -0.45,\n      0.8,\n      3.15,\n      0,\n      0.8,\n      3.15,\n      -0.2,\n      0.112,\n      2.7,\n      -0.112,\n      0.2,\n      2.7,\n      0,\n      0.2,\n      2.7,\n      0.45,\n      0.8,\n      3.15,\n      0.8,\n      0.45,\n      3.15,\n      0.112,\n      0.2,\n      2.7,\n      0.2,\n      0.112,\n      2.7,\n      0.4,\n      0,\n      2.55,\n      0.4,\n      -0.224,\n      2.55,\n      0.224,\n      -0.4,\n      2.55,\n      0,\n      -0.4,\n      2.55,\n      1.3,\n      0,\n      2.55,\n      1.3,\n      -0.728,\n      2.55,\n      0.728,\n      -1.3,\n      2.55,\n      0,\n      -1.3,\n      2.55,\n      1.3,\n      0,\n      2.4,\n      1.3,\n      -0.728,\n      2.4,\n      0.728,\n      -1.3,\n      2.4,\n      0,\n      -1.3,\n      2.4,\n      -0.224,\n      -0.4,\n      2.55,\n      -0.4,\n      -0.224,\n      2.55,\n      -0.4,\n      0,\n      2.55,\n      -0.728,\n      -1.3,\n      2.55,\n      -1.3,\n      -0.728,\n      2.55,\n      -1.3,\n      0,\n      2.55,\n      -0.728,\n      -1.3,\n      2.4,\n      -1.3,\n      -0.728,\n      2.4,\n      -1.3,\n      0,\n      2.4,\n      -0.4,\n      0.224,\n      2.55,\n      -0.224,\n      0.4,\n      2.55,\n      0,\n      0.4,\n      2.55,\n      -1.3,\n      0.728,\n      2.55,\n      -0.728,\n      1.3,\n      2.55,\n      0,\n      1.3,\n      2.55,\n      -1.3,\n      0.728,\n      2.4,\n      -0.728,\n      1.3,\n      2.4,\n      0,\n      1.3,\n      2.4,\n      0.224,\n      0.4,\n      2.55,\n      0.4,\n      0.224,\n      2.55,\n      0.728,\n      1.3,\n      2.55,\n      1.3,\n      0.728,\n      2.55,\n      0.728,\n      1.3,\n      2.4,\n      1.3,\n      0.728,\n      2.4,\n      0,\n      0,\n      0,\n      1.425,\n      0,\n      0,\n      1.425,\n      0.798,\n      0,\n      0.798,\n      1.425,\n      0,\n      0,\n      1.425,\n      0,\n      1.5,\n      0,\n      0.075,\n      1.5,\n      0.84,\n      0.075,\n      0.84,\n      1.5,\n      0.075,\n      0,\n      1.5,\n      0.075,\n      -0.798,\n      1.425,\n      0,\n      -1.425,\n      0.798,\n      0,\n      -1.425,\n      0,\n      0,\n      -0.84,\n      1.5,\n      0.075,\n      -1.5,\n      0.84,\n      0.075,\n      -1.5,\n      0,\n      0.075,\n      -1.425,\n      -0.798,\n      0,\n      -0.798,\n      -1.425,\n      0,\n      0,\n      -1.425,\n      0,\n      -1.5,\n      -0.84,\n      0.075,\n      -0.84,\n      -1.5,\n      0.075,\n      0,\n      -1.5,\n      0.075,\n      0.798,\n      -1.425,\n      0,\n      1.425,\n      -0.798,\n      0,\n      0.84,\n      -1.5,\n      0.075,\n      1.5,\n      -0.84,\n      0.075\n    ];\n    super();\n    size = size || 50;\n    segments = segments !== void 0 ? Math.max(2, Math.floor(segments) || 10) : 10;\n    bottom = bottom === void 0 ? true : bottom;\n    lid = lid === void 0 ? true : lid;\n    body = body === void 0 ? true : body;\n    fitLid = fitLid === void 0 ? true : fitLid;\n    const blinnScale = 1.3;\n    blinn = blinn === void 0 ? true : blinn;\n    const maxHeight = 3.15 * (blinn ? 1 : blinnScale);\n    const maxHeight2 = maxHeight / 2;\n    const trueSize = size / maxHeight2;\n    let numTriangles = bottom ? (8 * segments - 4) * segments : 0;\n    numTriangles += lid ? (16 * segments - 4) * segments : 0;\n    numTriangles += body ? 40 * segments * segments : 0;\n    const indices = new Uint32Array(numTriangles * 3);\n    let numVertices = bottom ? 4 : 0;\n    numVertices += lid ? 8 : 0;\n    numVertices += body ? 20 : 0;\n    numVertices *= (segments + 1) * (segments + 1);\n    const vertices = new Float32Array(numVertices * 3);\n    const normals = new Float32Array(numVertices * 3);\n    const uvs = new Float32Array(numVertices * 2);\n    const ms = new Matrix4();\n    ms.set(-1, 3, -3, 1, 3, -6, 3, 0, -3, 3, 0, 0, 1, 0, 0, 0);\n    const g = [];\n    let i, r, c;\n    const sp = [];\n    const tp = [];\n    const dsp = [];\n    const dtp = [];\n    const mgm = [];\n    const vert = [];\n    const sdir = [];\n    const tdir = [];\n    const norm = new Vector3();\n    let tcoord;\n    let sstep, tstep;\n    let vertPerRow;\n    let s, t, sval, tval, p;\n    let dsval = 0;\n    let dtval = 0;\n    const normOut = new Vector3();\n    let v1, v2, v3, v4;\n    const gmx = new Matrix4();\n    const tmtx = new Matrix4();\n    const vsp = new Vector4();\n    const vtp = new Vector4();\n    const vdsp = new Vector4();\n    const vdtp = new Vector4();\n    const vsdir = new Vector3();\n    const vtdir = new Vector3();\n    const mst = ms.clone();\n    mst.transpose();\n    const notDegenerate = (vtx1, vtx2, vtx3) => !(vertices[vtx1 * 3] === vertices[vtx2 * 3] && vertices[vtx1 * 3 + 1] === vertices[vtx2 * 3 + 1] && vertices[vtx1 * 3 + 2] === vertices[vtx2 * 3 + 2] || vertices[vtx1 * 3] === vertices[vtx3 * 3] && vertices[vtx1 * 3 + 1] === vertices[vtx3 * 3 + 1] && vertices[vtx1 * 3 + 2] === vertices[vtx3 * 3 + 2] || vertices[vtx2 * 3] === vertices[vtx3 * 3] && vertices[vtx2 * 3 + 1] === vertices[vtx3 * 3 + 1] && vertices[vtx2 * 3 + 2] === vertices[vtx3 * 3 + 2]);\n    for (i = 0; i < 3; i++) {\n      mgm[i] = new Matrix4();\n    }\n    const minPatches = body ? 0 : 20;\n    const maxPatches = bottom ? 32 : 28;\n    vertPerRow = segments + 1;\n    let surfCount = 0;\n    let vertCount = 0;\n    let normCount = 0;\n    let uvCount = 0;\n    let indexCount = 0;\n    for (let surf = minPatches; surf < maxPatches; surf++) {\n      if (lid || surf < 20 || surf >= 28) {\n        for (i = 0; i < 3; i++) {\n          for (r = 0; r < 4; r++) {\n            for (c = 0; c < 4; c++) {\n              g[c * 4 + r] = teapotVertices[teapotPatches[surf * 16 + r * 4 + c] * 3 + i];\n              if (fitLid && surf >= 20 && surf < 28 && i !== 2) {\n                g[c * 4 + r] *= 1.077;\n              }\n              if (!blinn && i === 2) {\n                g[c * 4 + r] *= blinnScale;\n              }\n            }\n          }\n          gmx.set(g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], g[9], g[10], g[11], g[12], g[13], g[14], g[15]);\n          tmtx.multiplyMatrices(gmx, ms);\n          mgm[i].multiplyMatrices(mst, tmtx);\n        }\n        for (sstep = 0; sstep <= segments; sstep++) {\n          s = sstep / segments;\n          for (tstep = 0; tstep <= segments; tstep++) {\n            t = tstep / segments;\n            for (p = 4, sval = tval = 1; p--; ) {\n              sp[p] = sval;\n              tp[p] = tval;\n              sval *= s;\n              tval *= t;\n              if (p === 3) {\n                dsp[p] = dtp[p] = 0;\n                dsval = dtval = 1;\n              } else {\n                dsp[p] = dsval * (3 - p);\n                dtp[p] = dtval * (3 - p);\n                dsval *= s;\n                dtval *= t;\n              }\n            }\n            vsp.fromArray(sp);\n            vtp.fromArray(tp);\n            vdsp.fromArray(dsp);\n            vdtp.fromArray(dtp);\n            for (i = 0; i < 3; i++) {\n              tcoord = vsp.clone();\n              tcoord.applyMatrix4(mgm[i]);\n              vert[i] = tcoord.dot(vtp);\n              tcoord = vdsp.clone();\n              tcoord.applyMatrix4(mgm[i]);\n              sdir[i] = tcoord.dot(vtp);\n              tcoord = vsp.clone();\n              tcoord.applyMatrix4(mgm[i]);\n              tdir[i] = tcoord.dot(vdtp);\n            }\n            vsdir.fromArray(sdir);\n            vtdir.fromArray(tdir);\n            norm.crossVectors(vtdir, vsdir);\n            norm.normalize();\n            if (vert[0] === 0 && vert[1] === 0) {\n              normOut.set(0, vert[2] > maxHeight2 ? 1 : -1, 0);\n            } else {\n              normOut.set(norm.x, norm.z, -norm.y);\n            }\n            vertices[vertCount++] = trueSize * vert[0];\n            vertices[vertCount++] = trueSize * (vert[2] - maxHeight2);\n            vertices[vertCount++] = -trueSize * vert[1];\n            normals[normCount++] = normOut.x;\n            normals[normCount++] = normOut.y;\n            normals[normCount++] = normOut.z;\n            uvs[uvCount++] = 1 - t;\n            uvs[uvCount++] = 1 - s;\n          }\n        }\n        for (sstep = 0; sstep < segments; sstep++) {\n          for (tstep = 0; tstep < segments; tstep++) {\n            v1 = surfCount * vertPerRow * vertPerRow + sstep * vertPerRow + tstep;\n            v2 = v1 + 1;\n            v3 = v2 + vertPerRow;\n            v4 = v1 + vertPerRow;\n            if (notDegenerate(v1, v2, v3)) {\n              indices[indexCount++] = v1;\n              indices[indexCount++] = v2;\n              indices[indexCount++] = v3;\n            }\n            if (notDegenerate(v1, v3, v4)) {\n              indices[indexCount++] = v1;\n              indices[indexCount++] = v3;\n              indices[indexCount++] = v4;\n            }\n          }\n        }\n        surfCount++;\n      }\n    }\n    this.setIndex(new BufferAttribute(indices, 1));\n    this.setAttribute(\"position\", new BufferAttribute(vertices, 3));\n    this.setAttribute(\"normal\", new BufferAttribute(normals, 3));\n    this.setAttribute(\"uv\", new BufferAttribute(uvs, 2));\n    this.computeBoundingSphere();\n  }\n}\nexport {\n  TeapotGeometry\n};\n"]},"metadata":{},"sourceType":"module"}