{"ast":null,"code":"import _classCallCheck from \"/Users/theodaguier/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/theodaguier/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/theodaguier/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"/Users/theodaguier/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/theodaguier/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/theodaguier/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/theodaguier/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Mesh, AnimationMixer, AnimationClip } from \"three\";\n\nvar MorphAnimMesh = /*#__PURE__*/function (_Mesh) {\n  _inherits(MorphAnimMesh, _Mesh);\n\n  var _super = _createSuper(MorphAnimMesh);\n\n  function MorphAnimMesh(geometry, material) {\n    var _this;\n\n    _classCallCheck(this, MorphAnimMesh);\n\n    _this = _super.call(this, geometry, material);\n    _this.type = \"MorphAnimMesh\";\n    _this.mixer = new AnimationMixer(_assertThisInitialized(_this));\n    _this.activeAction = null;\n    return _this;\n  }\n\n  _createClass(MorphAnimMesh, [{\n    key: \"setDirectionForward\",\n    value: function setDirectionForward() {\n      this.mixer.timeScale = 1;\n    }\n  }, {\n    key: \"setDirectionBackward\",\n    value: function setDirectionBackward() {\n      this.mixer.timeScale = -1;\n    }\n  }, {\n    key: \"playAnimation\",\n    value: function playAnimation(label, fps) {\n      if (this.activeAction) {\n        this.activeAction.stop();\n        this.activeAction = null;\n      }\n\n      var clip = AnimationClip.findByName(this, label);\n\n      if (clip) {\n        var action = this.mixer.clipAction(clip);\n        action.timeScale = clip.tracks.length * fps / clip.duration;\n        this.activeAction = action.play();\n      } else {\n        throw new Error(\"THREE.MorphAnimMesh: animations[\" + label + \"] undefined in .playAnimation()\");\n      }\n    }\n  }, {\n    key: \"updateAnimation\",\n    value: function updateAnimation(delta) {\n      this.mixer.update(delta);\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(source, recursive) {\n      _get(_getPrototypeOf(MorphAnimMesh.prototype), \"copy\", this).call(this, source, recursive);\n\n      this.mixer = new AnimationMixer(this);\n      return this;\n    }\n  }]);\n\n  return MorphAnimMesh;\n}(Mesh);\n\nexport { MorphAnimMesh };","map":{"version":3,"sources":["/Users/theodaguier/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/three-stdlib/misc/MorphAnimMesh.js"],"names":["Mesh","AnimationMixer","AnimationClip","MorphAnimMesh","geometry","material","type","mixer","activeAction","timeScale","label","fps","stop","clip","findByName","action","clipAction","tracks","length","duration","play","Error","delta","update","source","recursive"],"mappings":";;;;;;;AAAA,SAASA,IAAT,EAAeC,cAAf,EAA+BC,aAA/B,QAAoD,OAApD;;IACMC,a;;;;;AACJ,yBAAYC,QAAZ,EAAsBC,QAAtB,EAAgC;AAAA;;AAAA;;AAC9B,8BAAMD,QAAN,EAAgBC,QAAhB;AACA,UAAKC,IAAL,GAAY,eAAZ;AACA,UAAKC,KAAL,GAAa,IAAIN,cAAJ,+BAAb;AACA,UAAKO,YAAL,GAAoB,IAApB;AAJ8B;AAK/B;;;;WACD,+BAAsB;AACpB,WAAKD,KAAL,CAAWE,SAAX,GAAuB,CAAvB;AACD;;;WACD,gCAAuB;AACrB,WAAKF,KAAL,CAAWE,SAAX,GAAuB,CAAC,CAAxB;AACD;;;WACD,uBAAcC,KAAd,EAAqBC,GAArB,EAA0B;AACxB,UAAI,KAAKH,YAAT,EAAuB;AACrB,aAAKA,YAAL,CAAkBI,IAAlB;AACA,aAAKJ,YAAL,GAAoB,IAApB;AACD;;AACD,UAAMK,IAAI,GAAGX,aAAa,CAACY,UAAd,CAAyB,IAAzB,EAA+BJ,KAA/B,CAAb;;AACA,UAAIG,IAAJ,EAAU;AACR,YAAME,MAAM,GAAG,KAAKR,KAAL,CAAWS,UAAX,CAAsBH,IAAtB,CAAf;AACAE,QAAAA,MAAM,CAACN,SAAP,GAAmBI,IAAI,CAACI,MAAL,CAAYC,MAAZ,GAAqBP,GAArB,GAA2BE,IAAI,CAACM,QAAnD;AACA,aAAKX,YAAL,GAAoBO,MAAM,CAACK,IAAP,EAApB;AACD,OAJD,MAIO;AACL,cAAM,IAAIC,KAAJ,CAAU,qCAAqCX,KAArC,GAA6C,iCAAvD,CAAN;AACD;AACF;;;WACD,yBAAgBY,KAAhB,EAAuB;AACrB,WAAKf,KAAL,CAAWgB,MAAX,CAAkBD,KAAlB;AACD;;;WACD,cAAKE,MAAL,EAAaC,SAAb,EAAwB;AACtB,8EAAWD,MAAX,EAAmBC,SAAnB;;AACA,WAAKlB,KAAL,GAAa,IAAIN,cAAJ,CAAmB,IAAnB,CAAb;AACA,aAAO,IAAP;AACD;;;;EAlCyBD,I;;AAoC5B,SACEG,aADF","sourcesContent":["import { Mesh, AnimationMixer, AnimationClip } from \"three\";\nclass MorphAnimMesh extends Mesh {\n  constructor(geometry, material) {\n    super(geometry, material);\n    this.type = \"MorphAnimMesh\";\n    this.mixer = new AnimationMixer(this);\n    this.activeAction = null;\n  }\n  setDirectionForward() {\n    this.mixer.timeScale = 1;\n  }\n  setDirectionBackward() {\n    this.mixer.timeScale = -1;\n  }\n  playAnimation(label, fps) {\n    if (this.activeAction) {\n      this.activeAction.stop();\n      this.activeAction = null;\n    }\n    const clip = AnimationClip.findByName(this, label);\n    if (clip) {\n      const action = this.mixer.clipAction(clip);\n      action.timeScale = clip.tracks.length * fps / clip.duration;\n      this.activeAction = action.play();\n    } else {\n      throw new Error(\"THREE.MorphAnimMesh: animations[\" + label + \"] undefined in .playAnimation()\");\n    }\n  }\n  updateAnimation(delta) {\n    this.mixer.update(delta);\n  }\n  copy(source, recursive) {\n    super.copy(source, recursive);\n    this.mixer = new AnimationMixer(this);\n    return this;\n  }\n}\nexport {\n  MorphAnimMesh\n};\n"]},"metadata":{},"sourceType":"module"}