{"ast":null,"code":"var __defProp = Object.defineProperty;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n  return value;\n};\n\nimport { EventDispatcher, Plane, Raycaster, Vector2, Vector3, Matrix4 } from \"three\";\n\nclass DragControls extends EventDispatcher {\n  constructor(_objects, _camera, _domElement) {\n    super();\n\n    __publicField(this, \"enabled\", true);\n\n    __publicField(this, \"transformGroup\", false);\n\n    __publicField(this, \"_objects\");\n\n    __publicField(this, \"_camera\");\n\n    __publicField(this, \"_domElement\");\n\n    __publicField(this, \"_plane\", new Plane());\n\n    __publicField(this, \"_raycaster\", new Raycaster());\n\n    __publicField(this, \"_mouse\", new Vector2());\n\n    __publicField(this, \"_offset\", new Vector3());\n\n    __publicField(this, \"_intersection\", new Vector3());\n\n    __publicField(this, \"_worldPosition\", new Vector3());\n\n    __publicField(this, \"_inverseMatrix\", new Matrix4());\n\n    __publicField(this, \"_intersections\", []);\n\n    __publicField(this, \"_selected\", null);\n\n    __publicField(this, \"_hovered\", null);\n\n    __publicField(this, \"activate\", () => {\n      this._domElement.addEventListener(\"pointermove\", this.onPointerMove);\n\n      this._domElement.addEventListener(\"pointerdown\", this.onPointerDown);\n\n      this._domElement.addEventListener(\"pointerup\", this.onPointerCancel);\n\n      this._domElement.addEventListener(\"pointerleave\", this.onPointerCancel);\n\n      this._domElement.addEventListener(\"touchmove\", this.onTouchMove);\n\n      this._domElement.addEventListener(\"touchstart\", this.onTouchStart);\n\n      this._domElement.addEventListener(\"touchend\", this.onTouchEnd);\n    });\n\n    __publicField(this, \"deactivate\", () => {\n      this._domElement.removeEventListener(\"pointermove\", this.onPointerMove);\n\n      this._domElement.removeEventListener(\"pointerdown\", this.onPointerDown);\n\n      this._domElement.removeEventListener(\"pointerup\", this.onPointerCancel);\n\n      this._domElement.removeEventListener(\"pointerleave\", this.onPointerCancel);\n\n      this._domElement.removeEventListener(\"touchmove\", this.onTouchMove);\n\n      this._domElement.removeEventListener(\"touchstart\", this.onTouchStart);\n\n      this._domElement.removeEventListener(\"touchend\", this.onTouchEnd);\n\n      this._domElement.style.cursor = \"\";\n    }); // TODO: confirm if this can be removed?\n\n\n    __publicField(this, \"dispose\", () => this.deactivate());\n\n    __publicField(this, \"getObjects\", () => this._objects);\n\n    __publicField(this, \"getRaycaster\", () => this._raycaster);\n\n    __publicField(this, \"onMouseMove\", event => {\n      const rect = this._domElement.getBoundingClientRect();\n\n      this._mouse.x = (event.clientX - rect.left) / rect.width * 2 - 1;\n      this._mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n\n      this._raycaster.setFromCamera(this._mouse, this._camera);\n\n      if (this._selected && this.enabled) {\n        if (this._raycaster.ray.intersectPlane(this._plane, this._intersection)) {\n          this._selected.position.copy(this._intersection.sub(this._offset).applyMatrix4(this._inverseMatrix));\n        }\n\n        this.dispatchEvent({\n          type: \"drag\",\n          object: this._selected\n        });\n        return;\n      }\n\n      this._intersections.length = 0;\n\n      this._raycaster.setFromCamera(this._mouse, this._camera);\n\n      this._raycaster.intersectObjects(this._objects, true, this._intersections);\n\n      if (this._intersections.length > 0) {\n        const object = this._intersections[0].object;\n\n        this._plane.setFromNormalAndCoplanarPoint(this._camera.getWorldDirection(this._plane.normal), this._worldPosition.setFromMatrixPosition(object.matrixWorld));\n\n        if (this._hovered !== object) {\n          this.dispatchEvent({\n            type: \"hoveron\",\n            object\n          });\n          this._domElement.style.cursor = \"pointer\";\n          this._hovered = object;\n        }\n      } else {\n        if (this._hovered !== null) {\n          this.dispatchEvent({\n            type: \"hoveroff\",\n            object: this._hovered\n          });\n          this._domElement.style.cursor = \"auto\";\n          this._hovered = null;\n        }\n      }\n    });\n\n    __publicField(this, \"onMouseDown\", () => {\n      this._intersections.length = 0;\n\n      this._raycaster.setFromCamera(this._mouse, this._camera);\n\n      this._raycaster.intersectObjects(this._objects, true, this._intersections);\n\n      if (this._intersections.length > 0) {\n        this._selected = this.transformGroup === true ? this._objects[0] : this._intersections[0].object;\n\n        if (this._raycaster.ray.intersectPlane(this._plane, this._intersection) && this._selected.parent) {\n          this._inverseMatrix.copy(this._selected.parent.matrixWorld).invert();\n\n          this._offset.copy(this._intersection).sub(this._worldPosition.setFromMatrixPosition(this._selected.matrixWorld));\n        }\n\n        this._domElement.style.cursor = \"move\";\n        this.dispatchEvent({\n          type: \"dragstart\",\n          object: this._selected\n        });\n      }\n    });\n\n    __publicField(this, \"onMouseCancel\", () => {\n      if (this._selected) {\n        this.dispatchEvent({\n          type: \"dragend\",\n          object: this._selected\n        });\n        this._selected = null;\n      }\n\n      this._domElement.style.cursor = this._hovered ? \"pointer\" : \"auto\";\n    });\n\n    __publicField(this, \"onPointerMove\", event => {\n      switch (event.pointerType) {\n        case \"mouse\":\n        case \"pen\":\n          this.onMouseMove(event);\n          break;\n      }\n    });\n\n    __publicField(this, \"onPointerDown\", event => {\n      switch (event.pointerType) {\n        case \"mouse\":\n        case \"pen\":\n          this.onMouseDown();\n          break;\n      }\n    });\n\n    __publicField(this, \"onPointerCancel\", event => {\n      switch (event.pointerType) {\n        case \"mouse\":\n        case \"pen\":\n          this.onMouseCancel();\n          break;\n      }\n    });\n\n    __publicField(this, \"onTouchMove\", event => {\n      event.preventDefault();\n      const newEvent = event.changedTouches[0];\n\n      const rect = this._domElement.getBoundingClientRect();\n\n      this._mouse.x = (newEvent.clientX - rect.left) / rect.width * 2 - 1;\n      this._mouse.y = -((newEvent.clientY - rect.top) / rect.height) * 2 + 1;\n\n      this._raycaster.setFromCamera(this._mouse, this._camera);\n\n      if (this._selected && this.enabled) {\n        if (this._raycaster.ray.intersectPlane(this._plane, this._intersection)) {\n          this._selected.position.copy(this._intersection.sub(this._offset).applyMatrix4(this._inverseMatrix));\n        }\n\n        this.dispatchEvent({\n          type: \"drag\",\n          object: this._selected\n        });\n        return;\n      }\n    });\n\n    __publicField(this, \"onTouchStart\", event => {\n      event.preventDefault();\n      const newEvent = event.changedTouches[0];\n\n      const rect = this._domElement.getBoundingClientRect();\n\n      this._mouse.x = (newEvent.clientX - rect.left) / rect.width * 2 - 1;\n      this._mouse.y = -((newEvent.clientY - rect.top) / rect.height) * 2 + 1;\n      this._intersections.length = 0;\n\n      this._raycaster.setFromCamera(this._mouse, this._camera);\n\n      this._raycaster.intersectObjects(this._objects, true, this._intersections);\n\n      if (this._intersections.length > 0) {\n        this._selected = this.transformGroup === true ? this._objects[0] : this._intersections[0].object;\n\n        this._plane.setFromNormalAndCoplanarPoint(this._camera.getWorldDirection(this._plane.normal), this._worldPosition.setFromMatrixPosition(this._selected.matrixWorld));\n\n        if (this._raycaster.ray.intersectPlane(this._plane, this._intersection) && this._selected.parent) {\n          this._inverseMatrix.copy(this._selected.parent.matrixWorld).invert();\n\n          this._offset.copy(this._intersection).sub(this._worldPosition.setFromMatrixPosition(this._selected.matrixWorld));\n        }\n\n        this._domElement.style.cursor = \"move\";\n        this.dispatchEvent({\n          type: \"dragstart\",\n          object: this._selected\n        });\n      }\n    });\n\n    __publicField(this, \"onTouchEnd\", event => {\n      event.preventDefault();\n\n      if (this._selected) {\n        this.dispatchEvent({\n          type: \"dragend\",\n          object: this._selected\n        });\n        this._selected = null;\n      }\n\n      this._domElement.style.cursor = \"auto\";\n    });\n\n    this._objects = _objects;\n    this._camera = _camera;\n    this._domElement = _domElement;\n    this.activate();\n  }\n\n}\n\nexport { DragControls };","map":{"version":3,"sources":["/Users/theodaguier/_workdir/dev/pro/e-do/E-Do-Studio/node_modules/three-stdlib/controls/DragControls.js"],"names":["__defProp","Object","defineProperty","__defNormalProp","obj","key","value","enumerable","configurable","writable","__publicField","EventDispatcher","Plane","Raycaster","Vector2","Vector3","Matrix4","DragControls","constructor","_objects","_camera","_domElement","addEventListener","onPointerMove","onPointerDown","onPointerCancel","onTouchMove","onTouchStart","onTouchEnd","removeEventListener","style","cursor","deactivate","_raycaster","event","rect","getBoundingClientRect","_mouse","x","clientX","left","width","y","clientY","top","height","setFromCamera","_selected","enabled","ray","intersectPlane","_plane","_intersection","position","copy","sub","_offset","applyMatrix4","_inverseMatrix","dispatchEvent","type","object","_intersections","length","intersectObjects","setFromNormalAndCoplanarPoint","getWorldDirection","normal","_worldPosition","setFromMatrixPosition","matrixWorld","_hovered","transformGroup","parent","invert","pointerType","onMouseMove","onMouseDown","onMouseCancel","preventDefault","newEvent","changedTouches","activate"],"mappings":"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","sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { EventDispatcher, Plane, Raycaster, Vector2, Vector3, Matrix4 } from \"three\";\nclass DragControls extends EventDispatcher {\n  constructor(_objects, _camera, _domElement) {\n    super();\n    __publicField(this, \"enabled\", true);\n    __publicField(this, \"transformGroup\", false);\n    __publicField(this, \"_objects\");\n    __publicField(this, \"_camera\");\n    __publicField(this, \"_domElement\");\n    __publicField(this, \"_plane\", new Plane());\n    __publicField(this, \"_raycaster\", new Raycaster());\n    __publicField(this, \"_mouse\", new Vector2());\n    __publicField(this, \"_offset\", new Vector3());\n    __publicField(this, \"_intersection\", new Vector3());\n    __publicField(this, \"_worldPosition\", new Vector3());\n    __publicField(this, \"_inverseMatrix\", new Matrix4());\n    __publicField(this, \"_intersections\", []);\n    __publicField(this, \"_selected\", null);\n    __publicField(this, \"_hovered\", null);\n    __publicField(this, \"activate\", () => {\n      this._domElement.addEventListener(\"pointermove\", this.onPointerMove);\n      this._domElement.addEventListener(\"pointerdown\", this.onPointerDown);\n      this._domElement.addEventListener(\"pointerup\", this.onPointerCancel);\n      this._domElement.addEventListener(\"pointerleave\", this.onPointerCancel);\n      this._domElement.addEventListener(\"touchmove\", this.onTouchMove);\n      this._domElement.addEventListener(\"touchstart\", this.onTouchStart);\n      this._domElement.addEventListener(\"touchend\", this.onTouchEnd);\n    });\n    __publicField(this, \"deactivate\", () => {\n      this._domElement.removeEventListener(\"pointermove\", this.onPointerMove);\n      this._domElement.removeEventListener(\"pointerdown\", this.onPointerDown);\n      this._domElement.removeEventListener(\"pointerup\", this.onPointerCancel);\n      this._domElement.removeEventListener(\"pointerleave\", this.onPointerCancel);\n      this._domElement.removeEventListener(\"touchmove\", this.onTouchMove);\n      this._domElement.removeEventListener(\"touchstart\", this.onTouchStart);\n      this._domElement.removeEventListener(\"touchend\", this.onTouchEnd);\n      this._domElement.style.cursor = \"\";\n    });\n    // TODO: confirm if this can be removed?\n    __publicField(this, \"dispose\", () => this.deactivate());\n    __publicField(this, \"getObjects\", () => this._objects);\n    __publicField(this, \"getRaycaster\", () => this._raycaster);\n    __publicField(this, \"onMouseMove\", (event) => {\n      const rect = this._domElement.getBoundingClientRect();\n      this._mouse.x = (event.clientX - rect.left) / rect.width * 2 - 1;\n      this._mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n      this._raycaster.setFromCamera(this._mouse, this._camera);\n      if (this._selected && this.enabled) {\n        if (this._raycaster.ray.intersectPlane(this._plane, this._intersection)) {\n          this._selected.position.copy(this._intersection.sub(this._offset).applyMatrix4(this._inverseMatrix));\n        }\n        this.dispatchEvent({ type: \"drag\", object: this._selected });\n        return;\n      }\n      this._intersections.length = 0;\n      this._raycaster.setFromCamera(this._mouse, this._camera);\n      this._raycaster.intersectObjects(this._objects, true, this._intersections);\n      if (this._intersections.length > 0) {\n        const object = this._intersections[0].object;\n        this._plane.setFromNormalAndCoplanarPoint(\n          this._camera.getWorldDirection(this._plane.normal),\n          this._worldPosition.setFromMatrixPosition(object.matrixWorld)\n        );\n        if (this._hovered !== object) {\n          this.dispatchEvent({ type: \"hoveron\", object });\n          this._domElement.style.cursor = \"pointer\";\n          this._hovered = object;\n        }\n      } else {\n        if (this._hovered !== null) {\n          this.dispatchEvent({ type: \"hoveroff\", object: this._hovered });\n          this._domElement.style.cursor = \"auto\";\n          this._hovered = null;\n        }\n      }\n    });\n    __publicField(this, \"onMouseDown\", () => {\n      this._intersections.length = 0;\n      this._raycaster.setFromCamera(this._mouse, this._camera);\n      this._raycaster.intersectObjects(this._objects, true, this._intersections);\n      if (this._intersections.length > 0) {\n        this._selected = this.transformGroup === true ? this._objects[0] : this._intersections[0].object;\n        if (this._raycaster.ray.intersectPlane(this._plane, this._intersection) && this._selected.parent) {\n          this._inverseMatrix.copy(this._selected.parent.matrixWorld).invert();\n          this._offset.copy(this._intersection).sub(this._worldPosition.setFromMatrixPosition(this._selected.matrixWorld));\n        }\n        this._domElement.style.cursor = \"move\";\n        this.dispatchEvent({ type: \"dragstart\", object: this._selected });\n      }\n    });\n    __publicField(this, \"onMouseCancel\", () => {\n      if (this._selected) {\n        this.dispatchEvent({ type: \"dragend\", object: this._selected });\n        this._selected = null;\n      }\n      this._domElement.style.cursor = this._hovered ? \"pointer\" : \"auto\";\n    });\n    __publicField(this, \"onPointerMove\", (event) => {\n      switch (event.pointerType) {\n        case \"mouse\":\n        case \"pen\":\n          this.onMouseMove(event);\n          break;\n      }\n    });\n    __publicField(this, \"onPointerDown\", (event) => {\n      switch (event.pointerType) {\n        case \"mouse\":\n        case \"pen\":\n          this.onMouseDown();\n          break;\n      }\n    });\n    __publicField(this, \"onPointerCancel\", (event) => {\n      switch (event.pointerType) {\n        case \"mouse\":\n        case \"pen\":\n          this.onMouseCancel();\n          break;\n      }\n    });\n    __publicField(this, \"onTouchMove\", (event) => {\n      event.preventDefault();\n      const newEvent = event.changedTouches[0];\n      const rect = this._domElement.getBoundingClientRect();\n      this._mouse.x = (newEvent.clientX - rect.left) / rect.width * 2 - 1;\n      this._mouse.y = -((newEvent.clientY - rect.top) / rect.height) * 2 + 1;\n      this._raycaster.setFromCamera(this._mouse, this._camera);\n      if (this._selected && this.enabled) {\n        if (this._raycaster.ray.intersectPlane(this._plane, this._intersection)) {\n          this._selected.position.copy(this._intersection.sub(this._offset).applyMatrix4(this._inverseMatrix));\n        }\n        this.dispatchEvent({ type: \"drag\", object: this._selected });\n        return;\n      }\n    });\n    __publicField(this, \"onTouchStart\", (event) => {\n      event.preventDefault();\n      const newEvent = event.changedTouches[0];\n      const rect = this._domElement.getBoundingClientRect();\n      this._mouse.x = (newEvent.clientX - rect.left) / rect.width * 2 - 1;\n      this._mouse.y = -((newEvent.clientY - rect.top) / rect.height) * 2 + 1;\n      this._intersections.length = 0;\n      this._raycaster.setFromCamera(this._mouse, this._camera);\n      this._raycaster.intersectObjects(this._objects, true, this._intersections);\n      if (this._intersections.length > 0) {\n        this._selected = this.transformGroup === true ? this._objects[0] : this._intersections[0].object;\n        this._plane.setFromNormalAndCoplanarPoint(\n          this._camera.getWorldDirection(this._plane.normal),\n          this._worldPosition.setFromMatrixPosition(this._selected.matrixWorld)\n        );\n        if (this._raycaster.ray.intersectPlane(this._plane, this._intersection) && this._selected.parent) {\n          this._inverseMatrix.copy(this._selected.parent.matrixWorld).invert();\n          this._offset.copy(this._intersection).sub(this._worldPosition.setFromMatrixPosition(this._selected.matrixWorld));\n        }\n        this._domElement.style.cursor = \"move\";\n        this.dispatchEvent({ type: \"dragstart\", object: this._selected });\n      }\n    });\n    __publicField(this, \"onTouchEnd\", (event) => {\n      event.preventDefault();\n      if (this._selected) {\n        this.dispatchEvent({ type: \"dragend\", object: this._selected });\n        this._selected = null;\n      }\n      this._domElement.style.cursor = \"auto\";\n    });\n    this._objects = _objects;\n    this._camera = _camera;\n    this._domElement = _domElement;\n    this.activate();\n  }\n}\nexport {\n  DragControls\n};\n"]},"metadata":{},"sourceType":"module"}