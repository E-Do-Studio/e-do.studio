{"ast":null,"code":"import { Curve, Vector3 } from \"three\";\n\nclass GrannyKnot extends Curve {\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n    t = 2 * Math.PI * t;\n    const x = -0.22 * Math.cos(t) - 1.28 * Math.sin(t) - 0.44 * Math.cos(3 * t) - 0.78 * Math.sin(3 * t);\n    const y = -0.1 * Math.cos(2 * t) - 0.27 * Math.sin(2 * t) + 0.38 * Math.cos(4 * t) + 0.46 * Math.sin(4 * t);\n    const z = 0.7 * Math.cos(3 * t) - 0.4 * Math.sin(3 * t);\n    return point.set(x, y, z).multiplyScalar(20);\n  }\n\n}\n\nclass HeartCurve extends Curve {\n  constructor(scale = 5) {\n    super();\n    this.scale = scale;\n  }\n\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n    t *= 2 * Math.PI;\n    const x = 16 * Math.pow(Math.sin(t), 3);\n    const y = 13 * Math.cos(t) - 5 * Math.cos(2 * t) - 2 * Math.cos(3 * t) - Math.cos(4 * t);\n    const z = 0;\n    return point.set(x, y, z).multiplyScalar(this.scale);\n  }\n\n}\n\nclass VivianiCurve extends Curve {\n  constructor(scale = 70) {\n    super();\n    this.scale = scale;\n  }\n\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n    t = t * 4 * Math.PI;\n    const a = this.scale / 2;\n    const x = a * (1 + Math.cos(t));\n    const y = a * Math.sin(t);\n    const z = 2 * a * Math.sin(t / 2);\n    return point.set(x, y, z);\n  }\n\n}\n\nclass KnotCurve extends Curve {\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n    t *= 2 * Math.PI;\n    const R = 10;\n    const s = 50;\n    const x = s * Math.sin(t);\n    const y = Math.cos(t) * (R + s * Math.cos(t));\n    const z = Math.sin(t) * (R + s * Math.cos(t));\n    return point.set(x, y, z);\n  }\n\n}\n\nclass HelixCurve extends Curve {\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n    const a = 30;\n    const b = 150;\n    const t2 = 2 * Math.PI * t * b / 30;\n    const x = Math.cos(t2) * a;\n    const y = Math.sin(t2) * a;\n    const z = b * t;\n    return point.set(x, y, z);\n  }\n\n}\n\nclass TrefoilKnot extends Curve {\n  constructor(scale = 10) {\n    super();\n    this.scale = scale;\n  }\n\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n    t *= Math.PI * 2;\n    const x = (2 + Math.cos(3 * t)) * Math.cos(2 * t);\n    const y = (2 + Math.cos(3 * t)) * Math.sin(2 * t);\n    const z = Math.sin(3 * t);\n    return point.set(x, y, z).multiplyScalar(this.scale);\n  }\n\n}\n\nclass TorusKnot extends Curve {\n  constructor(scale = 10) {\n    super();\n    this.scale = scale;\n  }\n\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n    const p = 3;\n    const q = 4;\n    t *= Math.PI * 2;\n    const x = (2 + Math.cos(q * t)) * Math.cos(p * t);\n    const y = (2 + Math.cos(q * t)) * Math.sin(p * t);\n    const z = Math.sin(q * t);\n    return point.set(x, y, z).multiplyScalar(this.scale);\n  }\n\n}\n\nclass CinquefoilKnot extends Curve {\n  constructor(scale = 10) {\n    super();\n    this.scale = scale;\n  }\n\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n    const p = 2;\n    const q = 5;\n    t *= Math.PI * 2;\n    const x = (2 + Math.cos(q * t)) * Math.cos(p * t);\n    const y = (2 + Math.cos(q * t)) * Math.sin(p * t);\n    const z = Math.sin(q * t);\n    return point.set(x, y, z).multiplyScalar(this.scale);\n  }\n\n}\n\nclass TrefoilPolynomialKnot extends Curve {\n  constructor(scale = 10) {\n    super();\n    this.scale = scale;\n  }\n\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n    t = t * 4 - 2;\n    const x = Math.pow(t, 3) - 3 * t;\n    const y = Math.pow(t, 4) - 4 * t * t;\n    const z = 1 / 5 * Math.pow(t, 5) - 2 * t;\n    return point.set(x, y, z).multiplyScalar(this.scale);\n  }\n\n}\n\nfunction scaleTo(x, y, t) {\n  const r = y - x;\n  return t * r + x;\n}\n\nclass FigureEightPolynomialKnot extends Curve {\n  constructor(scale = 1) {\n    super();\n    this.scale = scale;\n  }\n\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n    t = scaleTo(-4, 4, t);\n    const x = 2 / 5 * t * (t * t - 7) * (t * t - 10);\n    const y = Math.pow(t, 4) - 13 * t * t;\n    const z = 1 / 10 * t * (t * t - 4) * (t * t - 9) * (t * t - 12);\n    return point.set(x, y, z).multiplyScalar(this.scale);\n  }\n\n}\n\nclass DecoratedTorusKnot4a extends Curve {\n  constructor(scale = 40) {\n    super();\n    this.scale = scale;\n  }\n\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n    t *= Math.PI * 2;\n    const x = Math.cos(2 * t) * (1 + 0.6 * (Math.cos(5 * t) + 0.75 * Math.cos(10 * t)));\n    const y = Math.sin(2 * t) * (1 + 0.6 * (Math.cos(5 * t) + 0.75 * Math.cos(10 * t)));\n    const z = 0.35 * Math.sin(5 * t);\n    return point.set(x, y, z).multiplyScalar(this.scale);\n  }\n\n}\n\nclass DecoratedTorusKnot4b extends Curve {\n  constructor(scale = 40) {\n    super();\n    this.scale = scale;\n  }\n\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n    const fi = t * Math.PI * 2;\n    const x = Math.cos(2 * fi) * (1 + 0.45 * Math.cos(3 * fi) + 0.4 * Math.cos(9 * fi));\n    const y = Math.sin(2 * fi) * (1 + 0.45 * Math.cos(3 * fi) + 0.4 * Math.cos(9 * fi));\n    const z = 0.2 * Math.sin(9 * fi);\n    return point.set(x, y, z).multiplyScalar(this.scale);\n  }\n\n}\n\nclass DecoratedTorusKnot5a extends Curve {\n  constructor(scale = 40) {\n    super();\n    this.scale = scale;\n  }\n\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n    const fi = t * Math.PI * 2;\n    const x = Math.cos(3 * fi) * (1 + 0.3 * Math.cos(5 * fi) + 0.5 * Math.cos(10 * fi));\n    const y = Math.sin(3 * fi) * (1 + 0.3 * Math.cos(5 * fi) + 0.5 * Math.cos(10 * fi));\n    const z = 0.2 * Math.sin(20 * fi);\n    return point.set(x, y, z).multiplyScalar(this.scale);\n  }\n\n}\n\nclass DecoratedTorusKnot5c extends Curve {\n  constructor(scale = 40) {\n    super();\n    this.scale = scale;\n  }\n\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n    const fi = t * Math.PI * 2;\n    const x = Math.cos(4 * fi) * (1 + 0.5 * (Math.cos(5 * fi) + 0.4 * Math.cos(20 * fi)));\n    const y = Math.sin(4 * fi) * (1 + 0.5 * (Math.cos(5 * fi) + 0.4 * Math.cos(20 * fi)));\n    const z = 0.35 * Math.sin(15 * fi);\n    return point.set(x, y, z).multiplyScalar(this.scale);\n  }\n\n}\n\nexport { CinquefoilKnot, DecoratedTorusKnot4a, DecoratedTorusKnot4b, DecoratedTorusKnot5a, DecoratedTorusKnot5c, FigureEightPolynomialKnot, GrannyKnot, HeartCurve, HelixCurve, KnotCurve, TorusKnot, TrefoilKnot, TrefoilPolynomialKnot, VivianiCurve };","map":{"version":3,"sources":["/Users/theodaguier/_workdir/dev/pro/e-do/E-Do-Studio/node_modules/three-stdlib/curves/CurveExtras.js"],"names":["Curve","Vector3","GrannyKnot","getPoint","t","optionalTarget","point","Math","PI","x","cos","sin","y","z","set","multiplyScalar","HeartCurve","constructor","scale","pow","VivianiCurve","a","KnotCurve","R","s","HelixCurve","b","t2","TrefoilKnot","TorusKnot","p","q","CinquefoilKnot","TrefoilPolynomialKnot","scaleTo","r","FigureEightPolynomialKnot","DecoratedTorusKnot4a","DecoratedTorusKnot4b","fi","DecoratedTorusKnot5a","DecoratedTorusKnot5c"],"mappings":"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","sourcesContent":["import { Curve, Vector3 } from \"three\";\nclass GrannyKnot extends Curve {\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n    t = 2 * Math.PI * t;\n    const x = -0.22 * Math.cos(t) - 1.28 * Math.sin(t) - 0.44 * Math.cos(3 * t) - 0.78 * Math.sin(3 * t);\n    const y = -0.1 * Math.cos(2 * t) - 0.27 * Math.sin(2 * t) + 0.38 * Math.cos(4 * t) + 0.46 * Math.sin(4 * t);\n    const z = 0.7 * Math.cos(3 * t) - 0.4 * Math.sin(3 * t);\n    return point.set(x, y, z).multiplyScalar(20);\n  }\n}\nclass HeartCurve extends Curve {\n  constructor(scale = 5) {\n    super();\n    this.scale = scale;\n  }\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n    t *= 2 * Math.PI;\n    const x = 16 * Math.pow(Math.sin(t), 3);\n    const y = 13 * Math.cos(t) - 5 * Math.cos(2 * t) - 2 * Math.cos(3 * t) - Math.cos(4 * t);\n    const z = 0;\n    return point.set(x, y, z).multiplyScalar(this.scale);\n  }\n}\nclass VivianiCurve extends Curve {\n  constructor(scale = 70) {\n    super();\n    this.scale = scale;\n  }\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n    t = t * 4 * Math.PI;\n    const a = this.scale / 2;\n    const x = a * (1 + Math.cos(t));\n    const y = a * Math.sin(t);\n    const z = 2 * a * Math.sin(t / 2);\n    return point.set(x, y, z);\n  }\n}\nclass KnotCurve extends Curve {\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n    t *= 2 * Math.PI;\n    const R = 10;\n    const s = 50;\n    const x = s * Math.sin(t);\n    const y = Math.cos(t) * (R + s * Math.cos(t));\n    const z = Math.sin(t) * (R + s * Math.cos(t));\n    return point.set(x, y, z);\n  }\n}\nclass HelixCurve extends Curve {\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n    const a = 30;\n    const b = 150;\n    const t2 = 2 * Math.PI * t * b / 30;\n    const x = Math.cos(t2) * a;\n    const y = Math.sin(t2) * a;\n    const z = b * t;\n    return point.set(x, y, z);\n  }\n}\nclass TrefoilKnot extends Curve {\n  constructor(scale = 10) {\n    super();\n    this.scale = scale;\n  }\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n    t *= Math.PI * 2;\n    const x = (2 + Math.cos(3 * t)) * Math.cos(2 * t);\n    const y = (2 + Math.cos(3 * t)) * Math.sin(2 * t);\n    const z = Math.sin(3 * t);\n    return point.set(x, y, z).multiplyScalar(this.scale);\n  }\n}\nclass TorusKnot extends Curve {\n  constructor(scale = 10) {\n    super();\n    this.scale = scale;\n  }\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n    const p = 3;\n    const q = 4;\n    t *= Math.PI * 2;\n    const x = (2 + Math.cos(q * t)) * Math.cos(p * t);\n    const y = (2 + Math.cos(q * t)) * Math.sin(p * t);\n    const z = Math.sin(q * t);\n    return point.set(x, y, z).multiplyScalar(this.scale);\n  }\n}\nclass CinquefoilKnot extends Curve {\n  constructor(scale = 10) {\n    super();\n    this.scale = scale;\n  }\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n    const p = 2;\n    const q = 5;\n    t *= Math.PI * 2;\n    const x = (2 + Math.cos(q * t)) * Math.cos(p * t);\n    const y = (2 + Math.cos(q * t)) * Math.sin(p * t);\n    const z = Math.sin(q * t);\n    return point.set(x, y, z).multiplyScalar(this.scale);\n  }\n}\nclass TrefoilPolynomialKnot extends Curve {\n  constructor(scale = 10) {\n    super();\n    this.scale = scale;\n  }\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n    t = t * 4 - 2;\n    const x = Math.pow(t, 3) - 3 * t;\n    const y = Math.pow(t, 4) - 4 * t * t;\n    const z = 1 / 5 * Math.pow(t, 5) - 2 * t;\n    return point.set(x, y, z).multiplyScalar(this.scale);\n  }\n}\nfunction scaleTo(x, y, t) {\n  const r = y - x;\n  return t * r + x;\n}\nclass FigureEightPolynomialKnot extends Curve {\n  constructor(scale = 1) {\n    super();\n    this.scale = scale;\n  }\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n    t = scaleTo(-4, 4, t);\n    const x = 2 / 5 * t * (t * t - 7) * (t * t - 10);\n    const y = Math.pow(t, 4) - 13 * t * t;\n    const z = 1 / 10 * t * (t * t - 4) * (t * t - 9) * (t * t - 12);\n    return point.set(x, y, z).multiplyScalar(this.scale);\n  }\n}\nclass DecoratedTorusKnot4a extends Curve {\n  constructor(scale = 40) {\n    super();\n    this.scale = scale;\n  }\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n    t *= Math.PI * 2;\n    const x = Math.cos(2 * t) * (1 + 0.6 * (Math.cos(5 * t) + 0.75 * Math.cos(10 * t)));\n    const y = Math.sin(2 * t) * (1 + 0.6 * (Math.cos(5 * t) + 0.75 * Math.cos(10 * t)));\n    const z = 0.35 * Math.sin(5 * t);\n    return point.set(x, y, z).multiplyScalar(this.scale);\n  }\n}\nclass DecoratedTorusKnot4b extends Curve {\n  constructor(scale = 40) {\n    super();\n    this.scale = scale;\n  }\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n    const fi = t * Math.PI * 2;\n    const x = Math.cos(2 * fi) * (1 + 0.45 * Math.cos(3 * fi) + 0.4 * Math.cos(9 * fi));\n    const y = Math.sin(2 * fi) * (1 + 0.45 * Math.cos(3 * fi) + 0.4 * Math.cos(9 * fi));\n    const z = 0.2 * Math.sin(9 * fi);\n    return point.set(x, y, z).multiplyScalar(this.scale);\n  }\n}\nclass DecoratedTorusKnot5a extends Curve {\n  constructor(scale = 40) {\n    super();\n    this.scale = scale;\n  }\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n    const fi = t * Math.PI * 2;\n    const x = Math.cos(3 * fi) * (1 + 0.3 * Math.cos(5 * fi) + 0.5 * Math.cos(10 * fi));\n    const y = Math.sin(3 * fi) * (1 + 0.3 * Math.cos(5 * fi) + 0.5 * Math.cos(10 * fi));\n    const z = 0.2 * Math.sin(20 * fi);\n    return point.set(x, y, z).multiplyScalar(this.scale);\n  }\n}\nclass DecoratedTorusKnot5c extends Curve {\n  constructor(scale = 40) {\n    super();\n    this.scale = scale;\n  }\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n    const fi = t * Math.PI * 2;\n    const x = Math.cos(4 * fi) * (1 + 0.5 * (Math.cos(5 * fi) + 0.4 * Math.cos(20 * fi)));\n    const y = Math.sin(4 * fi) * (1 + 0.5 * (Math.cos(5 * fi) + 0.4 * Math.cos(20 * fi)));\n    const z = 0.35 * Math.sin(15 * fi);\n    return point.set(x, y, z).multiplyScalar(this.scale);\n  }\n}\nexport {\n  CinquefoilKnot,\n  DecoratedTorusKnot4a,\n  DecoratedTorusKnot4b,\n  DecoratedTorusKnot5a,\n  DecoratedTorusKnot5c,\n  FigureEightPolynomialKnot,\n  GrannyKnot,\n  HeartCurve,\n  HelixCurve,\n  KnotCurve,\n  TorusKnot,\n  TrefoilKnot,\n  TrefoilPolynomialKnot,\n  VivianiCurve\n};\n"]},"metadata":{},"sourceType":"module"}