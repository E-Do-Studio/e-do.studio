{"ast":null,"code":"import i18next from \"i18next\";\nimport { initReactI18next } from \"react-i18next\"; // import your translation files\n\nimport menuFr from \"./translation/en/menu.json\";\nimport argumentFr from \"./translation/en/argument.json\"; // initialize the i18next library\n\ni18next.use(initReactI18next).init({\n  resources: {\n    fr: {\n      menu: menuFr,\n      argument: argumentFr\n    }\n  },\n  lng: \"fr\",\n  fallbackLng: \"en\",\n  interpolation: {\n    escapeValue: false\n  }\n});\n\nconst saveLanguage = language => {\n  localStorage.setItem(\"i18nextLng\", language);\n}; // load the saved language if it exists\n\n\nconst loadLanguage = () => {\n  const savedLanguage = localStorage.getItem(\"i18nextLng\");\n  if (savedLanguage) i18next.changeLanguage(savedLanguage);\n};\n\nexport default i18next;","map":{"version":3,"sources":["/Users/theodaguier/e-do/src/i18n.js"],"names":["i18next","initReactI18next","menuFr","argumentFr","use","init","resources","fr","menu","argument","lng","fallbackLng","interpolation","escapeValue","saveLanguage","language","localStorage","setItem","loadLanguage","savedLanguage","getItem","changeLanguage"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,SAASC,gBAAT,QAAiC,eAAjC,C,CAEA;;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;AAEA,OAAOC,UAAP,MAAuB,gCAAvB,C,CAEA;;AACAH,OAAO,CAACI,GAAR,CAAYH,gBAAZ,EAA8BI,IAA9B,CAAmC;AACjCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,EAAE,EAAE;AACFC,MAAAA,IAAI,EAAEN,MADJ;AAEFO,MAAAA,QAAQ,EAAEN;AAFR;AADK,GADsB;AAOjCO,EAAAA,GAAG,EAAE,IAP4B;AAQjCC,EAAAA,WAAW,EAAE,IARoB;AASjCC,EAAAA,aAAa,EAAE;AACbC,IAAAA,WAAW,EAAE;AADA;AATkB,CAAnC;;AAcA,MAAMC,YAAY,GAAIC,QAAD,IAAc;AACjCC,EAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCF,QAAnC;AACD,CAFD,C,CAIA;;;AACA,MAAMG,YAAY,GAAG,MAAM;AACzB,QAAMC,aAAa,GAAGH,YAAY,CAACI,OAAb,CAAqB,YAArB,CAAtB;AACA,MAAID,aAAJ,EAAmBnB,OAAO,CAACqB,cAAR,CAAuBF,aAAvB;AACpB,CAHD;;AAKA,eAAenB,OAAf","sourcesContent":["import i18next from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\n// import your translation files\n\nimport menuFr from \"./translation/en/menu.json\";\n\nimport argumentFr from \"./translation/en/argument.json\";\n\n// initialize the i18next library\ni18next.use(initReactI18next).init({\n  resources: {\n    fr: {\n      menu: menuFr,\n      argument: argumentFr,\n    },\n  },\n  lng: \"fr\",\n  fallbackLng: \"en\",\n  interpolation: {\n    escapeValue: false,\n  },\n});\n\nconst saveLanguage = (language) => {\n  localStorage.setItem(\"i18nextLng\", language);\n};\n\n// load the saved language if it exists\nconst loadLanguage = () => {\n  const savedLanguage = localStorage.getItem(\"i18nextLng\");\n  if (savedLanguage) i18next.changeLanguage(savedLanguage);\n};\n\nexport default i18next;\n"]},"metadata":{},"sourceType":"module"}