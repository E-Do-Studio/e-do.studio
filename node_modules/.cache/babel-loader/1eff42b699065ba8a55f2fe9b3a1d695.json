{"ast":null,"code":"import _classCallCheck from \"/Users/theodaguier/Repositories/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/theodaguier/Repositories/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Object3D, TextureLoader, UVMapping, Box3, MathUtils, MeshLambertMaterial } from \"three\";\nimport { MD2Loader } from \"../loaders/MD2Loader.js\";\nimport { MorphBlendMesh } from \"./MorphBlendMesh.js\";\n\nvar MD2CharacterComplex = /*#__PURE__*/function () {\n  function MD2CharacterComplex() {\n    _classCallCheck(this, MD2CharacterComplex);\n\n    this.scale = 1;\n    this.animationFPS = 6;\n    this.transitionFrames = 15;\n    this.maxSpeed = 275;\n    this.maxReverseSpeed = -275;\n    this.frontAcceleration = 600;\n    this.backAcceleration = 600;\n    this.frontDecceleration = 600;\n    this.angularSpeed = 2.5;\n    this.root = new Object3D();\n    this.meshBody = null;\n    this.meshWeapon = null;\n    this.controls = null;\n    this.skinsBody = [];\n    this.skinsWeapon = [];\n    this.weapons = [];\n    this.currentSkin = void 0;\n\n    this.onLoadComplete = function () {};\n\n    this.meshes = [];\n    this.animations = {};\n    this.loadCounter = 0;\n    this.speed = 0;\n    this.bodyOrientation = 0;\n    this.walkSpeed = this.maxSpeed;\n    this.crouchSpeed = this.maxSpeed * 0.5;\n    this.activeAnimation = null;\n    this.oldAnimation = null;\n  }\n\n  _createClass(MD2CharacterComplex, [{\n    key: \"enableShadows\",\n    value: function enableShadows(enable) {\n      for (var i = 0; i < this.meshes.length; i++) {\n        this.meshes[i].castShadow = enable;\n        this.meshes[i].receiveShadow = enable;\n      }\n    }\n  }, {\n    key: \"setVisible\",\n    value: function setVisible(enable) {\n      for (var i = 0; i < this.meshes.length; i++) {\n        this.meshes[i].visible = enable;\n        this.meshes[i].visible = enable;\n      }\n    }\n  }, {\n    key: \"shareParts\",\n    value: function shareParts(original) {\n      this.animations = original.animations;\n      this.walkSpeed = original.walkSpeed;\n      this.crouchSpeed = original.crouchSpeed;\n      this.skinsBody = original.skinsBody;\n      this.skinsWeapon = original.skinsWeapon;\n\n      var mesh = this._createPart(original.meshBody.geometry, this.skinsBody[0]);\n\n      mesh.scale.set(this.scale, this.scale, this.scale);\n      this.root.position.y = original.root.position.y;\n      this.root.add(mesh);\n      this.meshBody = mesh;\n      this.meshes.push(mesh);\n\n      for (var i = 0; i < original.weapons.length; i++) {\n        var meshWeapon = this._createPart(original.weapons[i].geometry, this.skinsWeapon[i]);\n\n        meshWeapon.scale.set(this.scale, this.scale, this.scale);\n        meshWeapon.visible = false;\n        meshWeapon.name = original.weapons[i].name;\n        this.root.add(meshWeapon);\n        this.weapons[i] = meshWeapon;\n        this.meshWeapon = meshWeapon;\n        this.meshes.push(meshWeapon);\n      }\n    }\n  }, {\n    key: \"loadParts\",\n    value: function loadParts(config) {\n      var scope = this;\n\n      function loadTextures(baseUrl, textureUrls) {\n        var textureLoader = new TextureLoader();\n        var textures = [];\n\n        for (var i = 0; i < textureUrls.length; i++) {\n          textures[i] = textureLoader.load(baseUrl + textureUrls[i], checkLoadingComplete);\n          textures[i].mapping = UVMapping;\n          textures[i].name = textureUrls[i];\n          if (\"colorSpace\" in textures[i]) textures[i].colorSpace = \"srgb\";else textures[i].encoding = 3001;\n        }\n\n        return textures;\n      }\n\n      function checkLoadingComplete() {\n        scope.loadCounter -= 1;\n        if (scope.loadCounter === 0) scope.onLoadComplete();\n      }\n\n      this.animations = config.animations;\n      this.walkSpeed = config.walkSpeed;\n      this.crouchSpeed = config.crouchSpeed;\n      this.loadCounter = config.weapons.length * 2 + config.skins.length + 1;\n      var weaponsTextures = [];\n\n      for (var i = 0; i < config.weapons.length; i++) {\n        weaponsTextures[i] = config.weapons[i][1];\n      }\n\n      this.skinsBody = loadTextures(config.baseUrl + \"skins/\", config.skins);\n      this.skinsWeapon = loadTextures(config.baseUrl + \"skins/\", weaponsTextures);\n      var loader = new MD2Loader();\n      loader.load(config.baseUrl + config.body, function (geo) {\n        var boundingBox = new Box3();\n        boundingBox.setFromBufferAttribute(geo.attributes.position);\n        scope.root.position.y = -scope.scale * boundingBox.min.y;\n\n        var mesh = scope._createPart(geo, scope.skinsBody[0]);\n\n        mesh.scale.set(scope.scale, scope.scale, scope.scale);\n        scope.root.add(mesh);\n        scope.meshBody = mesh;\n        scope.meshes.push(mesh);\n        checkLoadingComplete();\n      });\n\n      var generateCallback = function generateCallback(index, name) {\n        return function (geo) {\n          var mesh = scope._createPart(geo, scope.skinsWeapon[index]);\n\n          mesh.scale.set(scope.scale, scope.scale, scope.scale);\n          mesh.visible = false;\n          mesh.name = name;\n          scope.root.add(mesh);\n          scope.weapons[index] = mesh;\n          scope.meshWeapon = mesh;\n          scope.meshes.push(mesh);\n          checkLoadingComplete();\n        };\n      };\n\n      for (var _i = 0; _i < config.weapons.length; _i++) {\n        loader.load(config.baseUrl + config.weapons[_i][0], generateCallback(_i, config.weapons[_i][0]));\n      }\n    }\n  }, {\n    key: \"setPlaybackRate\",\n    value: function setPlaybackRate(rate) {\n      if (this.meshBody) this.meshBody.duration = this.meshBody.baseDuration / rate;\n      if (this.meshWeapon) this.meshWeapon.duration = this.meshWeapon.baseDuration / rate;\n    }\n  }, {\n    key: \"setWireframe\",\n    value: function setWireframe(wireframeEnabled) {\n      if (wireframeEnabled) {\n        if (this.meshBody) this.meshBody.material = this.meshBody.materialWireframe;\n        if (this.meshWeapon) this.meshWeapon.material = this.meshWeapon.materialWireframe;\n      } else {\n        if (this.meshBody) this.meshBody.material = this.meshBody.materialTexture;\n        if (this.meshWeapon) this.meshWeapon.material = this.meshWeapon.materialTexture;\n      }\n    }\n  }, {\n    key: \"setSkin\",\n    value: function setSkin(index) {\n      if (this.meshBody && this.meshBody.material.wireframe === false) {\n        this.meshBody.material.map = this.skinsBody[index];\n        this.currentSkin = index;\n      }\n    }\n  }, {\n    key: \"setWeapon\",\n    value: function setWeapon(index) {\n      for (var i = 0; i < this.weapons.length; i++) {\n        this.weapons[i].visible = false;\n      }\n\n      var activeWeapon = this.weapons[index];\n\n      if (activeWeapon) {\n        activeWeapon.visible = true;\n        this.meshWeapon = activeWeapon;\n\n        if (this.activeAnimation) {\n          activeWeapon.playAnimation(this.activeAnimation);\n          this.meshWeapon.setAnimationTime(this.activeAnimation, this.meshBody.getAnimationTime(this.activeAnimation));\n        }\n      }\n    }\n  }, {\n    key: \"setAnimation\",\n    value: function setAnimation(animationName) {\n      if (animationName === this.activeAnimation || !animationName) return;\n\n      if (this.meshBody) {\n        this.meshBody.setAnimationWeight(animationName, 0);\n        this.meshBody.playAnimation(animationName);\n        this.oldAnimation = this.activeAnimation;\n        this.activeAnimation = animationName;\n        this.blendCounter = this.transitionFrames;\n      }\n\n      if (this.meshWeapon) {\n        this.meshWeapon.setAnimationWeight(animationName, 0);\n        this.meshWeapon.playAnimation(animationName);\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(delta) {\n      if (this.controls) this.updateMovementModel(delta);\n\n      if (this.animations) {\n        this.updateBehaviors();\n        this.updateAnimations(delta);\n      }\n    }\n  }, {\n    key: \"updateAnimations\",\n    value: function updateAnimations(delta) {\n      var mix = 1;\n\n      if (this.blendCounter > 0) {\n        mix = (this.transitionFrames - this.blendCounter) / this.transitionFrames;\n        this.blendCounter -= 1;\n      }\n\n      if (this.meshBody) {\n        this.meshBody.update(delta);\n        this.meshBody.setAnimationWeight(this.activeAnimation, mix);\n        this.meshBody.setAnimationWeight(this.oldAnimation, 1 - mix);\n      }\n\n      if (this.meshWeapon) {\n        this.meshWeapon.update(delta);\n        this.meshWeapon.setAnimationWeight(this.activeAnimation, mix);\n        this.meshWeapon.setAnimationWeight(this.oldAnimation, 1 - mix);\n      }\n    }\n  }, {\n    key: \"updateBehaviors\",\n    value: function updateBehaviors() {\n      var controls = this.controls;\n      var animations = this.animations;\n      var moveAnimation, idleAnimation;\n\n      if (controls.crouch) {\n        moveAnimation = animations[\"crouchMove\"];\n        idleAnimation = animations[\"crouchIdle\"];\n      } else {\n        moveAnimation = animations[\"move\"];\n        idleAnimation = animations[\"idle\"];\n      }\n\n      if (controls.jump) {\n        moveAnimation = animations[\"jump\"];\n        idleAnimation = animations[\"jump\"];\n      }\n\n      if (controls.attack) {\n        if (controls.crouch) {\n          moveAnimation = animations[\"crouchAttack\"];\n          idleAnimation = animations[\"crouchAttack\"];\n        } else {\n          moveAnimation = animations[\"attack\"];\n          idleAnimation = animations[\"attack\"];\n        }\n      }\n\n      if (controls.moveForward || controls.moveBackward || controls.moveLeft || controls.moveRight) {\n        if (this.activeAnimation !== moveAnimation) {\n          this.setAnimation(moveAnimation);\n        }\n      }\n\n      if (Math.abs(this.speed) < 0.2 * this.maxSpeed && !(controls.moveLeft || controls.moveRight || controls.moveForward || controls.moveBackward)) {\n        if (this.activeAnimation !== idleAnimation) {\n          this.setAnimation(idleAnimation);\n        }\n      }\n\n      if (controls.moveForward) {\n        if (this.meshBody) {\n          this.meshBody.setAnimationDirectionForward(this.activeAnimation);\n          this.meshBody.setAnimationDirectionForward(this.oldAnimation);\n        }\n\n        if (this.meshWeapon) {\n          this.meshWeapon.setAnimationDirectionForward(this.activeAnimation);\n          this.meshWeapon.setAnimationDirectionForward(this.oldAnimation);\n        }\n      }\n\n      if (controls.moveBackward) {\n        if (this.meshBody) {\n          this.meshBody.setAnimationDirectionBackward(this.activeAnimation);\n          this.meshBody.setAnimationDirectionBackward(this.oldAnimation);\n        }\n\n        if (this.meshWeapon) {\n          this.meshWeapon.setAnimationDirectionBackward(this.activeAnimation);\n          this.meshWeapon.setAnimationDirectionBackward(this.oldAnimation);\n        }\n      }\n    }\n  }, {\n    key: \"updateMovementModel\",\n    value: function updateMovementModel(delta) {\n      function exponentialEaseOut(k) {\n        return k === 1 ? 1 : -Math.pow(2, -10 * k) + 1;\n      }\n\n      var controls = this.controls;\n      if (controls.crouch) this.maxSpeed = this.crouchSpeed;else this.maxSpeed = this.walkSpeed;\n      this.maxReverseSpeed = -this.maxSpeed;\n      if (controls.moveForward) this.speed = MathUtils.clamp(this.speed + delta * this.frontAcceleration, this.maxReverseSpeed, this.maxSpeed);\n      if (controls.moveBackward) this.speed = MathUtils.clamp(this.speed - delta * this.backAcceleration, this.maxReverseSpeed, this.maxSpeed);\n      var dir = 1;\n\n      if (controls.moveLeft) {\n        this.bodyOrientation += delta * this.angularSpeed;\n        this.speed = MathUtils.clamp(this.speed + dir * delta * this.frontAcceleration, this.maxReverseSpeed, this.maxSpeed);\n      }\n\n      if (controls.moveRight) {\n        this.bodyOrientation -= delta * this.angularSpeed;\n        this.speed = MathUtils.clamp(this.speed + dir * delta * this.frontAcceleration, this.maxReverseSpeed, this.maxSpeed);\n      }\n\n      if (!(controls.moveForward || controls.moveBackward)) {\n        if (this.speed > 0) {\n          var k = exponentialEaseOut(this.speed / this.maxSpeed);\n          this.speed = MathUtils.clamp(this.speed - k * delta * this.frontDecceleration, 0, this.maxSpeed);\n        } else {\n          var _k = exponentialEaseOut(this.speed / this.maxReverseSpeed);\n\n          this.speed = MathUtils.clamp(this.speed + _k * delta * this.backAcceleration, this.maxReverseSpeed, 0);\n        }\n      }\n\n      var forwardDelta = this.speed * delta;\n      this.root.position.x += Math.sin(this.bodyOrientation) * forwardDelta;\n      this.root.position.z += Math.cos(this.bodyOrientation) * forwardDelta;\n      this.root.rotation.y = this.bodyOrientation;\n    } // internal\n\n  }, {\n    key: \"_createPart\",\n    value: function _createPart(geometry, skinMap) {\n      var materialWireframe = new MeshLambertMaterial({\n        color: 16755200,\n        wireframe: true,\n        morphTargets: true,\n        morphNormals: true\n      });\n      var materialTexture = new MeshLambertMaterial({\n        color: 16777215,\n        wireframe: false,\n        map: skinMap,\n        morphTargets: true,\n        morphNormals: true\n      });\n      var mesh = new MorphBlendMesh(geometry, materialTexture);\n      mesh.rotation.y = -Math.PI / 2;\n      mesh.materialTexture = materialTexture;\n      mesh.materialWireframe = materialWireframe;\n      mesh.autoCreateAnimations(this.animationFPS);\n      return mesh;\n    }\n  }]);\n\n  return MD2CharacterComplex;\n}();\n\nexport { MD2CharacterComplex };","map":{"version":3,"sources":["/Users/theodaguier/Repositories/E-Do-Studio/node_modules/three-stdlib/misc/MD2CharacterComplex.js"],"names":["Object3D","TextureLoader","UVMapping","Box3","MathUtils","MeshLambertMaterial","MD2Loader","MorphBlendMesh","MD2CharacterComplex","scale","animationFPS","transitionFrames","maxSpeed","maxReverseSpeed","frontAcceleration","backAcceleration","frontDecceleration","angularSpeed","root","meshBody","meshWeapon","controls","skinsBody","skinsWeapon","weapons","currentSkin","onLoadComplete","meshes","animations","loadCounter","speed","bodyOrientation","walkSpeed","crouchSpeed","activeAnimation","oldAnimation","enable","i","length","castShadow","receiveShadow","visible","original","mesh","_createPart","geometry","set","position","y","add","push","name","config","scope","loadTextures","baseUrl","textureUrls","textureLoader","textures","load","checkLoadingComplete","mapping","colorSpace","encoding","skins","weaponsTextures","loader","body","geo","boundingBox","setFromBufferAttribute","attributes","min","generateCallback","index","rate","duration","baseDuration","wireframeEnabled","material","materialWireframe","materialTexture","wireframe","map","activeWeapon","playAnimation","setAnimationTime","getAnimationTime","animationName","setAnimationWeight","blendCounter","delta","updateMovementModel","updateBehaviors","updateAnimations","mix","update","moveAnimation","idleAnimation","crouch","jump","attack","moveForward","moveBackward","moveLeft","moveRight","setAnimation","Math","abs","setAnimationDirectionForward","setAnimationDirectionBackward","exponentialEaseOut","k","pow","clamp","dir","forwardDelta","x","sin","z","cos","rotation","skinMap","color","morphTargets","morphNormals","PI","autoCreateAnimations"],"mappings":"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","sourcesContent":["import { Object3D, TextureLoader, UVMapping, Box3, MathUtils, MeshLambertMaterial } from \"three\";\nimport { MD2Loader } from \"../loaders/MD2Loader.js\";\nimport { MorphBlendMesh } from \"./MorphBlendMesh.js\";\nclass MD2CharacterComplex {\n  constructor() {\n    this.scale = 1;\n    this.animationFPS = 6;\n    this.transitionFrames = 15;\n    this.maxSpeed = 275;\n    this.maxReverseSpeed = -275;\n    this.frontAcceleration = 600;\n    this.backAcceleration = 600;\n    this.frontDecceleration = 600;\n    this.angularSpeed = 2.5;\n    this.root = new Object3D();\n    this.meshBody = null;\n    this.meshWeapon = null;\n    this.controls = null;\n    this.skinsBody = [];\n    this.skinsWeapon = [];\n    this.weapons = [];\n    this.currentSkin = void 0;\n    this.onLoadComplete = function() {\n    };\n    this.meshes = [];\n    this.animations = {};\n    this.loadCounter = 0;\n    this.speed = 0;\n    this.bodyOrientation = 0;\n    this.walkSpeed = this.maxSpeed;\n    this.crouchSpeed = this.maxSpeed * 0.5;\n    this.activeAnimation = null;\n    this.oldAnimation = null;\n  }\n  enableShadows(enable) {\n    for (let i = 0; i < this.meshes.length; i++) {\n      this.meshes[i].castShadow = enable;\n      this.meshes[i].receiveShadow = enable;\n    }\n  }\n  setVisible(enable) {\n    for (let i = 0; i < this.meshes.length; i++) {\n      this.meshes[i].visible = enable;\n      this.meshes[i].visible = enable;\n    }\n  }\n  shareParts(original) {\n    this.animations = original.animations;\n    this.walkSpeed = original.walkSpeed;\n    this.crouchSpeed = original.crouchSpeed;\n    this.skinsBody = original.skinsBody;\n    this.skinsWeapon = original.skinsWeapon;\n    const mesh = this._createPart(original.meshBody.geometry, this.skinsBody[0]);\n    mesh.scale.set(this.scale, this.scale, this.scale);\n    this.root.position.y = original.root.position.y;\n    this.root.add(mesh);\n    this.meshBody = mesh;\n    this.meshes.push(mesh);\n    for (let i = 0; i < original.weapons.length; i++) {\n      const meshWeapon = this._createPart(original.weapons[i].geometry, this.skinsWeapon[i]);\n      meshWeapon.scale.set(this.scale, this.scale, this.scale);\n      meshWeapon.visible = false;\n      meshWeapon.name = original.weapons[i].name;\n      this.root.add(meshWeapon);\n      this.weapons[i] = meshWeapon;\n      this.meshWeapon = meshWeapon;\n      this.meshes.push(meshWeapon);\n    }\n  }\n  loadParts(config) {\n    const scope = this;\n    function loadTextures(baseUrl, textureUrls) {\n      const textureLoader = new TextureLoader();\n      const textures = [];\n      for (let i = 0; i < textureUrls.length; i++) {\n        textures[i] = textureLoader.load(baseUrl + textureUrls[i], checkLoadingComplete);\n        textures[i].mapping = UVMapping;\n        textures[i].name = textureUrls[i];\n        if (\"colorSpace\" in textures[i])\n          textures[i].colorSpace = \"srgb\";\n        else\n          textures[i].encoding = 3001;\n      }\n      return textures;\n    }\n    function checkLoadingComplete() {\n      scope.loadCounter -= 1;\n      if (scope.loadCounter === 0)\n        scope.onLoadComplete();\n    }\n    this.animations = config.animations;\n    this.walkSpeed = config.walkSpeed;\n    this.crouchSpeed = config.crouchSpeed;\n    this.loadCounter = config.weapons.length * 2 + config.skins.length + 1;\n    const weaponsTextures = [];\n    for (let i = 0; i < config.weapons.length; i++)\n      weaponsTextures[i] = config.weapons[i][1];\n    this.skinsBody = loadTextures(config.baseUrl + \"skins/\", config.skins);\n    this.skinsWeapon = loadTextures(config.baseUrl + \"skins/\", weaponsTextures);\n    const loader = new MD2Loader();\n    loader.load(config.baseUrl + config.body, function(geo) {\n      const boundingBox = new Box3();\n      boundingBox.setFromBufferAttribute(geo.attributes.position);\n      scope.root.position.y = -scope.scale * boundingBox.min.y;\n      const mesh = scope._createPart(geo, scope.skinsBody[0]);\n      mesh.scale.set(scope.scale, scope.scale, scope.scale);\n      scope.root.add(mesh);\n      scope.meshBody = mesh;\n      scope.meshes.push(mesh);\n      checkLoadingComplete();\n    });\n    const generateCallback = function(index, name) {\n      return function(geo) {\n        const mesh = scope._createPart(geo, scope.skinsWeapon[index]);\n        mesh.scale.set(scope.scale, scope.scale, scope.scale);\n        mesh.visible = false;\n        mesh.name = name;\n        scope.root.add(mesh);\n        scope.weapons[index] = mesh;\n        scope.meshWeapon = mesh;\n        scope.meshes.push(mesh);\n        checkLoadingComplete();\n      };\n    };\n    for (let i = 0; i < config.weapons.length; i++) {\n      loader.load(config.baseUrl + config.weapons[i][0], generateCallback(i, config.weapons[i][0]));\n    }\n  }\n  setPlaybackRate(rate) {\n    if (this.meshBody)\n      this.meshBody.duration = this.meshBody.baseDuration / rate;\n    if (this.meshWeapon)\n      this.meshWeapon.duration = this.meshWeapon.baseDuration / rate;\n  }\n  setWireframe(wireframeEnabled) {\n    if (wireframeEnabled) {\n      if (this.meshBody)\n        this.meshBody.material = this.meshBody.materialWireframe;\n      if (this.meshWeapon)\n        this.meshWeapon.material = this.meshWeapon.materialWireframe;\n    } else {\n      if (this.meshBody)\n        this.meshBody.material = this.meshBody.materialTexture;\n      if (this.meshWeapon)\n        this.meshWeapon.material = this.meshWeapon.materialTexture;\n    }\n  }\n  setSkin(index) {\n    if (this.meshBody && this.meshBody.material.wireframe === false) {\n      this.meshBody.material.map = this.skinsBody[index];\n      this.currentSkin = index;\n    }\n  }\n  setWeapon(index) {\n    for (let i = 0; i < this.weapons.length; i++)\n      this.weapons[i].visible = false;\n    const activeWeapon = this.weapons[index];\n    if (activeWeapon) {\n      activeWeapon.visible = true;\n      this.meshWeapon = activeWeapon;\n      if (this.activeAnimation) {\n        activeWeapon.playAnimation(this.activeAnimation);\n        this.meshWeapon.setAnimationTime(this.activeAnimation, this.meshBody.getAnimationTime(this.activeAnimation));\n      }\n    }\n  }\n  setAnimation(animationName) {\n    if (animationName === this.activeAnimation || !animationName)\n      return;\n    if (this.meshBody) {\n      this.meshBody.setAnimationWeight(animationName, 0);\n      this.meshBody.playAnimation(animationName);\n      this.oldAnimation = this.activeAnimation;\n      this.activeAnimation = animationName;\n      this.blendCounter = this.transitionFrames;\n    }\n    if (this.meshWeapon) {\n      this.meshWeapon.setAnimationWeight(animationName, 0);\n      this.meshWeapon.playAnimation(animationName);\n    }\n  }\n  update(delta) {\n    if (this.controls)\n      this.updateMovementModel(delta);\n    if (this.animations) {\n      this.updateBehaviors();\n      this.updateAnimations(delta);\n    }\n  }\n  updateAnimations(delta) {\n    let mix = 1;\n    if (this.blendCounter > 0) {\n      mix = (this.transitionFrames - this.blendCounter) / this.transitionFrames;\n      this.blendCounter -= 1;\n    }\n    if (this.meshBody) {\n      this.meshBody.update(delta);\n      this.meshBody.setAnimationWeight(this.activeAnimation, mix);\n      this.meshBody.setAnimationWeight(this.oldAnimation, 1 - mix);\n    }\n    if (this.meshWeapon) {\n      this.meshWeapon.update(delta);\n      this.meshWeapon.setAnimationWeight(this.activeAnimation, mix);\n      this.meshWeapon.setAnimationWeight(this.oldAnimation, 1 - mix);\n    }\n  }\n  updateBehaviors() {\n    const controls = this.controls;\n    const animations = this.animations;\n    let moveAnimation, idleAnimation;\n    if (controls.crouch) {\n      moveAnimation = animations[\"crouchMove\"];\n      idleAnimation = animations[\"crouchIdle\"];\n    } else {\n      moveAnimation = animations[\"move\"];\n      idleAnimation = animations[\"idle\"];\n    }\n    if (controls.jump) {\n      moveAnimation = animations[\"jump\"];\n      idleAnimation = animations[\"jump\"];\n    }\n    if (controls.attack) {\n      if (controls.crouch) {\n        moveAnimation = animations[\"crouchAttack\"];\n        idleAnimation = animations[\"crouchAttack\"];\n      } else {\n        moveAnimation = animations[\"attack\"];\n        idleAnimation = animations[\"attack\"];\n      }\n    }\n    if (controls.moveForward || controls.moveBackward || controls.moveLeft || controls.moveRight) {\n      if (this.activeAnimation !== moveAnimation) {\n        this.setAnimation(moveAnimation);\n      }\n    }\n    if (Math.abs(this.speed) < 0.2 * this.maxSpeed && !(controls.moveLeft || controls.moveRight || controls.moveForward || controls.moveBackward)) {\n      if (this.activeAnimation !== idleAnimation) {\n        this.setAnimation(idleAnimation);\n      }\n    }\n    if (controls.moveForward) {\n      if (this.meshBody) {\n        this.meshBody.setAnimationDirectionForward(this.activeAnimation);\n        this.meshBody.setAnimationDirectionForward(this.oldAnimation);\n      }\n      if (this.meshWeapon) {\n        this.meshWeapon.setAnimationDirectionForward(this.activeAnimation);\n        this.meshWeapon.setAnimationDirectionForward(this.oldAnimation);\n      }\n    }\n    if (controls.moveBackward) {\n      if (this.meshBody) {\n        this.meshBody.setAnimationDirectionBackward(this.activeAnimation);\n        this.meshBody.setAnimationDirectionBackward(this.oldAnimation);\n      }\n      if (this.meshWeapon) {\n        this.meshWeapon.setAnimationDirectionBackward(this.activeAnimation);\n        this.meshWeapon.setAnimationDirectionBackward(this.oldAnimation);\n      }\n    }\n  }\n  updateMovementModel(delta) {\n    function exponentialEaseOut(k) {\n      return k === 1 ? 1 : -Math.pow(2, -10 * k) + 1;\n    }\n    const controls = this.controls;\n    if (controls.crouch)\n      this.maxSpeed = this.crouchSpeed;\n    else\n      this.maxSpeed = this.walkSpeed;\n    this.maxReverseSpeed = -this.maxSpeed;\n    if (controls.moveForward)\n      this.speed = MathUtils.clamp(this.speed + delta * this.frontAcceleration, this.maxReverseSpeed, this.maxSpeed);\n    if (controls.moveBackward)\n      this.speed = MathUtils.clamp(this.speed - delta * this.backAcceleration, this.maxReverseSpeed, this.maxSpeed);\n    const dir = 1;\n    if (controls.moveLeft) {\n      this.bodyOrientation += delta * this.angularSpeed;\n      this.speed = MathUtils.clamp(\n        this.speed + dir * delta * this.frontAcceleration,\n        this.maxReverseSpeed,\n        this.maxSpeed\n      );\n    }\n    if (controls.moveRight) {\n      this.bodyOrientation -= delta * this.angularSpeed;\n      this.speed = MathUtils.clamp(\n        this.speed + dir * delta * this.frontAcceleration,\n        this.maxReverseSpeed,\n        this.maxSpeed\n      );\n    }\n    if (!(controls.moveForward || controls.moveBackward)) {\n      if (this.speed > 0) {\n        const k = exponentialEaseOut(this.speed / this.maxSpeed);\n        this.speed = MathUtils.clamp(this.speed - k * delta * this.frontDecceleration, 0, this.maxSpeed);\n      } else {\n        const k = exponentialEaseOut(this.speed / this.maxReverseSpeed);\n        this.speed = MathUtils.clamp(this.speed + k * delta * this.backAcceleration, this.maxReverseSpeed, 0);\n      }\n    }\n    const forwardDelta = this.speed * delta;\n    this.root.position.x += Math.sin(this.bodyOrientation) * forwardDelta;\n    this.root.position.z += Math.cos(this.bodyOrientation) * forwardDelta;\n    this.root.rotation.y = this.bodyOrientation;\n  }\n  // internal\n  _createPart(geometry, skinMap) {\n    const materialWireframe = new MeshLambertMaterial({\n      color: 16755200,\n      wireframe: true,\n      morphTargets: true,\n      morphNormals: true\n    });\n    const materialTexture = new MeshLambertMaterial({\n      color: 16777215,\n      wireframe: false,\n      map: skinMap,\n      morphTargets: true,\n      morphNormals: true\n    });\n    const mesh = new MorphBlendMesh(geometry, materialTexture);\n    mesh.rotation.y = -Math.PI / 2;\n    mesh.materialTexture = materialTexture;\n    mesh.materialWireframe = materialWireframe;\n    mesh.autoCreateAnimations(this.animationFPS);\n    return mesh;\n  }\n}\nexport {\n  MD2CharacterComplex\n};\n"]},"metadata":{},"sourceType":"module"}