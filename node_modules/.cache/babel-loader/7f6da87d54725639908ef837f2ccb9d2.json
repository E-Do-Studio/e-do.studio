{"ast":null,"code":"const KaleidoShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    sides: {\n      value: 6\n    },\n    angle: {\n      value: 0\n    }\n  },\n  vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"\tvUv = uv;\", \"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n  fragmentShader: [\"uniform sampler2D tDiffuse;\", \"uniform float sides;\", \"uniform float angle;\", \"varying vec2 vUv;\", \"void main() {\", \"\tvec2 p = vUv - 0.5;\", \"\tfloat r = length(p);\", \"\tfloat a = atan(p.y, p.x) + angle;\", \"\tfloat tau = 2. * 3.1416 ;\", \"\ta = mod(a, tau/sides);\", \"\ta = abs(a - tau/sides/2.) ;\", \"\tp = r * vec2(cos(a), sin(a));\", \"\tvec4 color = texture2D(tDiffuse, p + 0.5);\", \"\tgl_FragColor = color;\", \"}\"].join(\"\\n\")\n};\nexport { KaleidoShader };","map":{"version":3,"sources":["/Users/theodaguier/Developer/old/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/three-stdlib/shaders/KaleidoShader.js"],"names":["KaleidoShader","uniforms","tDiffuse","value","sides","angle","vertexShader","join","fragmentShader"],"mappings":"AAAA,MAAMA,aAAa,GAAG;AACpBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KADF;AAERC,IAAAA,KAAK,EAAE;AAAED,MAAAA,KAAK,EAAE;AAAT,KAFC;AAGRE,IAAAA,KAAK,EAAE;AAAEF,MAAAA,KAAK,EAAE;AAAT;AAHC,GADU;AAMpBG,EAAAA,YAAY,EAAE,CACZ,mBADY,EAEZ,eAFY,EAGZ,YAHY,EAIZ,4EAJY,EAKZ,GALY,EAMZC,IANY,CAMP,IANO,CANM;AAapBC,EAAAA,cAAc,EAAE,CACd,6BADc,EAEd,sBAFc,EAGd,sBAHc,EAId,mBAJc,EAKd,eALc,EAMd,sBANc,EAOd,uBAPc,EAQd,oCARc,EASd,4BATc,EAUd,yBAVc,EAWd,8BAXc,EAYd,gCAZc,EAad,6CAbc,EAcd,wBAdc,EAed,GAfc,EAgBdD,IAhBc,CAgBT,IAhBS;AAbI,CAAtB;AA+BA,SACEP,aADF","sourcesContent":["const KaleidoShader = {\n  uniforms: {\n    tDiffuse: { value: null },\n    sides: { value: 6 },\n    angle: { value: 0 }\n  },\n  vertexShader: [\n    \"varying vec2 vUv;\",\n    \"void main() {\",\n    \"\tvUv = uv;\",\n    \"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n    \"}\"\n  ].join(\"\\n\"),\n  fragmentShader: [\n    \"uniform sampler2D tDiffuse;\",\n    \"uniform float sides;\",\n    \"uniform float angle;\",\n    \"varying vec2 vUv;\",\n    \"void main() {\",\n    \"\tvec2 p = vUv - 0.5;\",\n    \"\tfloat r = length(p);\",\n    \"\tfloat a = atan(p.y, p.x) + angle;\",\n    \"\tfloat tau = 2. * 3.1416 ;\",\n    \"\ta = mod(a, tau/sides);\",\n    \"\ta = abs(a - tau/sides/2.) ;\",\n    \"\tp = r * vec2(cos(a), sin(a));\",\n    \"\tvec4 color = texture2D(tDiffuse, p + 0.5);\",\n    \"\tgl_FragColor = color;\",\n    \"}\"\n  ].join(\"\\n\")\n};\nexport {\n  KaleidoShader\n};\n"]},"metadata":{},"sourceType":"module"}