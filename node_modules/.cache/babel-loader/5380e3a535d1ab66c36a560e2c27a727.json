{"ast":null,"code":"import _classCallCheck from \"/Users/theodaguier/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/theodaguier/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/theodaguier/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/theodaguier/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Matrix4, Mesh, MeshBasicMaterial, EqualStencilFunc, IncrementStencilOp } from \"three\";\n\nvar _shadowMatrix = /* @__PURE__ */new Matrix4();\n\nvar ShadowMesh = /*#__PURE__*/function (_Mesh) {\n  _inherits(ShadowMesh, _Mesh);\n\n  var _super = _createSuper(ShadowMesh);\n\n  function ShadowMesh(mesh) {\n    var _this;\n\n    _classCallCheck(this, ShadowMesh);\n\n    var shadowMaterial = new MeshBasicMaterial({\n      color: 0,\n      transparent: true,\n      opacity: 0.6,\n      depthWrite: false,\n      stencilWrite: true,\n      stencilFunc: EqualStencilFunc,\n      stencilRef: 0,\n      stencilZPass: IncrementStencilOp\n    });\n    _this = _super.call(this, mesh.geometry, shadowMaterial);\n    _this.isShadowMesh = true;\n    _this.meshMatrix = mesh.matrixWorld;\n    _this.frustumCulled = false;\n    _this.matrixAutoUpdate = false;\n    return _this;\n  }\n\n  _createClass(ShadowMesh, [{\n    key: \"update\",\n    value: function update(plane, lightPosition4D) {\n      var dot = plane.normal.x * lightPosition4D.x + plane.normal.y * lightPosition4D.y + plane.normal.z * lightPosition4D.z + -plane.constant * lightPosition4D.w;\n      var sme = _shadowMatrix.elements;\n      sme[0] = dot - lightPosition4D.x * plane.normal.x;\n      sme[4] = -lightPosition4D.x * plane.normal.y;\n      sme[8] = -lightPosition4D.x * plane.normal.z;\n      sme[12] = -lightPosition4D.x * -plane.constant;\n      sme[1] = -lightPosition4D.y * plane.normal.x;\n      sme[5] = dot - lightPosition4D.y * plane.normal.y;\n      sme[9] = -lightPosition4D.y * plane.normal.z;\n      sme[13] = -lightPosition4D.y * -plane.constant;\n      sme[2] = -lightPosition4D.z * plane.normal.x;\n      sme[6] = -lightPosition4D.z * plane.normal.y;\n      sme[10] = dot - lightPosition4D.z * plane.normal.z;\n      sme[14] = -lightPosition4D.z * -plane.constant;\n      sme[3] = -lightPosition4D.w * plane.normal.x;\n      sme[7] = -lightPosition4D.w * plane.normal.y;\n      sme[11] = -lightPosition4D.w * plane.normal.z;\n      sme[15] = dot - lightPosition4D.w * -plane.constant;\n      this.matrix.multiplyMatrices(_shadowMatrix, this.meshMatrix);\n    }\n  }]);\n\n  return ShadowMesh;\n}(Mesh);\n\nexport { ShadowMesh };","map":{"version":3,"sources":["/Users/theodaguier/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/three-stdlib/objects/ShadowMesh.js"],"names":["Matrix4","Mesh","MeshBasicMaterial","EqualStencilFunc","IncrementStencilOp","_shadowMatrix","ShadowMesh","mesh","shadowMaterial","color","transparent","opacity","depthWrite","stencilWrite","stencilFunc","stencilRef","stencilZPass","geometry","isShadowMesh","meshMatrix","matrixWorld","frustumCulled","matrixAutoUpdate","plane","lightPosition4D","dot","normal","x","y","z","constant","w","sme","elements","matrix","multiplyMatrices"],"mappings":";;;;AAAA,SAASA,OAAT,EAAkBC,IAAlB,EAAwBC,iBAAxB,EAA2CC,gBAA3C,EAA6DC,kBAA7D,QAAuF,OAAvF;;AACA,IAAMC,aAAa,GAAG,eAAgB,IAAIL,OAAJ,EAAtC;;IACMM,U;;;;;AACJ,sBAAYC,IAAZ,EAAkB;AAAA;;AAAA;;AAChB,QAAMC,cAAc,GAAG,IAAIN,iBAAJ,CAAsB;AAC3CO,MAAAA,KAAK,EAAE,CADoC;AAE3CC,MAAAA,WAAW,EAAE,IAF8B;AAG3CC,MAAAA,OAAO,EAAE,GAHkC;AAI3CC,MAAAA,UAAU,EAAE,KAJ+B;AAK3CC,MAAAA,YAAY,EAAE,IAL6B;AAM3CC,MAAAA,WAAW,EAAEX,gBAN8B;AAO3CY,MAAAA,UAAU,EAAE,CAP+B;AAQ3CC,MAAAA,YAAY,EAAEZ;AAR6B,KAAtB,CAAvB;AAUA,8BAAMG,IAAI,CAACU,QAAX,EAAqBT,cAArB;AACA,UAAKU,YAAL,GAAoB,IAApB;AACA,UAAKC,UAAL,GAAkBZ,IAAI,CAACa,WAAvB;AACA,UAAKC,aAAL,GAAqB,KAArB;AACA,UAAKC,gBAAL,GAAwB,KAAxB;AAfgB;AAgBjB;;;;WACD,gBAAOC,KAAP,EAAcC,eAAd,EAA+B;AAC7B,UAAMC,GAAG,GAAGF,KAAK,CAACG,MAAN,CAAaC,CAAb,GAAiBH,eAAe,CAACG,CAAjC,GAAqCJ,KAAK,CAACG,MAAN,CAAaE,CAAb,GAAiBJ,eAAe,CAACI,CAAtE,GAA0EL,KAAK,CAACG,MAAN,CAAaG,CAAb,GAAiBL,eAAe,CAACK,CAA3G,GAA+G,CAACN,KAAK,CAACO,QAAP,GAAkBN,eAAe,CAACO,CAA7J;AACA,UAAMC,GAAG,GAAG3B,aAAa,CAAC4B,QAA1B;AACAD,MAAAA,GAAG,CAAC,CAAD,CAAH,GAASP,GAAG,GAAGD,eAAe,CAACG,CAAhB,GAAoBJ,KAAK,CAACG,MAAN,CAAaC,CAAhD;AACAK,MAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACR,eAAe,CAACG,CAAjB,GAAqBJ,KAAK,CAACG,MAAN,CAAaE,CAA3C;AACAI,MAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACR,eAAe,CAACG,CAAjB,GAAqBJ,KAAK,CAACG,MAAN,CAAaG,CAA3C;AACAG,MAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAACR,eAAe,CAACG,CAAjB,GAAqB,CAACJ,KAAK,CAACO,QAAtC;AACAE,MAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACR,eAAe,CAACI,CAAjB,GAAqBL,KAAK,CAACG,MAAN,CAAaC,CAA3C;AACAK,MAAAA,GAAG,CAAC,CAAD,CAAH,GAASP,GAAG,GAAGD,eAAe,CAACI,CAAhB,GAAoBL,KAAK,CAACG,MAAN,CAAaE,CAAhD;AACAI,MAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACR,eAAe,CAACI,CAAjB,GAAqBL,KAAK,CAACG,MAAN,CAAaG,CAA3C;AACAG,MAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAACR,eAAe,CAACI,CAAjB,GAAqB,CAACL,KAAK,CAACO,QAAtC;AACAE,MAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACR,eAAe,CAACK,CAAjB,GAAqBN,KAAK,CAACG,MAAN,CAAaC,CAA3C;AACAK,MAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACR,eAAe,CAACK,CAAjB,GAAqBN,KAAK,CAACG,MAAN,CAAaE,CAA3C;AACAI,MAAAA,GAAG,CAAC,EAAD,CAAH,GAAUP,GAAG,GAAGD,eAAe,CAACK,CAAhB,GAAoBN,KAAK,CAACG,MAAN,CAAaG,CAAjD;AACAG,MAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAACR,eAAe,CAACK,CAAjB,GAAqB,CAACN,KAAK,CAACO,QAAtC;AACAE,MAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACR,eAAe,CAACO,CAAjB,GAAqBR,KAAK,CAACG,MAAN,CAAaC,CAA3C;AACAK,MAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACR,eAAe,CAACO,CAAjB,GAAqBR,KAAK,CAACG,MAAN,CAAaE,CAA3C;AACAI,MAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAACR,eAAe,CAACO,CAAjB,GAAqBR,KAAK,CAACG,MAAN,CAAaG,CAA5C;AACAG,MAAAA,GAAG,CAAC,EAAD,CAAH,GAAUP,GAAG,GAAGD,eAAe,CAACO,CAAhB,GAAoB,CAACR,KAAK,CAACO,QAA3C;AACA,WAAKI,MAAL,CAAYC,gBAAZ,CAA6B9B,aAA7B,EAA4C,KAAKc,UAAjD;AACD;;;;EAtCsBlB,I;;AAwCzB,SACEK,UADF","sourcesContent":["import { Matrix4, Mesh, MeshBasicMaterial, EqualStencilFunc, IncrementStencilOp } from \"three\";\nconst _shadowMatrix = /* @__PURE__ */ new Matrix4();\nclass ShadowMesh extends Mesh {\n  constructor(mesh) {\n    const shadowMaterial = new MeshBasicMaterial({\n      color: 0,\n      transparent: true,\n      opacity: 0.6,\n      depthWrite: false,\n      stencilWrite: true,\n      stencilFunc: EqualStencilFunc,\n      stencilRef: 0,\n      stencilZPass: IncrementStencilOp\n    });\n    super(mesh.geometry, shadowMaterial);\n    this.isShadowMesh = true;\n    this.meshMatrix = mesh.matrixWorld;\n    this.frustumCulled = false;\n    this.matrixAutoUpdate = false;\n  }\n  update(plane, lightPosition4D) {\n    const dot = plane.normal.x * lightPosition4D.x + plane.normal.y * lightPosition4D.y + plane.normal.z * lightPosition4D.z + -plane.constant * lightPosition4D.w;\n    const sme = _shadowMatrix.elements;\n    sme[0] = dot - lightPosition4D.x * plane.normal.x;\n    sme[4] = -lightPosition4D.x * plane.normal.y;\n    sme[8] = -lightPosition4D.x * plane.normal.z;\n    sme[12] = -lightPosition4D.x * -plane.constant;\n    sme[1] = -lightPosition4D.y * plane.normal.x;\n    sme[5] = dot - lightPosition4D.y * plane.normal.y;\n    sme[9] = -lightPosition4D.y * plane.normal.z;\n    sme[13] = -lightPosition4D.y * -plane.constant;\n    sme[2] = -lightPosition4D.z * plane.normal.x;\n    sme[6] = -lightPosition4D.z * plane.normal.y;\n    sme[10] = dot - lightPosition4D.z * plane.normal.z;\n    sme[14] = -lightPosition4D.z * -plane.constant;\n    sme[3] = -lightPosition4D.w * plane.normal.x;\n    sme[7] = -lightPosition4D.w * plane.normal.y;\n    sme[11] = -lightPosition4D.w * plane.normal.z;\n    sme[15] = dot - lightPosition4D.w * -plane.constant;\n    this.matrix.multiplyMatrices(_shadowMatrix, this.meshMatrix);\n  }\n}\nexport {\n  ShadowMesh\n};\n"]},"metadata":{},"sourceType":"module"}