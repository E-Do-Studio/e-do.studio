{"ast":null,"code":"import _objectSpread from \"/Users/theodaguier/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/theodaguier/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/theodaguier/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/Users/theodaguier/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/theodaguier/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/theodaguier/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/theodaguier/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar __defProp = Object.defineProperty;\n\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\n\nvar __publicField = function __publicField(obj, key, value) {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n  return value;\n};\n\nimport { Loader, FileLoader, ShapePath } from \"three\";\n\nvar FontLoader = /*#__PURE__*/function (_Loader) {\n  _inherits(FontLoader, _Loader);\n\n  var _super = _createSuper(FontLoader);\n\n  function FontLoader(manager) {\n    _classCallCheck(this, FontLoader);\n\n    return _super.call(this, manager);\n  }\n\n  _createClass(FontLoader, [{\n    key: \"load\",\n    value: function load(url, onLoad, onProgress, onError) {\n      var _this = this;\n\n      var loader = new FileLoader(this.manager);\n      loader.setPath(this.path);\n      loader.setRequestHeader(this.requestHeader);\n      loader.setWithCredentials(this.withCredentials);\n      loader.load(url, function (response) {\n        if (typeof response !== \"string\") throw new Error(\"unsupported data type\");\n        var json = JSON.parse(response);\n\n        var font = _this.parse(json);\n\n        if (onLoad) onLoad(font);\n      }, onProgress, onError);\n    }\n  }, {\n    key: \"loadAsync\",\n    value: function loadAsync(url, onProgress) {\n      return _get(_getPrototypeOf(FontLoader.prototype), \"loadAsync\", this).call(this, url, onProgress);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(json) {\n      return new Font(json);\n    }\n  }]);\n\n  return FontLoader;\n}(Loader);\n\nvar Font = /*#__PURE__*/function () {\n  function Font(data) {\n    _classCallCheck(this, Font);\n\n    __publicField(this, \"data\");\n\n    this.data = data;\n  }\n\n  _createClass(Font, [{\n    key: \"generateShapes\",\n    value: function generateShapes(text) {\n      var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n\n      var _options = arguments.length > 2 ? arguments[2] : undefined;\n\n      var shapes = [];\n\n      var options = _objectSpread({\n        letterSpacing: 0,\n        lineHeight: 1\n      }, _options);\n\n      var paths = createPaths(text, size, this.data, options);\n\n      for (var p = 0, pl = paths.length; p < pl; p++) {\n        Array.prototype.push.apply(shapes, paths[p].toShapes(false));\n      }\n\n      return shapes;\n    }\n  }]);\n\n  return Font;\n}();\n\n__publicField(Font, \"isFont\");\n\n__publicField(Font, \"type\");\n\nfunction createPaths(text, size, data, options) {\n  var chars = Array.from(text);\n  var scale = size / data.resolution;\n  var line_height = (data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness) * scale;\n  var paths = [];\n  var offsetX = 0,\n      offsetY = 0;\n\n  for (var i = 0; i < chars.length; i++) {\n    var char = chars[i];\n\n    if (char === \"\\n\") {\n      offsetX = 0;\n      offsetY -= line_height * options.lineHeight;\n    } else {\n      var ret = createPath(char, scale, offsetX, offsetY, data);\n\n      if (ret) {\n        offsetX += ret.offsetX + options.letterSpacing;\n        paths.push(ret.path);\n      }\n    }\n  }\n\n  return paths;\n}\n\nfunction createPath(char, scale, offsetX, offsetY, data) {\n  var glyph = data.glyphs[char] || data.glyphs[\"?\"];\n\n  if (!glyph) {\n    console.error('THREE.Font: character \"' + char + '\" does not exists in font family ' + data.familyName + \".\");\n    return;\n  }\n\n  var path = new ShapePath();\n  var x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n  if (glyph.o) {\n    var outline = glyph._cachedOutline || (glyph._cachedOutline = glyph.o.split(\" \"));\n\n    for (var i = 0, l = outline.length; i < l;) {\n      var action = outline[i++];\n\n      switch (action) {\n        case \"m\":\n          x = parseInt(outline[i++]) * scale + offsetX;\n          y = parseInt(outline[i++]) * scale + offsetY;\n          path.moveTo(x, y);\n          break;\n\n        case \"l\":\n          x = parseInt(outline[i++]) * scale + offsetX;\n          y = parseInt(outline[i++]) * scale + offsetY;\n          path.lineTo(x, y);\n          break;\n\n        case \"q\":\n          cpx = parseInt(outline[i++]) * scale + offsetX;\n          cpy = parseInt(outline[i++]) * scale + offsetY;\n          cpx1 = parseInt(outline[i++]) * scale + offsetX;\n          cpy1 = parseInt(outline[i++]) * scale + offsetY;\n          path.quadraticCurveTo(cpx1, cpy1, cpx, cpy);\n          break;\n\n        case \"b\":\n          cpx = parseInt(outline[i++]) * scale + offsetX;\n          cpy = parseInt(outline[i++]) * scale + offsetY;\n          cpx1 = parseInt(outline[i++]) * scale + offsetX;\n          cpy1 = parseInt(outline[i++]) * scale + offsetY;\n          cpx2 = parseInt(outline[i++]) * scale + offsetX;\n          cpy2 = parseInt(outline[i++]) * scale + offsetY;\n          path.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, cpx, cpy);\n          break;\n      }\n    }\n  }\n\n  return {\n    offsetX: glyph.ha * scale,\n    path: path\n  };\n}\n\nexport { Font, FontLoader };","map":{"version":3,"sources":["/Users/theodaguier/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/three-stdlib/loaders/FontLoader.js"],"names":["__defProp","Object","defineProperty","__defNormalProp","obj","key","value","enumerable","configurable","writable","__publicField","Loader","FileLoader","ShapePath","FontLoader","manager","url","onLoad","onProgress","onError","loader","setPath","path","setRequestHeader","requestHeader","setWithCredentials","withCredentials","load","response","Error","json","JSON","parse","font","Font","data","text","size","_options","shapes","options","letterSpacing","lineHeight","paths","createPaths","p","pl","length","Array","prototype","push","apply","toShapes","chars","from","scale","resolution","line_height","boundingBox","yMax","yMin","underlineThickness","offsetX","offsetY","i","char","ret","createPath","glyph","glyphs","console","error","familyName","x","y","cpx","cpy","cpx1","cpy1","cpx2","cpy2","o","outline","_cachedOutline","split","l","action","parseInt","moveTo","lineTo","quadraticCurveTo","bezierCurveTo","ha"],"mappings":"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","sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { Loader, FileLoader, ShapePath } from \"three\";\nclass FontLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n  }\n  load(url, onLoad, onProgress, onError) {\n    const loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setRequestHeader(this.requestHeader);\n    loader.setWithCredentials(this.withCredentials);\n    loader.load(\n      url,\n      (response) => {\n        if (typeof response !== \"string\")\n          throw new Error(\"unsupported data type\");\n        const json = JSON.parse(response);\n        const font = this.parse(json);\n        if (onLoad)\n          onLoad(font);\n      },\n      onProgress,\n      onError\n    );\n  }\n  loadAsync(url, onProgress) {\n    return super.loadAsync(url, onProgress);\n  }\n  parse(json) {\n    return new Font(json);\n  }\n}\nclass Font {\n  constructor(data) {\n    __publicField(this, \"data\");\n    this.data = data;\n  }\n  generateShapes(text, size = 100, _options) {\n    const shapes = [];\n    const options = { letterSpacing: 0, lineHeight: 1, ..._options };\n    const paths = createPaths(text, size, this.data, options);\n    for (let p = 0, pl = paths.length; p < pl; p++) {\n      Array.prototype.push.apply(shapes, paths[p].toShapes(false));\n    }\n    return shapes;\n  }\n}\n__publicField(Font, \"isFont\");\n__publicField(Font, \"type\");\nfunction createPaths(text, size, data, options) {\n  const chars = Array.from(text);\n  const scale = size / data.resolution;\n  const line_height = (data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness) * scale;\n  const paths = [];\n  let offsetX = 0, offsetY = 0;\n  for (let i = 0; i < chars.length; i++) {\n    const char = chars[i];\n    if (char === \"\\n\") {\n      offsetX = 0;\n      offsetY -= line_height * options.lineHeight;\n    } else {\n      const ret = createPath(char, scale, offsetX, offsetY, data);\n      if (ret) {\n        offsetX += ret.offsetX + options.letterSpacing;\n        paths.push(ret.path);\n      }\n    }\n  }\n  return paths;\n}\nfunction createPath(char, scale, offsetX, offsetY, data) {\n  const glyph = data.glyphs[char] || data.glyphs[\"?\"];\n  if (!glyph) {\n    console.error('THREE.Font: character \"' + char + '\" does not exists in font family ' + data.familyName + \".\");\n    return;\n  }\n  const path = new ShapePath();\n  let x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n  if (glyph.o) {\n    const outline = glyph._cachedOutline || (glyph._cachedOutline = glyph.o.split(\" \"));\n    for (let i = 0, l = outline.length; i < l; ) {\n      const action = outline[i++];\n      switch (action) {\n        case \"m\":\n          x = parseInt(outline[i++]) * scale + offsetX;\n          y = parseInt(outline[i++]) * scale + offsetY;\n          path.moveTo(x, y);\n          break;\n        case \"l\":\n          x = parseInt(outline[i++]) * scale + offsetX;\n          y = parseInt(outline[i++]) * scale + offsetY;\n          path.lineTo(x, y);\n          break;\n        case \"q\":\n          cpx = parseInt(outline[i++]) * scale + offsetX;\n          cpy = parseInt(outline[i++]) * scale + offsetY;\n          cpx1 = parseInt(outline[i++]) * scale + offsetX;\n          cpy1 = parseInt(outline[i++]) * scale + offsetY;\n          path.quadraticCurveTo(cpx1, cpy1, cpx, cpy);\n          break;\n        case \"b\":\n          cpx = parseInt(outline[i++]) * scale + offsetX;\n          cpy = parseInt(outline[i++]) * scale + offsetY;\n          cpx1 = parseInt(outline[i++]) * scale + offsetX;\n          cpy1 = parseInt(outline[i++]) * scale + offsetY;\n          cpx2 = parseInt(outline[i++]) * scale + offsetX;\n          cpy2 = parseInt(outline[i++]) * scale + offsetY;\n          path.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, cpx, cpy);\n          break;\n      }\n    }\n  }\n  return { offsetX: glyph.ha * scale, path };\n}\nexport {\n  Font,\n  FontLoader\n};\n"]},"metadata":{},"sourceType":"module"}