{"ast":null,"code":"import { NumberKeyframeTrack, AnimationClip, Vector3, VectorKeyframeTrack, BooleanKeyframeTrack, ColorKeyframeTrack } from \"three\";\n\nclass AnimationClipCreator {\n  static CreateRotationAnimation(period, axis = \"x\") {\n    const times = [0, period],\n          values = [0, 360];\n    const trackName = \".rotation[\" + axis + \"]\";\n    const track = new NumberKeyframeTrack(trackName, times, values);\n    return new AnimationClip(null, period, [track]);\n  }\n\n  static CreateScaleAxisAnimation(period, axis = \"x\") {\n    const times = [0, period],\n          values = [0, 1];\n    const trackName = \".scale[\" + axis + \"]\";\n    const track = new NumberKeyframeTrack(trackName, times, values);\n    return new AnimationClip(null, period, [track]);\n  }\n\n  static CreateShakeAnimation(duration, shakeScale) {\n    const times = [],\n          values = [],\n          tmp = new Vector3();\n\n    for (let i = 0; i < duration * 10; i++) {\n      times.push(i / 10);\n      tmp.set(Math.random() * 2 - 1, Math.random() * 2 - 1, Math.random() * 2 - 1).multiply(shakeScale).toArray(values, values.length);\n    }\n\n    const trackName = \".position\";\n    const track = new VectorKeyframeTrack(trackName, times, values);\n    return new AnimationClip(null, duration, [track]);\n  }\n\n  static CreatePulsationAnimation(duration, pulseScale) {\n    const times = [],\n          values = [],\n          tmp = new Vector3();\n\n    for (let i = 0; i < duration * 10; i++) {\n      times.push(i / 10);\n      const scaleFactor = Math.random() * pulseScale;\n      tmp.set(scaleFactor, scaleFactor, scaleFactor).toArray(values, values.length);\n    }\n\n    const trackName = \".scale\";\n    const track = new VectorKeyframeTrack(trackName, times, values);\n    return new AnimationClip(null, duration, [track]);\n  }\n\n  static CreateVisibilityAnimation(duration) {\n    const times = [0, duration / 2, duration],\n          values = [true, false, true];\n    const trackName = \".visible\";\n    const track = new BooleanKeyframeTrack(trackName, times, values);\n    return new AnimationClip(null, duration, [track]);\n  }\n\n  static CreateMaterialColorAnimation(duration, colors) {\n    const times = [],\n          values = [],\n          timeStep = duration / colors.length;\n\n    for (let i = 0; i < colors.length; i++) {\n      times.push(i * timeStep);\n      const color = colors[i];\n      values.push(color.r, color.g, color.b);\n    }\n\n    const trackName = \".material.color\";\n    const track = new ColorKeyframeTrack(trackName, times, values);\n    return new AnimationClip(null, duration, [track]);\n  }\n\n}\n\nexport { AnimationClipCreator };","map":{"version":3,"sources":["/Users/theodaguier/_workdir/dev/pro/e-do/E-Do-Studio/node_modules/three-stdlib/animation/AnimationClipCreator.js"],"names":["NumberKeyframeTrack","AnimationClip","Vector3","VectorKeyframeTrack","BooleanKeyframeTrack","ColorKeyframeTrack","AnimationClipCreator","CreateRotationAnimation","period","axis","times","values","trackName","track","CreateScaleAxisAnimation","CreateShakeAnimation","duration","shakeScale","tmp","i","push","set","Math","random","multiply","toArray","length","CreatePulsationAnimation","pulseScale","scaleFactor","CreateVisibilityAnimation","CreateMaterialColorAnimation","colors","timeStep","color","r","g","b"],"mappings":"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","sourcesContent":["import { NumberKeyframeTrack, AnimationClip, Vector3, VectorKeyframeTrack, BooleanKeyframeTrack, ColorKeyframeTrack } from \"three\";\nclass AnimationClipCreator {\n  static CreateRotationAnimation(period, axis = \"x\") {\n    const times = [0, period], values = [0, 360];\n    const trackName = \".rotation[\" + axis + \"]\";\n    const track = new NumberKeyframeTrack(trackName, times, values);\n    return new AnimationClip(null, period, [track]);\n  }\n  static CreateScaleAxisAnimation(period, axis = \"x\") {\n    const times = [0, period], values = [0, 1];\n    const trackName = \".scale[\" + axis + \"]\";\n    const track = new NumberKeyframeTrack(trackName, times, values);\n    return new AnimationClip(null, period, [track]);\n  }\n  static CreateShakeAnimation(duration, shakeScale) {\n    const times = [], values = [], tmp = new Vector3();\n    for (let i = 0; i < duration * 10; i++) {\n      times.push(i / 10);\n      tmp.set(Math.random() * 2 - 1, Math.random() * 2 - 1, Math.random() * 2 - 1).multiply(shakeScale).toArray(values, values.length);\n    }\n    const trackName = \".position\";\n    const track = new VectorKeyframeTrack(trackName, times, values);\n    return new AnimationClip(null, duration, [track]);\n  }\n  static CreatePulsationAnimation(duration, pulseScale) {\n    const times = [], values = [], tmp = new Vector3();\n    for (let i = 0; i < duration * 10; i++) {\n      times.push(i / 10);\n      const scaleFactor = Math.random() * pulseScale;\n      tmp.set(scaleFactor, scaleFactor, scaleFactor).toArray(values, values.length);\n    }\n    const trackName = \".scale\";\n    const track = new VectorKeyframeTrack(trackName, times, values);\n    return new AnimationClip(null, duration, [track]);\n  }\n  static CreateVisibilityAnimation(duration) {\n    const times = [0, duration / 2, duration], values = [true, false, true];\n    const trackName = \".visible\";\n    const track = new BooleanKeyframeTrack(trackName, times, values);\n    return new AnimationClip(null, duration, [track]);\n  }\n  static CreateMaterialColorAnimation(duration, colors) {\n    const times = [], values = [], timeStep = duration / colors.length;\n    for (let i = 0; i < colors.length; i++) {\n      times.push(i * timeStep);\n      const color = colors[i];\n      values.push(color.r, color.g, color.b);\n    }\n    const trackName = \".material.color\";\n    const track = new ColorKeyframeTrack(trackName, times, values);\n    return new AnimationClip(null, duration, [track]);\n  }\n}\nexport {\n  AnimationClipCreator\n};\n"]},"metadata":{},"sourceType":"module"}