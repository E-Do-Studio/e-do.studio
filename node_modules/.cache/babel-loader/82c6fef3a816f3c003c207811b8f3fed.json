{"ast":null,"code":"import i18next from \"i18next\";\nimport { initReactI18next } from \"react-i18next\"; // import your translation files\n\nimport menuEn from \"./translation/en/menu.json\";\nimport argumentEn from \"./translation/en/argument.json\";\nimport accrocheEn from \"./translation/en/accroche.json\"; // initialize the i18next library\n\ni18next.use(initReactI18next).init({\n  resources: {\n    fr: {\n      menu: menuEn,\n      argument: argumentEn,\n      accroche: accrocheEn\n    }\n  },\n  lng: localStorage.getItem(\"i18nextLng\") || \"fr\",\n  fallbackLng: \"en\",\n  interpolation: {\n    escapeValue: false\n  }\n});\ni18next.on(\"languageChanged\", lng => {\n  localStorage.setItem(\"i18nextLng\", lng);\n});\nexport default i18next;","map":{"version":3,"sources":["/Users/theodaguier/e-do/src/i18n.js"],"names":["i18next","initReactI18next","menuEn","argumentEn","accrocheEn","use","init","resources","fr","menu","argument","accroche","lng","localStorage","getItem","fallbackLng","interpolation","escapeValue","on","setItem"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,SAASC,gBAAT,QAAiC,eAAjC,C,CAEA;;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,UAAP,MAAuB,gCAAvB,C,CAEA;;AACAJ,OAAO,CAACK,GAAR,CAAYJ,gBAAZ,EAA8BK,IAA9B,CAAmC;AACjCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,EAAE,EAAE;AACFC,MAAAA,IAAI,EAAEP,MADJ;AAEFQ,MAAAA,QAAQ,EAAEP,UAFR;AAGFQ,MAAAA,QAAQ,EAAEP;AAHR;AADK,GADsB;AASjCQ,EAAAA,GAAG,EAAEC,YAAY,CAACC,OAAb,CAAqB,YAArB,KAAsC,IATV;AAUjCC,EAAAA,WAAW,EAAE,IAVoB;AAWjCC,EAAAA,aAAa,EAAE;AACbC,IAAAA,WAAW,EAAE;AADA;AAXkB,CAAnC;AAgBAjB,OAAO,CAACkB,EAAR,CAAW,iBAAX,EAA+BN,GAAD,IAAS;AACrCC,EAAAA,YAAY,CAACM,OAAb,CAAqB,YAArB,EAAmCP,GAAnC;AACD,CAFD;AAIA,eAAeZ,OAAf","sourcesContent":["import i18next from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\n// import your translation files\n\nimport menuEn from \"./translation/en/menu.json\";\nimport argumentEn from \"./translation/en/argument.json\";\nimport accrocheEn from \"./translation/en/accroche.json\";\n\n// initialize the i18next library\ni18next.use(initReactI18next).init({\n  resources: {\n    fr: {\n      menu: menuEn,\n      argument: argumentEn,\n      accroche: accrocheEn,\n    },\n  },\n\n  lng: localStorage.getItem(\"i18nextLng\") || \"fr\",\n  fallbackLng: \"en\",\n  interpolation: {\n    escapeValue: false,\n  },\n});\n\ni18next.on(\"languageChanged\", (lng) => {\n  localStorage.setItem(\"i18nextLng\", lng);\n});\n\nexport default i18next;\n"]},"metadata":{},"sourceType":"module"}