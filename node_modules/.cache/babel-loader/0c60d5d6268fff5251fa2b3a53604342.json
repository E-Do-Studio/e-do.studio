{"ast":null,"code":"import { Vector2, Vector3 } from \"three\";\nlet t = -1;\nconst splicedIndexes = [];\nexport const updatedPositions = (photos, mousePosition, distance = 0.1, maxphotosCount = 20) => {\n  var _photos$at, _photos$at2;\n\n  const d = new Vector2(mousePosition.x, mousePosition.y).distanceTo(new Vector2((_photos$at = photos.at(-1)) === null || _photos$at === void 0 ? void 0 : _photos$at.x, (_photos$at2 = photos.at(-1)) === null || _photos$at2 === void 0 ? void 0 : _photos$at2.y));\n\n  if (d > distance && photos.length < maxphotosCount + 1) {\n    t++;\n    return [...photos, { ...mousePosition,\n      index: t\n    }];\n  }\n\n  return photos.length > maxphotosCount ? photos.splice(1) : photos.map(plane => ({ ...plane\n  }));\n};\nexport const appliedForces = (t, dir) => {\n  return new Vector3(0, 5 - t, 25).multiplyScalar(0.001);\n};","map":{"version":3,"sources":["/Users/theodaguier/Repositories/E-Do-Studio/src/Views/TestAccroche/helpers.js"],"names":["Vector2","Vector3","t","splicedIndexes","updatedPositions","photos","mousePosition","distance","maxphotosCount","d","x","y","distanceTo","at","length","index","splice","map","plane","appliedForces","dir","multiplyScalar"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,OAAlB,QAAiC,OAAjC;AAEA,IAAIC,CAAC,GAAG,CAAC,CAAT;AACA,MAAMC,cAAc,GAAG,EAAvB;AAEA,OAAO,MAAMC,gBAAgB,GAAG,CAC9BC,MAD8B,EAE9BC,aAF8B,EAG9BC,QAAQ,GAAG,GAHmB,EAI9BC,cAAc,GAAG,EAJa,KAK3B;AAAA;;AACH,QAAMC,CAAC,GAAG,IAAIT,OAAJ,CAAYM,aAAa,CAACI,CAA1B,EAA6BJ,aAAa,CAACK,CAA3C,EAA8CC,UAA9C,CACR,IAAIZ,OAAJ,eAAYK,MAAM,CAACQ,EAAP,CAAU,CAAC,CAAX,CAAZ,+CAAY,WAAeH,CAA3B,iBAA8BL,MAAM,CAACQ,EAAP,CAAU,CAAC,CAAX,CAA9B,gDAA8B,YAAeF,CAA7C,CADQ,CAAV;;AAIA,MAAIF,CAAC,GAAGF,QAAJ,IAAgBF,MAAM,CAACS,MAAP,GAAgBN,cAAc,GAAG,CAArD,EAAwD;AACtDN,IAAAA,CAAC;AAED,WAAO,CACL,GAAGG,MADE,EAEL,EACE,GAAGC,aADL;AAEES,MAAAA,KAAK,EAAEb;AAFT,KAFK,CAAP;AAOD;;AAED,SAAOG,MAAM,CAACS,MAAP,GAAgBN,cAAhB,GACHH,MAAM,CAACW,MAAP,CAAc,CAAd,CADG,GAEHX,MAAM,CAACY,GAAP,CAAYC,KAAD,KAAY,EAAE,GAAGA;AAAL,GAAZ,CAAX,CAFJ;AAGD,CAzBM;AA2BP,OAAO,MAAMC,aAAa,GAAG,CAACjB,CAAD,EAAIkB,GAAJ,KAAY;AACvC,SAAO,IAAInB,OAAJ,CAAY,CAAZ,EAAe,IAAIC,CAAnB,EAAsB,EAAtB,EAA0BmB,cAA1B,CAAyC,KAAzC,CAAP;AACD,CAFM","sourcesContent":["import { Vector2, Vector3 } from \"three\";\n\nlet t = -1;\nconst splicedIndexes = [];\n\nexport const updatedPositions = (\n  photos,\n  mousePosition,\n  distance = 0.1,\n  maxphotosCount = 20\n) => {\n  const d = new Vector2(mousePosition.x, mousePosition.y).distanceTo(\n    new Vector2(photos.at(-1)?.x, photos.at(-1)?.y)\n  );\n\n  if (d > distance && photos.length < maxphotosCount + 1) {\n    t++;\n\n    return [\n      ...photos,\n      {\n        ...mousePosition,\n        index: t,\n      },\n    ];\n  }\n\n  return photos.length > maxphotosCount\n    ? photos.splice(1)\n    : photos.map((plane) => ({ ...plane }));\n};\n\nexport const appliedForces = (t, dir) => {\n  return new Vector3(0, 5 - t, 25).multiplyScalar(0.001);\n};\n"]},"metadata":{},"sourceType":"module"}