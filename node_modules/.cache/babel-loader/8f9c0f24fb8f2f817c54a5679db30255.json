{"ast":null,"code":"import _classCallCheck from \"/Users/theodaguier/_workdir/dev/pro/e-do/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/theodaguier/_workdir/dev/pro/e-do/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/theodaguier/_workdir/dev/pro/e-do/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/theodaguier/_workdir/dev/pro/e-do/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { UniformsUtils, ShaderMaterial } from \"three\";\nimport { Pass, FullScreenQuad } from \"./Pass.js\";\nimport { CopyShader } from \"../shaders/CopyShader.js\";\n\nvar TexturePass = /*#__PURE__*/function (_Pass) {\n  _inherits(TexturePass, _Pass);\n\n  var _super = _createSuper(TexturePass);\n\n  function TexturePass(map, opacity) {\n    var _this;\n\n    _classCallCheck(this, TexturePass);\n\n    _this = _super.call(this);\n    var shader = CopyShader;\n    _this.map = map;\n    _this.opacity = opacity !== void 0 ? opacity : 1;\n    _this.uniforms = UniformsUtils.clone(shader.uniforms);\n    _this.material = new ShaderMaterial({\n      uniforms: _this.uniforms,\n      vertexShader: shader.vertexShader,\n      fragmentShader: shader.fragmentShader,\n      depthTest: false,\n      depthWrite: false\n    });\n    _this.needsSwap = false;\n    _this.fsQuad = new FullScreenQuad(null);\n    return _this;\n  }\n\n  _createClass(TexturePass, [{\n    key: \"render\",\n    value: function render(renderer, writeBuffer, readBuffer) {\n      var oldAutoClear = renderer.autoClear;\n      renderer.autoClear = false;\n      this.fsQuad.material = this.material;\n      this.uniforms[\"opacity\"].value = this.opacity;\n      this.uniforms[\"tDiffuse\"].value = this.map;\n      this.material.transparent = this.opacity < 1;\n      renderer.setRenderTarget(this.renderToScreen ? null : readBuffer);\n      if (this.clear) renderer.clear();\n      this.fsQuad.render(renderer);\n      renderer.autoClear = oldAutoClear;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.material.dispose();\n      this.fsQuad.dispose();\n    }\n  }]);\n\n  return TexturePass;\n}(Pass);\n\nexport { TexturePass };","map":{"version":3,"sources":["/Users/theodaguier/_workdir/dev/pro/e-do/E-Do-Studio/node_modules/three-stdlib/postprocessing/TexturePass.js"],"names":["UniformsUtils","ShaderMaterial","Pass","FullScreenQuad","CopyShader","TexturePass","map","opacity","shader","uniforms","clone","material","vertexShader","fragmentShader","depthTest","depthWrite","needsSwap","fsQuad","renderer","writeBuffer","readBuffer","oldAutoClear","autoClear","value","transparent","setRenderTarget","renderToScreen","clear","render","dispose"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,cAAxB,QAA8C,OAA9C;AACA,SAASC,IAAT,EAAeC,cAAf,QAAqC,WAArC;AACA,SAASC,UAAT,QAA2B,0BAA3B;;IACMC,W;;;;;AACJ,uBAAYC,GAAZ,EAAiBC,OAAjB,EAA0B;AAAA;;AAAA;;AACxB;AACA,QAAMC,MAAM,GAAGJ,UAAf;AACA,UAAKE,GAAL,GAAWA,GAAX;AACA,UAAKC,OAAL,GAAeA,OAAO,KAAK,KAAK,CAAjB,GAAqBA,OAArB,GAA+B,CAA9C;AACA,UAAKE,QAAL,GAAgBT,aAAa,CAACU,KAAd,CAAoBF,MAAM,CAACC,QAA3B,CAAhB;AACA,UAAKE,QAAL,GAAgB,IAAIV,cAAJ,CAAmB;AACjCQ,MAAAA,QAAQ,EAAE,MAAKA,QADkB;AAEjCG,MAAAA,YAAY,EAAEJ,MAAM,CAACI,YAFY;AAGjCC,MAAAA,cAAc,EAAEL,MAAM,CAACK,cAHU;AAIjCC,MAAAA,SAAS,EAAE,KAJsB;AAKjCC,MAAAA,UAAU,EAAE;AALqB,KAAnB,CAAhB;AAOA,UAAKC,SAAL,GAAiB,KAAjB;AACA,UAAKC,MAAL,GAAc,IAAId,cAAJ,CAAmB,IAAnB,CAAd;AAdwB;AAezB;;;;WACD,gBAAOe,QAAP,EAAiBC,WAAjB,EAA8BC,UAA9B,EAA0C;AACxC,UAAMC,YAAY,GAAGH,QAAQ,CAACI,SAA9B;AACAJ,MAAAA,QAAQ,CAACI,SAAT,GAAqB,KAArB;AACA,WAAKL,MAAL,CAAYN,QAAZ,GAAuB,KAAKA,QAA5B;AACA,WAAKF,QAAL,CAAc,SAAd,EAAyBc,KAAzB,GAAiC,KAAKhB,OAAtC;AACA,WAAKE,QAAL,CAAc,UAAd,EAA0Bc,KAA1B,GAAkC,KAAKjB,GAAvC;AACA,WAAKK,QAAL,CAAca,WAAd,GAA4B,KAAKjB,OAAL,GAAe,CAA3C;AACAW,MAAAA,QAAQ,CAACO,eAAT,CAAyB,KAAKC,cAAL,GAAsB,IAAtB,GAA6BN,UAAtD;AACA,UAAI,KAAKO,KAAT,EACET,QAAQ,CAACS,KAAT;AACF,WAAKV,MAAL,CAAYW,MAAZ,CAAmBV,QAAnB;AACAA,MAAAA,QAAQ,CAACI,SAAT,GAAqBD,YAArB;AACD;;;WACD,mBAAU;AACR,WAAKV,QAAL,CAAckB,OAAd;AACA,WAAKZ,MAAL,CAAYY,OAAZ;AACD;;;;EAjCuB3B,I;;AAmC1B,SACEG,WADF","sourcesContent":["import { UniformsUtils, ShaderMaterial } from \"three\";\nimport { Pass, FullScreenQuad } from \"./Pass.js\";\nimport { CopyShader } from \"../shaders/CopyShader.js\";\nclass TexturePass extends Pass {\n  constructor(map, opacity) {\n    super();\n    const shader = CopyShader;\n    this.map = map;\n    this.opacity = opacity !== void 0 ? opacity : 1;\n    this.uniforms = UniformsUtils.clone(shader.uniforms);\n    this.material = new ShaderMaterial({\n      uniforms: this.uniforms,\n      vertexShader: shader.vertexShader,\n      fragmentShader: shader.fragmentShader,\n      depthTest: false,\n      depthWrite: false\n    });\n    this.needsSwap = false;\n    this.fsQuad = new FullScreenQuad(null);\n  }\n  render(renderer, writeBuffer, readBuffer) {\n    const oldAutoClear = renderer.autoClear;\n    renderer.autoClear = false;\n    this.fsQuad.material = this.material;\n    this.uniforms[\"opacity\"].value = this.opacity;\n    this.uniforms[\"tDiffuse\"].value = this.map;\n    this.material.transparent = this.opacity < 1;\n    renderer.setRenderTarget(this.renderToScreen ? null : readBuffer);\n    if (this.clear)\n      renderer.clear();\n    this.fsQuad.render(renderer);\n    renderer.autoClear = oldAutoClear;\n  }\n  dispose() {\n    this.material.dispose();\n    this.fsQuad.dispose();\n  }\n}\nexport {\n  TexturePass\n};\n"]},"metadata":{},"sourceType":"module"}