{"ast":null,"code":"import _classCallCheck from \"/Users/theodaguier/Repositories/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _inherits from \"/Users/theodaguier/Repositories/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/theodaguier/Repositories/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { BufferGeometry, Float32BufferAttribute } from \"three\";\nimport { ConvexHull } from \"../math/ConvexHull.js\";\n\nvar ConvexGeometry = /*#__PURE__*/function (_BufferGeometry) {\n  _inherits(ConvexGeometry, _BufferGeometry);\n\n  var _super = _createSuper(ConvexGeometry);\n\n  function ConvexGeometry() {\n    var _this;\n\n    var points = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    _classCallCheck(this, ConvexGeometry);\n\n    _this = _super.call(this);\n    var vertices = [];\n    var normals = [];\n    var convexHull = new ConvexHull().setFromPoints(points);\n    var faces = convexHull.faces;\n\n    for (var i = 0; i < faces.length; i++) {\n      var face = faces[i];\n      var edge = face.edge;\n\n      do {\n        var point = edge.head().point;\n        vertices.push(point.x, point.y, point.z);\n        normals.push(face.normal.x, face.normal.y, face.normal.z);\n        edge = edge.next;\n      } while (edge !== face.edge);\n    }\n\n    _this.setAttribute(\"position\", new Float32BufferAttribute(vertices, 3));\n\n    _this.setAttribute(\"normal\", new Float32BufferAttribute(normals, 3));\n\n    return _this;\n  }\n\n  return ConvexGeometry;\n}(BufferGeometry);\n\nexport { ConvexGeometry };","map":{"version":3,"sources":["/Users/theodaguier/Repositories/E-Do-Studio/node_modules/three-stdlib/geometries/ConvexGeometry.js"],"names":["BufferGeometry","Float32BufferAttribute","ConvexHull","ConvexGeometry","points","vertices","normals","convexHull","setFromPoints","faces","i","length","face","edge","point","head","push","x","y","z","normal","next","setAttribute"],"mappings":";;;AAAA,SAASA,cAAT,EAAyBC,sBAAzB,QAAuD,OAAvD;AACA,SAASC,UAAT,QAA2B,uBAA3B;;IACMC,c;;;;;AACJ,4BAAyB;AAAA;;AAAA,QAAbC,MAAa,uEAAJ,EAAI;;AAAA;;AACvB;AACA,QAAMC,QAAQ,GAAG,EAAjB;AACA,QAAMC,OAAO,GAAG,EAAhB;AACA,QAAMC,UAAU,GAAG,IAAIL,UAAJ,GAAiBM,aAAjB,CAA+BJ,MAA/B,CAAnB;AACA,QAAMK,KAAK,GAAGF,UAAU,CAACE,KAAzB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,UAAME,IAAI,GAAGH,KAAK,CAACC,CAAD,CAAlB;AACA,UAAIG,IAAI,GAAGD,IAAI,CAACC,IAAhB;;AACA,SAAG;AACD,YAAMC,KAAK,GAAGD,IAAI,CAACE,IAAL,GAAYD,KAA1B;AACAT,QAAAA,QAAQ,CAACW,IAAT,CAAcF,KAAK,CAACG,CAApB,EAAuBH,KAAK,CAACI,CAA7B,EAAgCJ,KAAK,CAACK,CAAtC;AACAb,QAAAA,OAAO,CAACU,IAAR,CAAaJ,IAAI,CAACQ,MAAL,CAAYH,CAAzB,EAA4BL,IAAI,CAACQ,MAAL,CAAYF,CAAxC,EAA2CN,IAAI,CAACQ,MAAL,CAAYD,CAAvD;AACAN,QAAAA,IAAI,GAAGA,IAAI,CAACQ,IAAZ;AACD,OALD,QAKSR,IAAI,KAAKD,IAAI,CAACC,IALvB;AAMD;;AACD,UAAKS,YAAL,CAAkB,UAAlB,EAA8B,IAAIrB,sBAAJ,CAA2BI,QAA3B,EAAqC,CAArC,CAA9B;;AACA,UAAKiB,YAAL,CAAkB,QAAlB,EAA4B,IAAIrB,sBAAJ,CAA2BK,OAA3B,EAAoC,CAApC,CAA5B;;AAjBuB;AAkBxB;;;EAnB0BN,c;;AAqB7B,SACEG,cADF","sourcesContent":["import { BufferGeometry, Float32BufferAttribute } from \"three\";\nimport { ConvexHull } from \"../math/ConvexHull.js\";\nclass ConvexGeometry extends BufferGeometry {\n  constructor(points = []) {\n    super();\n    const vertices = [];\n    const normals = [];\n    const convexHull = new ConvexHull().setFromPoints(points);\n    const faces = convexHull.faces;\n    for (let i = 0; i < faces.length; i++) {\n      const face = faces[i];\n      let edge = face.edge;\n      do {\n        const point = edge.head().point;\n        vertices.push(point.x, point.y, point.z);\n        normals.push(face.normal.x, face.normal.y, face.normal.z);\n        edge = edge.next;\n      } while (edge !== face.edge);\n    }\n    this.setAttribute(\"position\", new Float32BufferAttribute(vertices, 3));\n    this.setAttribute(\"normal\", new Float32BufferAttribute(normals, 3));\n  }\n}\nexport {\n  ConvexGeometry\n};\n"]},"metadata":{},"sourceType":"module"}