{"ast":null,"code":"import * as React from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport { Billboard } from './Billboard.js';\nimport { Plane } from './shapes.js';\nimport { useTexture } from './useTexture.js';\nconst CLOUD_URL = 'https://rawcdn.githack.com/pmndrs/drei-assets/9225a9f1fbd449d9411125c2f419b843d0308c9f/cloud.png';\n\nfunction Cloud({\n  opacity = 0.5,\n  speed = 0.4,\n  width = 10,\n  depth = 1.5,\n  segments = 20,\n  texture = CLOUD_URL,\n  color = \"#ffffff\",\n  depthTest = true,\n  ...props\n}) {\n  const group = React.useRef();\n  const cloudTexture = useTexture(texture);\n  const clouds = React.useMemo(() => [...new Array(segments)].map((_, index) => ({\n    x: width / 2 - Math.random() * width,\n    y: width / 2 - Math.random() * width,\n    scale: 0.4 + Math.sin((index + 1) / segments * Math.PI) * ((0.2 + Math.random()) * 10),\n    density: Math.max(0.2, Math.random()),\n    rotation: Math.max(0.002, 0.005 * Math.random()) * speed\n  })), [width, segments, speed]);\n  useFrame(state => {\n    var _group$current;\n\n    return (_group$current = group.current) == null ? void 0 : _group$current.children.forEach((cloud, index) => {\n      cloud.children[0].rotation.z += clouds[index].rotation;\n      cloud.children[0].scale.setScalar(clouds[index].scale + (1 + Math.sin(state.clock.getElapsedTime() / 10)) / 2 * index / 10);\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(\"group\", {\n    position: [0, 0, segments / 2 * depth],\n    ref: group\n  }, clouds.map(({\n    x,\n    y,\n    scale,\n    density\n  }, index) => /*#__PURE__*/React.createElement(Billboard, {\n    key: index,\n    position: [x, y, -index * depth]\n  }, /*#__PURE__*/React.createElement(Plane, {\n    scale: scale,\n    rotation: [0, 0, 0]\n  }, /*#__PURE__*/React.createElement(\"meshStandardMaterial\", {\n    map: cloudTexture,\n    transparent: true,\n    opacity: scale / 6 * density * opacity,\n    depthTest: depthTest,\n    color: color\n  }))))));\n}\n\nexport { Cloud };","map":{"version":3,"sources":["/Users/theodaguier/Repositories/E-Do-Studio/node_modules/@react-three/drei/core/Cloud.js"],"names":["React","useFrame","Billboard","Plane","useTexture","CLOUD_URL","Cloud","opacity","speed","width","depth","segments","texture","color","depthTest","props","group","useRef","cloudTexture","clouds","useMemo","Array","map","_","index","x","Math","random","y","scale","sin","PI","density","max","rotation","state","_group$current","current","children","forEach","cloud","z","setScalar","clock","getElapsedTime","createElement","position","ref","key","transparent"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AAEA,MAAMC,SAAS,GAAG,kGAAlB;;AACA,SAASC,KAAT,CAAe;AACbC,EAAAA,OAAO,GAAG,GADG;AAEbC,EAAAA,KAAK,GAAG,GAFK;AAGbC,EAAAA,KAAK,GAAG,EAHK;AAIbC,EAAAA,KAAK,GAAG,GAJK;AAKbC,EAAAA,QAAQ,GAAG,EALE;AAMbC,EAAAA,OAAO,GAAGP,SANG;AAObQ,EAAAA,KAAK,GAAG,SAPK;AAQbC,EAAAA,SAAS,GAAG,IARC;AASb,KAAGC;AATU,CAAf,EAUG;AACD,QAAMC,KAAK,GAAGhB,KAAK,CAACiB,MAAN,EAAd;AACA,QAAMC,YAAY,GAAGd,UAAU,CAACQ,OAAD,CAA/B;AACA,QAAMO,MAAM,GAAGnB,KAAK,CAACoB,OAAN,CAAc,MAAM,CAAC,GAAG,IAAIC,KAAJ,CAAUV,QAAV,CAAJ,EAAyBW,GAAzB,CAA6B,CAACC,CAAD,EAAIC,KAAJ,MAAe;AAC7EC,IAAAA,CAAC,EAAEhB,KAAK,GAAG,CAAR,GAAYiB,IAAI,CAACC,MAAL,KAAgBlB,KAD8C;AAE7EmB,IAAAA,CAAC,EAAEnB,KAAK,GAAG,CAAR,GAAYiB,IAAI,CAACC,MAAL,KAAgBlB,KAF8C;AAG7EoB,IAAAA,KAAK,EAAE,MAAMH,IAAI,CAACI,GAAL,CAAS,CAACN,KAAK,GAAG,CAAT,IAAcb,QAAd,GAAyBe,IAAI,CAACK,EAAvC,KAA8C,CAAC,MAAML,IAAI,CAACC,MAAL,EAAP,IAAwB,EAAtE,CAHgE;AAI7EK,IAAAA,OAAO,EAAEN,IAAI,CAACO,GAAL,CAAS,GAAT,EAAcP,IAAI,CAACC,MAAL,EAAd,CAJoE;AAK7EO,IAAAA,QAAQ,EAAER,IAAI,CAACO,GAAL,CAAS,KAAT,EAAgB,QAAQP,IAAI,CAACC,MAAL,EAAxB,IAAyCnB;AAL0B,GAAf,CAA7B,CAApB,EAMV,CAACC,KAAD,EAAQE,QAAR,EAAkBH,KAAlB,CANU,CAAf;AAOAP,EAAAA,QAAQ,CAACkC,KAAK,IAAI;AAChB,QAAIC,cAAJ;;AAEA,WAAO,CAACA,cAAc,GAAGpB,KAAK,CAACqB,OAAxB,KAAoC,IAApC,GAA2C,KAAK,CAAhD,GAAoDD,cAAc,CAACE,QAAf,CAAwBC,OAAxB,CAAgC,CAACC,KAAD,EAAQhB,KAAR,KAAkB;AAC3GgB,MAAAA,KAAK,CAACF,QAAN,CAAe,CAAf,EAAkBJ,QAAlB,CAA2BO,CAA3B,IAAgCtB,MAAM,CAACK,KAAD,CAAN,CAAcU,QAA9C;AACAM,MAAAA,KAAK,CAACF,QAAN,CAAe,CAAf,EAAkBT,KAAlB,CAAwBa,SAAxB,CAAkCvB,MAAM,CAACK,KAAD,CAAN,CAAcK,KAAd,GAAsB,CAAC,IAAIH,IAAI,CAACI,GAAL,CAASK,KAAK,CAACQ,KAAN,CAAYC,cAAZ,KAA+B,EAAxC,CAAL,IAAoD,CAApD,GAAwDpB,KAAxD,GAAgE,EAAxH;AACD,KAH0D,CAA3D;AAID,GAPO,CAAR;AAQA,SAAO,aAAaxB,KAAK,CAAC6C,aAAN,CAAoB,OAApB,EAA6B9B,KAA7B,EAAoC,aAAaf,KAAK,CAAC6C,aAAN,CAAoB,OAApB,EAA6B;AAChGC,IAAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAOnC,QAAQ,GAAG,CAAX,GAAeD,KAAtB,CADsF;AAEhGqC,IAAAA,GAAG,EAAE/B;AAF2F,GAA7B,EAGlEG,MAAM,CAACG,GAAP,CAAW,CAAC;AACbG,IAAAA,CADa;AAEbG,IAAAA,CAFa;AAGbC,IAAAA,KAHa;AAIbG,IAAAA;AAJa,GAAD,EAKXR,KALW,KAKD,aAAaxB,KAAK,CAAC6C,aAAN,CAAoB3C,SAApB,EAA+B;AACvD8C,IAAAA,GAAG,EAAExB,KADkD;AAEvDsB,IAAAA,QAAQ,EAAE,CAACrB,CAAD,EAAIG,CAAJ,EAAO,CAACJ,KAAD,GAASd,KAAhB;AAF6C,GAA/B,EAGvB,aAAaV,KAAK,CAAC6C,aAAN,CAAoB1C,KAApB,EAA2B;AACzC0B,IAAAA,KAAK,EAAEA,KADkC;AAEzCK,IAAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAF+B,GAA3B,EAGb,aAAalC,KAAK,CAAC6C,aAAN,CAAoB,sBAApB,EAA4C;AAC1DvB,IAAAA,GAAG,EAAEJ,YADqD;AAE1D+B,IAAAA,WAAW,EAAE,IAF6C;AAG1D1C,IAAAA,OAAO,EAAEsB,KAAK,GAAG,CAAR,GAAYG,OAAZ,GAAsBzB,OAH2B;AAI1DO,IAAAA,SAAS,EAAEA,SAJ+C;AAK1DD,IAAAA,KAAK,EAAEA;AALmD,GAA5C,CAHA,CAHU,CALvB,CAHkE,CAAjD,CAApB;AAqBD;;AAED,SAASP,KAAT","sourcesContent":["import * as React from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport { Billboard } from './Billboard.js';\nimport { Plane } from './shapes.js';\nimport { useTexture } from './useTexture.js';\n\nconst CLOUD_URL = 'https://rawcdn.githack.com/pmndrs/drei-assets/9225a9f1fbd449d9411125c2f419b843d0308c9f/cloud.png';\nfunction Cloud({\n  opacity = 0.5,\n  speed = 0.4,\n  width = 10,\n  depth = 1.5,\n  segments = 20,\n  texture = CLOUD_URL,\n  color = \"#ffffff\",\n  depthTest = true,\n  ...props\n}) {\n  const group = React.useRef();\n  const cloudTexture = useTexture(texture);\n  const clouds = React.useMemo(() => [...new Array(segments)].map((_, index) => ({\n    x: width / 2 - Math.random() * width,\n    y: width / 2 - Math.random() * width,\n    scale: 0.4 + Math.sin((index + 1) / segments * Math.PI) * ((0.2 + Math.random()) * 10),\n    density: Math.max(0.2, Math.random()),\n    rotation: Math.max(0.002, 0.005 * Math.random()) * speed\n  })), [width, segments, speed]);\n  useFrame(state => {\n    var _group$current;\n\n    return (_group$current = group.current) == null ? void 0 : _group$current.children.forEach((cloud, index) => {\n      cloud.children[0].rotation.z += clouds[index].rotation;\n      cloud.children[0].scale.setScalar(clouds[index].scale + (1 + Math.sin(state.clock.getElapsedTime() / 10)) / 2 * index / 10);\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(\"group\", {\n    position: [0, 0, segments / 2 * depth],\n    ref: group\n  }, clouds.map(({\n    x,\n    y,\n    scale,\n    density\n  }, index) => /*#__PURE__*/React.createElement(Billboard, {\n    key: index,\n    position: [x, y, -index * depth]\n  }, /*#__PURE__*/React.createElement(Plane, {\n    scale: scale,\n    rotation: [0, 0, 0]\n  }, /*#__PURE__*/React.createElement(\"meshStandardMaterial\", {\n    map: cloudTexture,\n    transparent: true,\n    opacity: scale / 6 * density * opacity,\n    depthTest: depthTest,\n    color: color\n  }))))));\n}\n\nexport { Cloud };\n"]},"metadata":{},"sourceType":"module"}