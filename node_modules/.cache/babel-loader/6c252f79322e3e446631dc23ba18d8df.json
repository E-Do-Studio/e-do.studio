{"ast":null,"code":"var _jsxFileName = \"/Users/theodaguier/Repositories/E-Do-Studio/src/Views/TestAccroche/Photos.jsx\",\n    _s = $RefreshSig$();\n\nimport { useTexture } from \"@react-three/drei\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\nimport { useState, memo, useMemo } from \"react\";\nimport { Photo } from \"./Photo\";\nimport { updatedPositions } from \"./helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Photos = /*#__PURE__*/memo(_c = _s(({\n  image\n}) => {\n  _s();\n\n  const texture = useTexture(image);\n  const [photos, updatePhotos] = useState([{\n    x: 0,\n    y: 0,\n    index: 0\n  }]);\n  const {\n    viewport\n  } = useThree();\n  useFrame(({\n    mouse\n  }) => {\n    const x = viewport.width * mouse.x / 2;\n    const y = viewport.height * mouse.y / 2;\n    const updatedPhotos = updatedPositions(photos, {\n      x,\n      y\n    });\n    updatePhotos(updatedPhotos);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: photos.map((photo, i) => /*#__PURE__*/_jsxDEV(Photo, {\n      index: photo.index,\n      x: photo.x,\n      y: photo.y\n    }, `plane${photo.index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n}, \"Dq3C2Wx/dkDQkVcumo9xOukxu6s=\", false, function () {\n  return [useTexture, useThree, useFrame];\n}));\n_c2 = Photos;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Photos$memo\");\n$RefreshReg$(_c2, \"Photos\");","map":{"version":3,"sources":["/Users/theodaguier/Repositories/E-Do-Studio/src/Views/TestAccroche/Photos.jsx"],"names":["useTexture","useFrame","useThree","useState","memo","useMemo","Photo","updatedPositions","Photos","image","texture","photos","updatePhotos","x","y","index","viewport","mouse","width","height","updatedPhotos","map","photo","i"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,mBAA3B;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,oBAAnC;AACA,SAASC,QAAT,EAAmBC,IAAnB,EAAyBC,OAAzB,QAAwC,OAAxC;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,gBAAT,QAAiC,WAAjC;;;AAEA,OAAO,MAAMC,MAAM,gBAAGJ,IAAI,SAAC,CAAC;AAAEK,EAAAA;AAAF,CAAD,KAAe;AAAA;;AACxC,QAAMC,OAAO,GAAGV,UAAU,CAACS,KAAD,CAA1B;AACA,QAAM,CAACE,MAAD,EAASC,YAAT,IAAyBT,QAAQ,CAAC,CACtC;AACEU,IAAAA,CAAC,EAAE,CADL;AAEEC,IAAAA,CAAC,EAAE,CAFL;AAGEC,IAAAA,KAAK,EAAE;AAHT,GADsC,CAAD,CAAvC;AAQA,QAAM;AAAEC,IAAAA;AAAF,MAAed,QAAQ,EAA7B;AAEAD,EAAAA,QAAQ,CAAC,CAAC;AAAEgB,IAAAA;AAAF,GAAD,KAAe;AACtB,UAAMJ,CAAC,GAAIG,QAAQ,CAACE,KAAT,GAAiBD,KAAK,CAACJ,CAAxB,GAA6B,CAAvC;AACA,UAAMC,CAAC,GAAIE,QAAQ,CAACG,MAAT,GAAkBF,KAAK,CAACH,CAAzB,GAA8B,CAAxC;AAEA,UAAMM,aAAa,GAAGb,gBAAgB,CAACI,MAAD,EAAS;AAAEE,MAAAA,CAAF;AAAKC,MAAAA;AAAL,KAAT,CAAtC;AACAF,IAAAA,YAAY,CAACQ,aAAD,CAAZ;AACD,GANO,CAAR;AAQA,sBACE;AAAA,cACGT,MAAM,CAACU,GAAP,CAAW,CAACC,KAAD,EAAQC,CAAR,kBACV,QAAC,KAAD;AAEE,MAAA,KAAK,EAAED,KAAK,CAACP,KAFf;AAGE,MAAA,CAAC,EAAEO,KAAK,CAACT,CAHX;AAIE,MAAA,CAAC,EAAES,KAAK,CAACR;AAJX,OACQ,QAAOQ,KAAK,CAACP,KAAM,EAD3B;AAAA;AAAA;AAAA;AAAA,YADD;AADH,mBADF;AAYD,CAhCyB;AAAA,UACRf,UADQ,EAUHE,QAVG,EAYxBD,QAZwB;AAAA,GAAnB;MAAMO,M","sourcesContent":["import { useTexture } from \"@react-three/drei\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\nimport { useState, memo, useMemo } from \"react\";\nimport { Photo } from \"./Photo\";\nimport { updatedPositions } from \"./helpers\";\n\nexport const Photos = memo(({ image }) => {\n  const texture = useTexture(image);\n  const [photos, updatePhotos] = useState([\n    {\n      x: 0,\n      y: 0,\n      index: 0,\n    },\n  ]);\n\n  const { viewport } = useThree();\n\n  useFrame(({ mouse }) => {\n    const x = (viewport.width * mouse.x) / 2;\n    const y = (viewport.height * mouse.y) / 2;\n\n    const updatedPhotos = updatedPositions(photos, { x, y });\n    updatePhotos(updatedPhotos);\n  });\n\n  return (\n    <>\n      {photos.map((photo, i) => (\n        <Photo\n          key={`plane${photo.index}`}\n          index={photo.index}\n          x={photo.x}\n          y={photo.y}\n        />\n      ))}\n    </>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}