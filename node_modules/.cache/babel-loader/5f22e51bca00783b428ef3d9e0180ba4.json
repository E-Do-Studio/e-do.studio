{"ast":null,"code":"import _classCallCheck from \"/Users/theodaguier/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/theodaguier/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Vector3 } from \"three\";\n\nvar _v1 = /* @__PURE__ */new Vector3();\n\nvar _v2 = /* @__PURE__ */new Vector3();\n\nvar _v3 = /* @__PURE__ */new Vector3();\n\nvar EPS = 1e-10;\n\nvar Capsule = /*#__PURE__*/function () {\n  function Capsule() {\n    var start = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector3(0, 0, 0);\n    var end = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3(0, 1, 0);\n    var radius = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n    _classCallCheck(this, Capsule);\n\n    this.start = start;\n    this.end = end;\n    this.radius = radius;\n  }\n\n  _createClass(Capsule, [{\n    key: \"clone\",\n    value: function clone() {\n      return new Capsule(this.start.clone(), this.end.clone(), this.radius);\n    }\n  }, {\n    key: \"set\",\n    value: function set(start, end, radius) {\n      this.start.copy(start);\n      this.end.copy(end);\n      this.radius = radius;\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(capsule) {\n      this.start.copy(capsule.start);\n      this.end.copy(capsule.end);\n      this.radius = capsule.radius;\n    }\n  }, {\n    key: \"getCenter\",\n    value: function getCenter(target) {\n      return target.copy(this.end).add(this.start).multiplyScalar(0.5);\n    }\n  }, {\n    key: \"translate\",\n    value: function translate(v) {\n      this.start.add(v);\n      this.end.add(v);\n    }\n  }, {\n    key: \"checkAABBAxis\",\n    value: function checkAABBAxis(p1x, p1y, p2x, p2y, minx, maxx, miny, maxy, radius) {\n      return (minx - p1x < radius || minx - p2x < radius) && (p1x - maxx < radius || p2x - maxx < radius) && (miny - p1y < radius || miny - p2y < radius) && (p1y - maxy < radius || p2y - maxy < radius);\n    }\n  }, {\n    key: \"intersectsBox\",\n    value: function intersectsBox(box) {\n      return this.checkAABBAxis(this.start.x, this.start.y, this.end.x, this.end.y, box.min.x, box.max.x, box.min.y, box.max.y, this.radius) && this.checkAABBAxis(this.start.x, this.start.z, this.end.x, this.end.z, box.min.x, box.max.x, box.min.z, box.max.z, this.radius) && this.checkAABBAxis(this.start.y, this.start.z, this.end.y, this.end.z, box.min.y, box.max.y, box.min.z, box.max.z, this.radius);\n    }\n  }, {\n    key: \"lineLineMinimumPoints\",\n    value: function lineLineMinimumPoints(line1, line2) {\n      var r = _v1.copy(line1.end).sub(line1.start);\n\n      var s = _v2.copy(line2.end).sub(line2.start);\n\n      var w = _v3.copy(line2.start).sub(line1.start);\n\n      var a = r.dot(s),\n          b = r.dot(r),\n          c = s.dot(s),\n          d = s.dot(w),\n          e = r.dot(w);\n      var t1, t2;\n      var divisor = b * c - a * a;\n\n      if (Math.abs(divisor) < EPS) {\n        var d1 = -d / c;\n        var d2 = (a - d) / c;\n\n        if (Math.abs(d1 - 0.5) < Math.abs(d2 - 0.5)) {\n          t1 = 0;\n          t2 = d1;\n        } else {\n          t1 = 1;\n          t2 = d2;\n        }\n      } else {\n        t1 = (d * a + e * c) / divisor;\n        t2 = (t1 * a - d) / c;\n      }\n\n      t2 = Math.max(0, Math.min(1, t2));\n      t1 = Math.max(0, Math.min(1, t1));\n      var point1 = r.multiplyScalar(t1).add(line1.start);\n      var point2 = s.multiplyScalar(t2).add(line2.start);\n      return [point1, point2];\n    }\n  }]);\n\n  return Capsule;\n}();\n\nexport { Capsule };","map":{"version":3,"sources":["/Users/theodaguier/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/three-stdlib/math/Capsule.js"],"names":["Vector3","_v1","_v2","_v3","EPS","Capsule","start","end","radius","clone","copy","capsule","target","add","multiplyScalar","v","p1x","p1y","p2x","p2y","minx","maxx","miny","maxy","box","checkAABBAxis","x","y","min","max","z","line1","line2","r","sub","s","w","a","dot","b","c","d","e","t1","t2","divisor","Math","abs","d1","d2","point1","point2"],"mappings":"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","sourcesContent":["import { Vector3 } from \"three\";\nconst _v1 = /* @__PURE__ */ new Vector3();\nconst _v2 = /* @__PURE__ */ new Vector3();\nconst _v3 = /* @__PURE__ */ new Vector3();\nconst EPS = 1e-10;\nclass Capsule {\n  constructor(start = new Vector3(0, 0, 0), end = new Vector3(0, 1, 0), radius = 1) {\n    this.start = start;\n    this.end = end;\n    this.radius = radius;\n  }\n  clone() {\n    return new Capsule(this.start.clone(), this.end.clone(), this.radius);\n  }\n  set(start, end, radius) {\n    this.start.copy(start);\n    this.end.copy(end);\n    this.radius = radius;\n  }\n  copy(capsule) {\n    this.start.copy(capsule.start);\n    this.end.copy(capsule.end);\n    this.radius = capsule.radius;\n  }\n  getCenter(target) {\n    return target.copy(this.end).add(this.start).multiplyScalar(0.5);\n  }\n  translate(v) {\n    this.start.add(v);\n    this.end.add(v);\n  }\n  checkAABBAxis(p1x, p1y, p2x, p2y, minx, maxx, miny, maxy, radius) {\n    return (minx - p1x < radius || minx - p2x < radius) && (p1x - maxx < radius || p2x - maxx < radius) && (miny - p1y < radius || miny - p2y < radius) && (p1y - maxy < radius || p2y - maxy < radius);\n  }\n  intersectsBox(box) {\n    return this.checkAABBAxis(\n      this.start.x,\n      this.start.y,\n      this.end.x,\n      this.end.y,\n      box.min.x,\n      box.max.x,\n      box.min.y,\n      box.max.y,\n      this.radius\n    ) && this.checkAABBAxis(\n      this.start.x,\n      this.start.z,\n      this.end.x,\n      this.end.z,\n      box.min.x,\n      box.max.x,\n      box.min.z,\n      box.max.z,\n      this.radius\n    ) && this.checkAABBAxis(\n      this.start.y,\n      this.start.z,\n      this.end.y,\n      this.end.z,\n      box.min.y,\n      box.max.y,\n      box.min.z,\n      box.max.z,\n      this.radius\n    );\n  }\n  lineLineMinimumPoints(line1, line2) {\n    const r = _v1.copy(line1.end).sub(line1.start);\n    const s = _v2.copy(line2.end).sub(line2.start);\n    const w = _v3.copy(line2.start).sub(line1.start);\n    const a = r.dot(s), b = r.dot(r), c = s.dot(s), d = s.dot(w), e = r.dot(w);\n    let t1, t2;\n    const divisor = b * c - a * a;\n    if (Math.abs(divisor) < EPS) {\n      const d1 = -d / c;\n      const d2 = (a - d) / c;\n      if (Math.abs(d1 - 0.5) < Math.abs(d2 - 0.5)) {\n        t1 = 0;\n        t2 = d1;\n      } else {\n        t1 = 1;\n        t2 = d2;\n      }\n    } else {\n      t1 = (d * a + e * c) / divisor;\n      t2 = (t1 * a - d) / c;\n    }\n    t2 = Math.max(0, Math.min(1, t2));\n    t1 = Math.max(0, Math.min(1, t1));\n    const point1 = r.multiplyScalar(t1).add(line1.start);\n    const point2 = s.multiplyScalar(t2).add(line2.start);\n    return [point1, point2];\n  }\n}\nexport {\n  Capsule\n};\n"]},"metadata":{},"sourceType":"module"}