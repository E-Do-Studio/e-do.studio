{"ast":null,"code":"import { Vector3, LineSegments, BufferGeometry, Float32BufferAttribute, LineBasicMaterial } from \"three\";\n\nconst _v1 = /* @__PURE__ */new Vector3();\n\nconst _v2 = /* @__PURE__ */new Vector3();\n\nclass VertexTangentsHelper extends LineSegments {\n  constructor(object, size = 1, color = 65535) {\n    const geometry = new BufferGeometry();\n    const nTangents = object.geometry.attributes.tangent.count;\n    const positions = new Float32BufferAttribute(nTangents * 2 * 3, 3);\n    geometry.setAttribute(\"position\", positions);\n    super(geometry, new LineBasicMaterial({\n      color,\n      toneMapped: false\n    }));\n    this.object = object;\n    this.size = size;\n    this.type = \"VertexTangentsHelper\";\n    this.matrixAutoUpdate = false;\n    this.update();\n  }\n\n  update() {\n    this.object.updateMatrixWorld(true);\n    const matrixWorld = this.object.matrixWorld;\n    const position = this.geometry.attributes.position;\n    const objGeometry = this.object.geometry;\n    const objPos = objGeometry.attributes.position;\n    const objTan = objGeometry.attributes.tangent;\n    let idx = 0;\n\n    for (let j = 0, jl = objPos.count; j < jl; j++) {\n      _v1.fromBufferAttribute(objPos, j).applyMatrix4(matrixWorld);\n\n      _v2.fromBufferAttribute(objTan, j);\n\n      _v2.transformDirection(matrixWorld).multiplyScalar(this.size).add(_v1);\n\n      position.setXYZ(idx, _v1.x, _v1.y, _v1.z);\n      idx = idx + 1;\n      position.setXYZ(idx, _v2.x, _v2.y, _v2.z);\n      idx = idx + 1;\n    }\n\n    position.needsUpdate = true;\n  }\n\n  dispose() {\n    this.geometry.dispose();\n    this.material.dispose();\n  }\n\n}\n\nexport { VertexTangentsHelper };","map":{"version":3,"sources":["/Users/theodaguier/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/three-stdlib/helpers/VertexTangentsHelper.js"],"names":["Vector3","LineSegments","BufferGeometry","Float32BufferAttribute","LineBasicMaterial","_v1","_v2","VertexTangentsHelper","constructor","object","size","color","geometry","nTangents","attributes","tangent","count","positions","setAttribute","toneMapped","type","matrixAutoUpdate","update","updateMatrixWorld","matrixWorld","position","objGeometry","objPos","objTan","idx","j","jl","fromBufferAttribute","applyMatrix4","transformDirection","multiplyScalar","add","setXYZ","x","y","z","needsUpdate","dispose","material"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,YAAlB,EAAgCC,cAAhC,EAAgDC,sBAAhD,EAAwEC,iBAAxE,QAAiG,OAAjG;;AACA,MAAMC,GAAG,GAAG,eAAgB,IAAIL,OAAJ,EAA5B;;AACA,MAAMM,GAAG,GAAG,eAAgB,IAAIN,OAAJ,EAA5B;;AACA,MAAMO,oBAAN,SAAmCN,YAAnC,CAAgD;AAC9CO,EAAAA,WAAW,CAACC,MAAD,EAASC,IAAI,GAAG,CAAhB,EAAmBC,KAAK,GAAG,KAA3B,EAAkC;AAC3C,UAAMC,QAAQ,GAAG,IAAIV,cAAJ,EAAjB;AACA,UAAMW,SAAS,GAAGJ,MAAM,CAACG,QAAP,CAAgBE,UAAhB,CAA2BC,OAA3B,CAAmCC,KAArD;AACA,UAAMC,SAAS,GAAG,IAAId,sBAAJ,CAA2BU,SAAS,GAAG,CAAZ,GAAgB,CAA3C,EAA8C,CAA9C,CAAlB;AACAD,IAAAA,QAAQ,CAACM,YAAT,CAAsB,UAAtB,EAAkCD,SAAlC;AACA,UAAML,QAAN,EAAgB,IAAIR,iBAAJ,CAAsB;AAAEO,MAAAA,KAAF;AAASQ,MAAAA,UAAU,EAAE;AAArB,KAAtB,CAAhB;AACA,SAAKV,MAAL,GAAcA,MAAd;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKU,IAAL,GAAY,sBAAZ;AACA,SAAKC,gBAAL,GAAwB,KAAxB;AACA,SAAKC,MAAL;AACD;;AACDA,EAAAA,MAAM,GAAG;AACP,SAAKb,MAAL,CAAYc,iBAAZ,CAA8B,IAA9B;AACA,UAAMC,WAAW,GAAG,KAAKf,MAAL,CAAYe,WAAhC;AACA,UAAMC,QAAQ,GAAG,KAAKb,QAAL,CAAcE,UAAd,CAAyBW,QAA1C;AACA,UAAMC,WAAW,GAAG,KAAKjB,MAAL,CAAYG,QAAhC;AACA,UAAMe,MAAM,GAAGD,WAAW,CAACZ,UAAZ,CAAuBW,QAAtC;AACA,UAAMG,MAAM,GAAGF,WAAW,CAACZ,UAAZ,CAAuBC,OAAtC;AACA,QAAIc,GAAG,GAAG,CAAV;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGJ,MAAM,CAACX,KAA5B,EAAmCc,CAAC,GAAGC,EAAvC,EAA2CD,CAAC,EAA5C,EAAgD;AAC9CzB,MAAAA,GAAG,CAAC2B,mBAAJ,CAAwBL,MAAxB,EAAgCG,CAAhC,EAAmCG,YAAnC,CAAgDT,WAAhD;;AACAlB,MAAAA,GAAG,CAAC0B,mBAAJ,CAAwBJ,MAAxB,EAAgCE,CAAhC;;AACAxB,MAAAA,GAAG,CAAC4B,kBAAJ,CAAuBV,WAAvB,EAAoCW,cAApC,CAAmD,KAAKzB,IAAxD,EAA8D0B,GAA9D,CAAkE/B,GAAlE;;AACAoB,MAAAA,QAAQ,CAACY,MAAT,CAAgBR,GAAhB,EAAqBxB,GAAG,CAACiC,CAAzB,EAA4BjC,GAAG,CAACkC,CAAhC,EAAmClC,GAAG,CAACmC,CAAvC;AACAX,MAAAA,GAAG,GAAGA,GAAG,GAAG,CAAZ;AACAJ,MAAAA,QAAQ,CAACY,MAAT,CAAgBR,GAAhB,EAAqBvB,GAAG,CAACgC,CAAzB,EAA4BhC,GAAG,CAACiC,CAAhC,EAAmCjC,GAAG,CAACkC,CAAvC;AACAX,MAAAA,GAAG,GAAGA,GAAG,GAAG,CAAZ;AACD;;AACDJ,IAAAA,QAAQ,CAACgB,WAAT,GAAuB,IAAvB;AACD;;AACDC,EAAAA,OAAO,GAAG;AACR,SAAK9B,QAAL,CAAc8B,OAAd;AACA,SAAKC,QAAL,CAAcD,OAAd;AACD;;AAnC6C;;AAqChD,SACEnC,oBADF","sourcesContent":["import { Vector3, LineSegments, BufferGeometry, Float32BufferAttribute, LineBasicMaterial } from \"three\";\nconst _v1 = /* @__PURE__ */ new Vector3();\nconst _v2 = /* @__PURE__ */ new Vector3();\nclass VertexTangentsHelper extends LineSegments {\n  constructor(object, size = 1, color = 65535) {\n    const geometry = new BufferGeometry();\n    const nTangents = object.geometry.attributes.tangent.count;\n    const positions = new Float32BufferAttribute(nTangents * 2 * 3, 3);\n    geometry.setAttribute(\"position\", positions);\n    super(geometry, new LineBasicMaterial({ color, toneMapped: false }));\n    this.object = object;\n    this.size = size;\n    this.type = \"VertexTangentsHelper\";\n    this.matrixAutoUpdate = false;\n    this.update();\n  }\n  update() {\n    this.object.updateMatrixWorld(true);\n    const matrixWorld = this.object.matrixWorld;\n    const position = this.geometry.attributes.position;\n    const objGeometry = this.object.geometry;\n    const objPos = objGeometry.attributes.position;\n    const objTan = objGeometry.attributes.tangent;\n    let idx = 0;\n    for (let j = 0, jl = objPos.count; j < jl; j++) {\n      _v1.fromBufferAttribute(objPos, j).applyMatrix4(matrixWorld);\n      _v2.fromBufferAttribute(objTan, j);\n      _v2.transformDirection(matrixWorld).multiplyScalar(this.size).add(_v1);\n      position.setXYZ(idx, _v1.x, _v1.y, _v1.z);\n      idx = idx + 1;\n      position.setXYZ(idx, _v2.x, _v2.y, _v2.z);\n      idx = idx + 1;\n    }\n    position.needsUpdate = true;\n  }\n  dispose() {\n    this.geometry.dispose();\n    this.material.dispose();\n  }\n}\nexport {\n  VertexTangentsHelper\n};\n"]},"metadata":{},"sourceType":"module"}