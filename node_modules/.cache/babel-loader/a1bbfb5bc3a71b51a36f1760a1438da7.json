{"ast":null,"code":"var __defProp = Object.defineProperty;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n  return value;\n};\n\nimport { Pass, FullScreenQuad } from \"./Pass.js\";\nimport { WebGLRenderTarget, NearestFilter, MeshDepthMaterial, RGBADepthPacking, NoBlending, UniformsUtils, ShaderMaterial, Color } from \"three\";\nimport { BokehShader } from \"../shaders/BokehShader.js\";\n\nclass BokehPass extends Pass {\n  constructor(scene, camera, params) {\n    super();\n\n    __publicField(this, \"scene\");\n\n    __publicField(this, \"camera\");\n\n    __publicField(this, \"renderTargetDepth\");\n\n    __publicField(this, \"materialDepth\");\n\n    __publicField(this, \"materialBokeh\");\n\n    __publicField(this, \"fsQuad\");\n\n    __publicField(this, \"_oldClearColor\");\n\n    __publicField(this, \"uniforms\");\n\n    this.scene = scene;\n    this.camera = camera;\n    const focus = params.focus !== void 0 ? params.focus : 1;\n    const aspect = params.aspect !== void 0 ? params.aspect : camera.aspect;\n    const aperture = params.aperture !== void 0 ? params.aperture : 0.025;\n    const maxblur = params.maxblur !== void 0 ? params.maxblur : 1;\n    const width = params.width || window.innerWidth || 1;\n    const height = params.height || window.innerHeight || 1;\n    this.renderTargetDepth = new WebGLRenderTarget(width, height, {\n      minFilter: NearestFilter,\n      magFilter: NearestFilter\n    });\n    this.renderTargetDepth.texture.name = \"BokehPass.depth\";\n    this.materialDepth = new MeshDepthMaterial();\n    this.materialDepth.depthPacking = RGBADepthPacking;\n    this.materialDepth.blending = NoBlending;\n\n    if (BokehShader === void 0) {\n      console.error(\"BokehPass relies on BokehShader\");\n    }\n\n    const bokehShader = BokehShader;\n    const bokehUniforms = UniformsUtils.clone(bokehShader.uniforms);\n    bokehUniforms[\"tDepth\"].value = this.renderTargetDepth.texture;\n    bokehUniforms[\"focus\"].value = focus;\n    bokehUniforms[\"aspect\"].value = aspect;\n    bokehUniforms[\"aperture\"].value = aperture;\n    bokehUniforms[\"maxblur\"].value = maxblur;\n    bokehUniforms[\"nearClip\"].value = camera.near;\n    bokehUniforms[\"farClip\"].value = camera.far;\n    this.materialBokeh = new ShaderMaterial({\n      defines: Object.assign({}, bokehShader.defines),\n      uniforms: bokehUniforms,\n      vertexShader: bokehShader.vertexShader,\n      fragmentShader: bokehShader.fragmentShader\n    });\n    this.uniforms = bokehUniforms;\n    this.needsSwap = false;\n    this.fsQuad = new FullScreenQuad(this.materialBokeh);\n    this._oldClearColor = new Color();\n  }\n\n  render(renderer, writeBuffer, readBuffer) {\n    this.scene.overrideMaterial = this.materialDepth;\n    renderer.getClearColor(this._oldClearColor);\n    const oldClearAlpha = renderer.getClearAlpha();\n    const oldAutoClear = renderer.autoClear;\n    renderer.autoClear = false;\n    renderer.setClearColor(16777215);\n    renderer.setClearAlpha(1);\n    renderer.setRenderTarget(this.renderTargetDepth);\n    renderer.clear();\n    renderer.render(this.scene, this.camera);\n    this.uniforms[\"tColor\"].value = readBuffer.texture;\n    this.uniforms[\"nearClip\"].value = this.camera.near;\n    this.uniforms[\"farClip\"].value = this.camera.far;\n\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.fsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      renderer.clear();\n      this.fsQuad.render(renderer);\n    }\n\n    this.scene.overrideMaterial = null;\n    renderer.setClearColor(this._oldClearColor);\n    renderer.setClearAlpha(oldClearAlpha);\n    renderer.autoClear = oldAutoClear;\n  }\n\n}\n\nexport { BokehPass };","map":{"version":3,"sources":["/Users/theodaguier/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/three-stdlib/postprocessing/BokehPass.js"],"names":["__defProp","Object","defineProperty","__defNormalProp","obj","key","value","enumerable","configurable","writable","__publicField","Pass","FullScreenQuad","WebGLRenderTarget","NearestFilter","MeshDepthMaterial","RGBADepthPacking","NoBlending","UniformsUtils","ShaderMaterial","Color","BokehShader","BokehPass","constructor","scene","camera","params","focus","aspect","aperture","maxblur","width","window","innerWidth","height","innerHeight","renderTargetDepth","minFilter","magFilter","texture","name","materialDepth","depthPacking","blending","console","error","bokehShader","bokehUniforms","clone","uniforms","near","far","materialBokeh","defines","assign","vertexShader","fragmentShader","needsSwap","fsQuad","_oldClearColor","render","renderer","writeBuffer","readBuffer","overrideMaterial","getClearColor","oldClearAlpha","getClearAlpha","oldAutoClear","autoClear","setClearColor","setClearAlpha","setRenderTarget","clear","renderToScreen"],"mappings":"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","sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { Pass, FullScreenQuad } from \"./Pass.js\";\nimport { WebGLRenderTarget, NearestFilter, MeshDepthMaterial, RGBADepthPacking, NoBlending, UniformsUtils, ShaderMaterial, Color } from \"three\";\nimport { BokehShader } from \"../shaders/BokehShader.js\";\nclass BokehPass extends Pass {\n  constructor(scene, camera, params) {\n    super();\n    __publicField(this, \"scene\");\n    __publicField(this, \"camera\");\n    __publicField(this, \"renderTargetDepth\");\n    __publicField(this, \"materialDepth\");\n    __publicField(this, \"materialBokeh\");\n    __publicField(this, \"fsQuad\");\n    __publicField(this, \"_oldClearColor\");\n    __publicField(this, \"uniforms\");\n    this.scene = scene;\n    this.camera = camera;\n    const focus = params.focus !== void 0 ? params.focus : 1;\n    const aspect = params.aspect !== void 0 ? params.aspect : camera.aspect;\n    const aperture = params.aperture !== void 0 ? params.aperture : 0.025;\n    const maxblur = params.maxblur !== void 0 ? params.maxblur : 1;\n    const width = params.width || window.innerWidth || 1;\n    const height = params.height || window.innerHeight || 1;\n    this.renderTargetDepth = new WebGLRenderTarget(width, height, {\n      minFilter: NearestFilter,\n      magFilter: NearestFilter\n    });\n    this.renderTargetDepth.texture.name = \"BokehPass.depth\";\n    this.materialDepth = new MeshDepthMaterial();\n    this.materialDepth.depthPacking = RGBADepthPacking;\n    this.materialDepth.blending = NoBlending;\n    if (BokehShader === void 0) {\n      console.error(\"BokehPass relies on BokehShader\");\n    }\n    const bokehShader = BokehShader;\n    const bokehUniforms = UniformsUtils.clone(bokehShader.uniforms);\n    bokehUniforms[\"tDepth\"].value = this.renderTargetDepth.texture;\n    bokehUniforms[\"focus\"].value = focus;\n    bokehUniforms[\"aspect\"].value = aspect;\n    bokehUniforms[\"aperture\"].value = aperture;\n    bokehUniforms[\"maxblur\"].value = maxblur;\n    bokehUniforms[\"nearClip\"].value = camera.near;\n    bokehUniforms[\"farClip\"].value = camera.far;\n    this.materialBokeh = new ShaderMaterial({\n      defines: Object.assign({}, bokehShader.defines),\n      uniforms: bokehUniforms,\n      vertexShader: bokehShader.vertexShader,\n      fragmentShader: bokehShader.fragmentShader\n    });\n    this.uniforms = bokehUniforms;\n    this.needsSwap = false;\n    this.fsQuad = new FullScreenQuad(this.materialBokeh);\n    this._oldClearColor = new Color();\n  }\n  render(renderer, writeBuffer, readBuffer) {\n    this.scene.overrideMaterial = this.materialDepth;\n    renderer.getClearColor(this._oldClearColor);\n    const oldClearAlpha = renderer.getClearAlpha();\n    const oldAutoClear = renderer.autoClear;\n    renderer.autoClear = false;\n    renderer.setClearColor(16777215);\n    renderer.setClearAlpha(1);\n    renderer.setRenderTarget(this.renderTargetDepth);\n    renderer.clear();\n    renderer.render(this.scene, this.camera);\n    this.uniforms[\"tColor\"].value = readBuffer.texture;\n    this.uniforms[\"nearClip\"].value = this.camera.near;\n    this.uniforms[\"farClip\"].value = this.camera.far;\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.fsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      renderer.clear();\n      this.fsQuad.render(renderer);\n    }\n    this.scene.overrideMaterial = null;\n    renderer.setClearColor(this._oldClearColor);\n    renderer.setClearAlpha(oldClearAlpha);\n    renderer.autoClear = oldAutoClear;\n  }\n}\nexport {\n  BokehPass\n};\n"]},"metadata":{},"sourceType":"module"}