{"ast":null,"code":"import _classCallCheck from \"/Users/theodaguier/_workdir/dev/pro/e-do/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/theodaguier/_workdir/dev/pro/e-do/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/theodaguier/_workdir/dev/pro/e-do/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/theodaguier/_workdir/dev/pro/e-do/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/theodaguier/_workdir/dev/pro/e-do/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar __defProp = Object.defineProperty;\n\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\n\nvar __publicField = function __publicField(obj, key, value) {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n  return value;\n};\n\nimport { UniformsUtils, WebGLRenderTarget, LinearFilter, NearestFilter, RGBAFormat, ShaderMaterial, MeshBasicMaterial } from \"three\";\nimport { Pass, FullScreenQuad } from \"./Pass.js\";\nimport { AfterimageShader } from \"../shaders/AfterimageShader.js\";\n\nvar AfterimagePass = /*#__PURE__*/function (_Pass) {\n  _inherits(AfterimagePass, _Pass);\n\n  var _super = _createSuper(AfterimagePass);\n\n  function AfterimagePass() {\n    var _this;\n\n    var damp = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0.96;\n    var shader = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : AfterimageShader;\n\n    _classCallCheck(this, AfterimagePass);\n\n    _this = _super.call(this);\n\n    __publicField(_assertThisInitialized(_this), \"shader\");\n\n    __publicField(_assertThisInitialized(_this), \"uniforms\");\n\n    __publicField(_assertThisInitialized(_this), \"textureComp\");\n\n    __publicField(_assertThisInitialized(_this), \"textureOld\");\n\n    __publicField(_assertThisInitialized(_this), \"shaderMaterial\");\n\n    __publicField(_assertThisInitialized(_this), \"compFsQuad\");\n\n    __publicField(_assertThisInitialized(_this), \"copyFsQuad\");\n\n    _this.shader = shader;\n    _this.uniforms = UniformsUtils.clone(shader.uniforms);\n    _this.uniforms[\"damp\"].value = damp;\n    _this.textureComp = new WebGLRenderTarget(window.innerWidth, window.innerHeight, {\n      minFilter: LinearFilter,\n      magFilter: NearestFilter,\n      format: RGBAFormat\n    });\n    _this.textureOld = new WebGLRenderTarget(window.innerWidth, window.innerHeight, {\n      minFilter: LinearFilter,\n      magFilter: NearestFilter,\n      format: RGBAFormat\n    });\n    _this.shaderMaterial = new ShaderMaterial({\n      uniforms: _this.uniforms,\n      vertexShader: _this.shader.vertexShader,\n      fragmentShader: _this.shader.fragmentShader\n    });\n    _this.compFsQuad = new FullScreenQuad(_this.shaderMaterial);\n    var material = new MeshBasicMaterial();\n    _this.copyFsQuad = new FullScreenQuad(material);\n    return _this;\n  }\n\n  _createClass(AfterimagePass, [{\n    key: \"render\",\n    value: function render(renderer, writeBuffer, readBuffer) {\n      this.uniforms[\"tOld\"].value = this.textureOld.texture;\n      this.uniforms[\"tNew\"].value = readBuffer.texture;\n      renderer.setRenderTarget(this.textureComp);\n      this.compFsQuad.render(renderer);\n      this.copyFsQuad.material.map = this.textureComp.texture;\n\n      if (this.renderToScreen) {\n        renderer.setRenderTarget(null);\n        this.copyFsQuad.render(renderer);\n      } else {\n        renderer.setRenderTarget(writeBuffer);\n        if (this.clear) renderer.clear();\n        this.copyFsQuad.render(renderer);\n      }\n\n      var temp = this.textureOld;\n      this.textureOld = this.textureComp;\n      this.textureComp = temp;\n    }\n  }, {\n    key: \"setSize\",\n    value: function setSize(width, height) {\n      this.textureComp.setSize(width, height);\n      this.textureOld.setSize(width, height);\n    }\n  }]);\n\n  return AfterimagePass;\n}(Pass);\n\nexport { AfterimagePass };","map":{"version":3,"sources":["/Users/theodaguier/_workdir/dev/pro/e-do/E-Do-Studio/node_modules/three-stdlib/postprocessing/AfterimagePass.js"],"names":["__defProp","Object","defineProperty","__defNormalProp","obj","key","value","enumerable","configurable","writable","__publicField","UniformsUtils","WebGLRenderTarget","LinearFilter","NearestFilter","RGBAFormat","ShaderMaterial","MeshBasicMaterial","Pass","FullScreenQuad","AfterimageShader","AfterimagePass","damp","shader","uniforms","clone","textureComp","window","innerWidth","innerHeight","minFilter","magFilter","format","textureOld","shaderMaterial","vertexShader","fragmentShader","compFsQuad","material","copyFsQuad","renderer","writeBuffer","readBuffer","texture","setRenderTarget","render","map","renderToScreen","clear","temp","width","height","setSize"],"mappings":"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","sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { UniformsUtils, WebGLRenderTarget, LinearFilter, NearestFilter, RGBAFormat, ShaderMaterial, MeshBasicMaterial } from \"three\";\nimport { Pass, FullScreenQuad } from \"./Pass.js\";\nimport { AfterimageShader } from \"../shaders/AfterimageShader.js\";\nclass AfterimagePass extends Pass {\n  constructor(damp = 0.96, shader = AfterimageShader) {\n    super();\n    __publicField(this, \"shader\");\n    __publicField(this, \"uniforms\");\n    __publicField(this, \"textureComp\");\n    __publicField(this, \"textureOld\");\n    __publicField(this, \"shaderMaterial\");\n    __publicField(this, \"compFsQuad\");\n    __publicField(this, \"copyFsQuad\");\n    this.shader = shader;\n    this.uniforms = UniformsUtils.clone(shader.uniforms);\n    this.uniforms[\"damp\"].value = damp;\n    this.textureComp = new WebGLRenderTarget(window.innerWidth, window.innerHeight, {\n      minFilter: LinearFilter,\n      magFilter: NearestFilter,\n      format: RGBAFormat\n    });\n    this.textureOld = new WebGLRenderTarget(window.innerWidth, window.innerHeight, {\n      minFilter: LinearFilter,\n      magFilter: NearestFilter,\n      format: RGBAFormat\n    });\n    this.shaderMaterial = new ShaderMaterial({\n      uniforms: this.uniforms,\n      vertexShader: this.shader.vertexShader,\n      fragmentShader: this.shader.fragmentShader\n    });\n    this.compFsQuad = new FullScreenQuad(this.shaderMaterial);\n    let material = new MeshBasicMaterial();\n    this.copyFsQuad = new FullScreenQuad(material);\n  }\n  render(renderer, writeBuffer, readBuffer) {\n    this.uniforms[\"tOld\"].value = this.textureOld.texture;\n    this.uniforms[\"tNew\"].value = readBuffer.texture;\n    renderer.setRenderTarget(this.textureComp);\n    this.compFsQuad.render(renderer);\n    this.copyFsQuad.material.map = this.textureComp.texture;\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.copyFsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      if (this.clear)\n        renderer.clear();\n      this.copyFsQuad.render(renderer);\n    }\n    let temp = this.textureOld;\n    this.textureOld = this.textureComp;\n    this.textureComp = temp;\n  }\n  setSize(width, height) {\n    this.textureComp.setSize(width, height);\n    this.textureOld.setSize(width, height);\n  }\n}\nexport {\n  AfterimagePass\n};\n"]},"metadata":{},"sourceType":"module"}