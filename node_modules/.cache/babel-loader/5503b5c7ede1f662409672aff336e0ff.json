{"ast":null,"code":"import { Mesh, AnimationMixer, AnimationClip } from \"three\";\n\nclass MorphAnimMesh extends Mesh {\n  constructor(geometry, material) {\n    super(geometry, material);\n    this.type = \"MorphAnimMesh\";\n    this.mixer = new AnimationMixer(this);\n    this.activeAction = null;\n  }\n\n  setDirectionForward() {\n    this.mixer.timeScale = 1;\n  }\n\n  setDirectionBackward() {\n    this.mixer.timeScale = -1;\n  }\n\n  playAnimation(label, fps) {\n    if (this.activeAction) {\n      this.activeAction.stop();\n      this.activeAction = null;\n    }\n\n    const clip = AnimationClip.findByName(this, label);\n\n    if (clip) {\n      const action = this.mixer.clipAction(clip);\n      action.timeScale = clip.tracks.length * fps / clip.duration;\n      this.activeAction = action.play();\n    } else {\n      throw new Error(\"THREE.MorphAnimMesh: animations[\" + label + \"] undefined in .playAnimation()\");\n    }\n  }\n\n  updateAnimation(delta) {\n    this.mixer.update(delta);\n  }\n\n  copy(source, recursive) {\n    super.copy(source, recursive);\n    this.mixer = new AnimationMixer(this);\n    return this;\n  }\n\n}\n\nexport { MorphAnimMesh };","map":{"version":3,"sources":["/Users/theodaguier/Developer/old/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/three-stdlib/misc/MorphAnimMesh.js"],"names":["Mesh","AnimationMixer","AnimationClip","MorphAnimMesh","constructor","geometry","material","type","mixer","activeAction","setDirectionForward","timeScale","setDirectionBackward","playAnimation","label","fps","stop","clip","findByName","action","clipAction","tracks","length","duration","play","Error","updateAnimation","delta","update","copy","source","recursive"],"mappings":"AAAA,SAASA,IAAT,EAAeC,cAAf,EAA+BC,aAA/B,QAAoD,OAApD;;AACA,MAAMC,aAAN,SAA4BH,IAA5B,CAAiC;AAC/BI,EAAAA,WAAW,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAC9B,UAAMD,QAAN,EAAgBC,QAAhB;AACA,SAAKC,IAAL,GAAY,eAAZ;AACA,SAAKC,KAAL,GAAa,IAAIP,cAAJ,CAAmB,IAAnB,CAAb;AACA,SAAKQ,YAAL,GAAoB,IAApB;AACD;;AACDC,EAAAA,mBAAmB,GAAG;AACpB,SAAKF,KAAL,CAAWG,SAAX,GAAuB,CAAvB;AACD;;AACDC,EAAAA,oBAAoB,GAAG;AACrB,SAAKJ,KAAL,CAAWG,SAAX,GAAuB,CAAC,CAAxB;AACD;;AACDE,EAAAA,aAAa,CAACC,KAAD,EAAQC,GAAR,EAAa;AACxB,QAAI,KAAKN,YAAT,EAAuB;AACrB,WAAKA,YAAL,CAAkBO,IAAlB;AACA,WAAKP,YAAL,GAAoB,IAApB;AACD;;AACD,UAAMQ,IAAI,GAAGf,aAAa,CAACgB,UAAd,CAAyB,IAAzB,EAA+BJ,KAA/B,CAAb;;AACA,QAAIG,IAAJ,EAAU;AACR,YAAME,MAAM,GAAG,KAAKX,KAAL,CAAWY,UAAX,CAAsBH,IAAtB,CAAf;AACAE,MAAAA,MAAM,CAACR,SAAP,GAAmBM,IAAI,CAACI,MAAL,CAAYC,MAAZ,GAAqBP,GAArB,GAA2BE,IAAI,CAACM,QAAnD;AACA,WAAKd,YAAL,GAAoBU,MAAM,CAACK,IAAP,EAApB;AACD,KAJD,MAIO;AACL,YAAM,IAAIC,KAAJ,CAAU,qCAAqCX,KAArC,GAA6C,iCAAvD,CAAN;AACD;AACF;;AACDY,EAAAA,eAAe,CAACC,KAAD,EAAQ;AACrB,SAAKnB,KAAL,CAAWoB,MAAX,CAAkBD,KAAlB;AACD;;AACDE,EAAAA,IAAI,CAACC,MAAD,EAASC,SAAT,EAAoB;AACtB,UAAMF,IAAN,CAAWC,MAAX,EAAmBC,SAAnB;AACA,SAAKvB,KAAL,GAAa,IAAIP,cAAJ,CAAmB,IAAnB,CAAb;AACA,WAAO,IAAP;AACD;;AAlC8B;;AAoCjC,SACEE,aADF","sourcesContent":["import { Mesh, AnimationMixer, AnimationClip } from \"three\";\nclass MorphAnimMesh extends Mesh {\n  constructor(geometry, material) {\n    super(geometry, material);\n    this.type = \"MorphAnimMesh\";\n    this.mixer = new AnimationMixer(this);\n    this.activeAction = null;\n  }\n  setDirectionForward() {\n    this.mixer.timeScale = 1;\n  }\n  setDirectionBackward() {\n    this.mixer.timeScale = -1;\n  }\n  playAnimation(label, fps) {\n    if (this.activeAction) {\n      this.activeAction.stop();\n      this.activeAction = null;\n    }\n    const clip = AnimationClip.findByName(this, label);\n    if (clip) {\n      const action = this.mixer.clipAction(clip);\n      action.timeScale = clip.tracks.length * fps / clip.duration;\n      this.activeAction = action.play();\n    } else {\n      throw new Error(\"THREE.MorphAnimMesh: animations[\" + label + \"] undefined in .playAnimation()\");\n    }\n  }\n  updateAnimation(delta) {\n    this.mixer.update(delta);\n  }\n  copy(source, recursive) {\n    super.copy(source, recursive);\n    this.mixer = new AnimationMixer(this);\n    return this;\n  }\n}\nexport {\n  MorphAnimMesh\n};\n"]},"metadata":{},"sourceType":"module"}