{"ast":null,"code":"import _classCallCheck from \"/Users/theodaguier/Repositories/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/theodaguier/Repositories/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Object3D, MeshLambertMaterial, Mesh, TextureLoader, UVMapping, Box3, AnimationMixer } from \"three\";\nimport { MD2Loader } from \"../loaders/MD2Loader.js\";\n\nvar MD2Character = /*#__PURE__*/function () {\n  function MD2Character() {\n    _classCallCheck(this, MD2Character);\n\n    this.scale = 1;\n    this.animationFPS = 6;\n    this.root = new Object3D();\n    this.meshBody = null;\n    this.meshWeapon = null;\n    this.skinsBody = [];\n    this.skinsWeapon = [];\n    this.weapons = [];\n    this.activeAnimation = null;\n    this.mixer = null;\n\n    this.onLoadComplete = function () {};\n\n    this.loadCounter = 0;\n  }\n\n  _createClass(MD2Character, [{\n    key: \"loadParts\",\n    value: function loadParts(config) {\n      var scope = this;\n\n      function createPart(geometry, skinMap) {\n        var materialWireframe = new MeshLambertMaterial({\n          color: 16755200,\n          wireframe: true,\n          morphTargets: true,\n          morphNormals: true\n        });\n        var materialTexture = new MeshLambertMaterial({\n          color: 16777215,\n          wireframe: false,\n          map: skinMap,\n          morphTargets: true,\n          morphNormals: true\n        });\n        var mesh = new Mesh(geometry, materialTexture);\n        mesh.rotation.y = -Math.PI / 2;\n        mesh.castShadow = true;\n        mesh.receiveShadow = true;\n        mesh.materialTexture = materialTexture;\n        mesh.materialWireframe = materialWireframe;\n        return mesh;\n      }\n\n      function loadTextures(baseUrl, textureUrls) {\n        var textureLoader = new TextureLoader();\n        var textures = [];\n\n        for (var i = 0; i < textureUrls.length; i++) {\n          textures[i] = textureLoader.load(baseUrl + textureUrls[i], checkLoadingComplete);\n          textures[i].mapping = UVMapping;\n          textures[i].name = textureUrls[i];\n          if (\"colorSpace\" in textures[i]) textures[i].colorSpace = \"srgb\";else textures[i].encoding = 3001;\n        }\n\n        return textures;\n      }\n\n      function checkLoadingComplete() {\n        scope.loadCounter -= 1;\n        if (scope.loadCounter === 0) scope.onLoadComplete();\n      }\n\n      this.loadCounter = config.weapons.length * 2 + config.skins.length + 1;\n      var weaponsTextures = [];\n\n      for (var i = 0; i < config.weapons.length; i++) {\n        weaponsTextures[i] = config.weapons[i][1];\n      }\n\n      this.skinsBody = loadTextures(config.baseUrl + \"skins/\", config.skins);\n      this.skinsWeapon = loadTextures(config.baseUrl + \"skins/\", weaponsTextures);\n      var loader = new MD2Loader();\n      loader.load(config.baseUrl + config.body, function (geo) {\n        var boundingBox = new Box3();\n        boundingBox.setFromBufferAttribute(geo.attributes.position);\n        scope.root.position.y = -scope.scale * boundingBox.min.y;\n        var mesh = createPart(geo, scope.skinsBody[0]);\n        mesh.scale.set(scope.scale, scope.scale, scope.scale);\n        scope.root.add(mesh);\n        scope.meshBody = mesh;\n        scope.meshBody.clipOffset = 0;\n        scope.activeAnimationClipName = mesh.geometry.animations[0].name;\n        scope.mixer = new AnimationMixer(mesh);\n        checkLoadingComplete();\n      });\n\n      var generateCallback = function generateCallback(index, name) {\n        return function (geo) {\n          var mesh = createPart(geo, scope.skinsWeapon[index]);\n          mesh.scale.set(scope.scale, scope.scale, scope.scale);\n          mesh.visible = false;\n          mesh.name = name;\n          scope.root.add(mesh);\n          scope.weapons[index] = mesh;\n          scope.meshWeapon = mesh;\n          checkLoadingComplete();\n        };\n      };\n\n      for (var _i = 0; _i < config.weapons.length; _i++) {\n        loader.load(config.baseUrl + config.weapons[_i][0], generateCallback(_i, config.weapons[_i][0]));\n      }\n    }\n  }, {\n    key: \"setPlaybackRate\",\n    value: function setPlaybackRate(rate) {\n      if (rate !== 0) {\n        this.mixer.timeScale = 1 / rate;\n      } else {\n        this.mixer.timeScale = 0;\n      }\n    }\n  }, {\n    key: \"setWireframe\",\n    value: function setWireframe(wireframeEnabled) {\n      if (wireframeEnabled) {\n        if (this.meshBody) this.meshBody.material = this.meshBody.materialWireframe;\n        if (this.meshWeapon) this.meshWeapon.material = this.meshWeapon.materialWireframe;\n      } else {\n        if (this.meshBody) this.meshBody.material = this.meshBody.materialTexture;\n        if (this.meshWeapon) this.meshWeapon.material = this.meshWeapon.materialTexture;\n      }\n    }\n  }, {\n    key: \"setSkin\",\n    value: function setSkin(index) {\n      if (this.meshBody && this.meshBody.material.wireframe === false) {\n        this.meshBody.material.map = this.skinsBody[index];\n      }\n    }\n  }, {\n    key: \"setWeapon\",\n    value: function setWeapon(index) {\n      for (var i = 0; i < this.weapons.length; i++) {\n        this.weapons[i].visible = false;\n      }\n\n      var activeWeapon = this.weapons[index];\n\n      if (activeWeapon) {\n        activeWeapon.visible = true;\n        this.meshWeapon = activeWeapon;\n        this.syncWeaponAnimation();\n      }\n    }\n  }, {\n    key: \"setAnimation\",\n    value: function setAnimation(clipName) {\n      if (this.meshBody) {\n        if (this.meshBody.activeAction) {\n          this.meshBody.activeAction.stop();\n          this.meshBody.activeAction = null;\n        }\n\n        var action = this.mixer.clipAction(clipName, this.meshBody);\n\n        if (action) {\n          this.meshBody.activeAction = action.play();\n        }\n      }\n\n      this.activeClipName = clipName;\n      this.syncWeaponAnimation();\n    }\n  }, {\n    key: \"syncWeaponAnimation\",\n    value: function syncWeaponAnimation() {\n      var clipName = this.activeClipName;\n\n      if (this.meshWeapon) {\n        if (this.meshWeapon.activeAction) {\n          this.meshWeapon.activeAction.stop();\n          this.meshWeapon.activeAction = null;\n        }\n\n        var action = this.mixer.clipAction(clipName, this.meshWeapon);\n\n        if (action) {\n          this.meshWeapon.activeAction = action.syncWith(this.meshBody.activeAction).play();\n        }\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(delta) {\n      if (this.mixer) this.mixer.update(delta);\n    }\n  }]);\n\n  return MD2Character;\n}();\n\nexport { MD2Character };","map":{"version":3,"sources":["/Users/theodaguier/Repositories/E-Do-Studio/node_modules/three-stdlib/misc/MD2Character.js"],"names":["Object3D","MeshLambertMaterial","Mesh","TextureLoader","UVMapping","Box3","AnimationMixer","MD2Loader","MD2Character","scale","animationFPS","root","meshBody","meshWeapon","skinsBody","skinsWeapon","weapons","activeAnimation","mixer","onLoadComplete","loadCounter","config","scope","createPart","geometry","skinMap","materialWireframe","color","wireframe","morphTargets","morphNormals","materialTexture","map","mesh","rotation","y","Math","PI","castShadow","receiveShadow","loadTextures","baseUrl","textureUrls","textureLoader","textures","i","length","load","checkLoadingComplete","mapping","name","colorSpace","encoding","skins","weaponsTextures","loader","body","geo","boundingBox","setFromBufferAttribute","attributes","position","min","set","add","clipOffset","activeAnimationClipName","animations","generateCallback","index","visible","rate","timeScale","wireframeEnabled","material","activeWeapon","syncWeaponAnimation","clipName","activeAction","stop","action","clipAction","play","activeClipName","syncWith","delta","update"],"mappings":"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","sourcesContent":["import { Object3D, MeshLambertMaterial, Mesh, TextureLoader, UVMapping, Box3, AnimationMixer } from \"three\";\nimport { MD2Loader } from \"../loaders/MD2Loader.js\";\nclass MD2Character {\n  constructor() {\n    this.scale = 1;\n    this.animationFPS = 6;\n    this.root = new Object3D();\n    this.meshBody = null;\n    this.meshWeapon = null;\n    this.skinsBody = [];\n    this.skinsWeapon = [];\n    this.weapons = [];\n    this.activeAnimation = null;\n    this.mixer = null;\n    this.onLoadComplete = function() {\n    };\n    this.loadCounter = 0;\n  }\n  loadParts(config) {\n    const scope = this;\n    function createPart(geometry, skinMap) {\n      const materialWireframe = new MeshLambertMaterial({\n        color: 16755200,\n        wireframe: true,\n        morphTargets: true,\n        morphNormals: true\n      });\n      const materialTexture = new MeshLambertMaterial({\n        color: 16777215,\n        wireframe: false,\n        map: skinMap,\n        morphTargets: true,\n        morphNormals: true\n      });\n      const mesh = new Mesh(geometry, materialTexture);\n      mesh.rotation.y = -Math.PI / 2;\n      mesh.castShadow = true;\n      mesh.receiveShadow = true;\n      mesh.materialTexture = materialTexture;\n      mesh.materialWireframe = materialWireframe;\n      return mesh;\n    }\n    function loadTextures(baseUrl, textureUrls) {\n      const textureLoader = new TextureLoader();\n      const textures = [];\n      for (let i = 0; i < textureUrls.length; i++) {\n        textures[i] = textureLoader.load(baseUrl + textureUrls[i], checkLoadingComplete);\n        textures[i].mapping = UVMapping;\n        textures[i].name = textureUrls[i];\n        if (\"colorSpace\" in textures[i])\n          textures[i].colorSpace = \"srgb\";\n        else\n          textures[i].encoding = 3001;\n      }\n      return textures;\n    }\n    function checkLoadingComplete() {\n      scope.loadCounter -= 1;\n      if (scope.loadCounter === 0)\n        scope.onLoadComplete();\n    }\n    this.loadCounter = config.weapons.length * 2 + config.skins.length + 1;\n    const weaponsTextures = [];\n    for (let i = 0; i < config.weapons.length; i++)\n      weaponsTextures[i] = config.weapons[i][1];\n    this.skinsBody = loadTextures(config.baseUrl + \"skins/\", config.skins);\n    this.skinsWeapon = loadTextures(config.baseUrl + \"skins/\", weaponsTextures);\n    const loader = new MD2Loader();\n    loader.load(config.baseUrl + config.body, function(geo) {\n      const boundingBox = new Box3();\n      boundingBox.setFromBufferAttribute(geo.attributes.position);\n      scope.root.position.y = -scope.scale * boundingBox.min.y;\n      const mesh = createPart(geo, scope.skinsBody[0]);\n      mesh.scale.set(scope.scale, scope.scale, scope.scale);\n      scope.root.add(mesh);\n      scope.meshBody = mesh;\n      scope.meshBody.clipOffset = 0;\n      scope.activeAnimationClipName = mesh.geometry.animations[0].name;\n      scope.mixer = new AnimationMixer(mesh);\n      checkLoadingComplete();\n    });\n    const generateCallback = function(index, name) {\n      return function(geo) {\n        const mesh = createPart(geo, scope.skinsWeapon[index]);\n        mesh.scale.set(scope.scale, scope.scale, scope.scale);\n        mesh.visible = false;\n        mesh.name = name;\n        scope.root.add(mesh);\n        scope.weapons[index] = mesh;\n        scope.meshWeapon = mesh;\n        checkLoadingComplete();\n      };\n    };\n    for (let i = 0; i < config.weapons.length; i++) {\n      loader.load(config.baseUrl + config.weapons[i][0], generateCallback(i, config.weapons[i][0]));\n    }\n  }\n  setPlaybackRate(rate) {\n    if (rate !== 0) {\n      this.mixer.timeScale = 1 / rate;\n    } else {\n      this.mixer.timeScale = 0;\n    }\n  }\n  setWireframe(wireframeEnabled) {\n    if (wireframeEnabled) {\n      if (this.meshBody)\n        this.meshBody.material = this.meshBody.materialWireframe;\n      if (this.meshWeapon)\n        this.meshWeapon.material = this.meshWeapon.materialWireframe;\n    } else {\n      if (this.meshBody)\n        this.meshBody.material = this.meshBody.materialTexture;\n      if (this.meshWeapon)\n        this.meshWeapon.material = this.meshWeapon.materialTexture;\n    }\n  }\n  setSkin(index) {\n    if (this.meshBody && this.meshBody.material.wireframe === false) {\n      this.meshBody.material.map = this.skinsBody[index];\n    }\n  }\n  setWeapon(index) {\n    for (let i = 0; i < this.weapons.length; i++)\n      this.weapons[i].visible = false;\n    const activeWeapon = this.weapons[index];\n    if (activeWeapon) {\n      activeWeapon.visible = true;\n      this.meshWeapon = activeWeapon;\n      this.syncWeaponAnimation();\n    }\n  }\n  setAnimation(clipName) {\n    if (this.meshBody) {\n      if (this.meshBody.activeAction) {\n        this.meshBody.activeAction.stop();\n        this.meshBody.activeAction = null;\n      }\n      const action = this.mixer.clipAction(clipName, this.meshBody);\n      if (action) {\n        this.meshBody.activeAction = action.play();\n      }\n    }\n    this.activeClipName = clipName;\n    this.syncWeaponAnimation();\n  }\n  syncWeaponAnimation() {\n    const clipName = this.activeClipName;\n    if (this.meshWeapon) {\n      if (this.meshWeapon.activeAction) {\n        this.meshWeapon.activeAction.stop();\n        this.meshWeapon.activeAction = null;\n      }\n      const action = this.mixer.clipAction(clipName, this.meshWeapon);\n      if (action) {\n        this.meshWeapon.activeAction = action.syncWith(this.meshBody.activeAction).play();\n      }\n    }\n  }\n  update(delta) {\n    if (this.mixer)\n      this.mixer.update(delta);\n  }\n}\nexport {\n  MD2Character\n};\n"]},"metadata":{},"sourceType":"module"}