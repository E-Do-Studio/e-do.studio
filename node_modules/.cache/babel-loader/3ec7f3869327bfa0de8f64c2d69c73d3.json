{"ast":null,"code":"var __defProp = Object.defineProperty;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n  return value;\n};\n\nimport { EventDispatcher, Vector3, MOUSE, TOUCH, Quaternion, Spherical, Vector2, PerspectiveCamera, OrthographicCamera } from \"three\";\n\nconst moduloWrapAround = (offset, capacity) => (offset % capacity + capacity) % capacity;\n\nclass OrbitControls extends EventDispatcher {\n  constructor(object, domElement) {\n    super();\n\n    __publicField(this, \"object\");\n\n    __publicField(this, \"domElement\"); // Set to false to disable this control\n\n\n    __publicField(this, \"enabled\", true); // \"target\" sets the location of focus, where the object orbits around\n\n\n    __publicField(this, \"target\", new Vector3()); // How far you can dolly in and out ( PerspectiveCamera only )\n\n\n    __publicField(this, \"minDistance\", 0);\n\n    __publicField(this, \"maxDistance\", Infinity); // How far you can zoom in and out ( OrthographicCamera only )\n\n\n    __publicField(this, \"minZoom\", 0);\n\n    __publicField(this, \"maxZoom\", Infinity); // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n\n\n    __publicField(this, \"minPolarAngle\", 0); // radians\n\n\n    __publicField(this, \"maxPolarAngle\", Math.PI); // radians\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\n\n    __publicField(this, \"minAzimuthAngle\", -Infinity); // radians\n\n\n    __publicField(this, \"maxAzimuthAngle\", Infinity); // radians\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n\n\n    __publicField(this, \"enableDamping\", false);\n\n    __publicField(this, \"dampingFactor\", 0.05); // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n    // Set to false to disable zooming\n\n\n    __publicField(this, \"enableZoom\", true);\n\n    __publicField(this, \"zoomSpeed\", 1); // Set to false to disable rotating\n\n\n    __publicField(this, \"enableRotate\", true);\n\n    __publicField(this, \"rotateSpeed\", 1); // Set to false to disable panning\n\n\n    __publicField(this, \"enablePan\", true);\n\n    __publicField(this, \"panSpeed\", 1);\n\n    __publicField(this, \"screenSpacePanning\", true); // if false, pan orthogonal to world-space direction camera.up\n\n\n    __publicField(this, \"keyPanSpeed\", 7); // pixels moved per arrow key push\n    // Set to true to automatically rotate around the target\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\n\n\n    __publicField(this, \"autoRotate\", false);\n\n    __publicField(this, \"autoRotateSpeed\", 2); // 30 seconds per orbit when fps is 60\n\n\n    __publicField(this, \"reverseOrbit\", false); // true if you want to reverse the orbit to mouse drag from left to right = orbits left\n    // The four arrow keys\n\n\n    __publicField(this, \"keys\", {\n      LEFT: \"ArrowLeft\",\n      UP: \"ArrowUp\",\n      RIGHT: \"ArrowRight\",\n      BOTTOM: \"ArrowDown\"\n    }); // Mouse buttons\n\n\n    __publicField(this, \"mouseButtons\", {\n      LEFT: MOUSE.ROTATE,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.PAN\n    }); // Touch fingers\n\n\n    __publicField(this, \"touches\", {\n      ONE: TOUCH.ROTATE,\n      TWO: TOUCH.DOLLY_PAN\n    });\n\n    __publicField(this, \"target0\");\n\n    __publicField(this, \"position0\");\n\n    __publicField(this, \"zoom0\"); // the target DOM element for key events\n\n\n    __publicField(this, \"_domElementKeyEvents\", null);\n\n    __publicField(this, \"getPolarAngle\");\n\n    __publicField(this, \"getAzimuthalAngle\");\n\n    __publicField(this, \"setPolarAngle\");\n\n    __publicField(this, \"setAzimuthalAngle\");\n\n    __publicField(this, \"getDistance\");\n\n    __publicField(this, \"listenToKeyEvents\");\n\n    __publicField(this, \"saveState\");\n\n    __publicField(this, \"reset\");\n\n    __publicField(this, \"update\");\n\n    __publicField(this, \"connect\");\n\n    __publicField(this, \"dispose\");\n\n    this.object = object;\n    this.domElement = domElement;\n    this.target0 = this.target.clone();\n    this.position0 = this.object.position.clone();\n    this.zoom0 = this.object.zoom;\n\n    this.getPolarAngle = () => spherical.phi;\n\n    this.getAzimuthalAngle = () => spherical.theta;\n\n    this.setPolarAngle = value => {\n      let phi = moduloWrapAround(value, 2 * Math.PI);\n      let currentPhi = spherical.phi;\n      if (currentPhi < 0) currentPhi += 2 * Math.PI;\n      if (phi < 0) phi += 2 * Math.PI;\n      let phiDist = Math.abs(phi - currentPhi);\n\n      if (2 * Math.PI - phiDist < phiDist) {\n        if (phi < currentPhi) {\n          phi += 2 * Math.PI;\n        } else {\n          currentPhi += 2 * Math.PI;\n        }\n      }\n\n      sphericalDelta.phi = phi - currentPhi;\n      scope.update();\n    };\n\n    this.setAzimuthalAngle = value => {\n      let theta = moduloWrapAround(value, 2 * Math.PI);\n      let currentTheta = spherical.theta;\n      if (currentTheta < 0) currentTheta += 2 * Math.PI;\n      if (theta < 0) theta += 2 * Math.PI;\n      let thetaDist = Math.abs(theta - currentTheta);\n\n      if (2 * Math.PI - thetaDist < thetaDist) {\n        if (theta < currentTheta) {\n          theta += 2 * Math.PI;\n        } else {\n          currentTheta += 2 * Math.PI;\n        }\n      }\n\n      sphericalDelta.theta = theta - currentTheta;\n      scope.update();\n    };\n\n    this.getDistance = () => scope.object.position.distanceTo(scope.target);\n\n    this.listenToKeyEvents = domElement2 => {\n      domElement2.addEventListener(\"keydown\", onKeyDown);\n      this._domElementKeyEvents = domElement2;\n    };\n\n    this.saveState = () => {\n      scope.target0.copy(scope.target);\n      scope.position0.copy(scope.object.position);\n      scope.zoom0 = scope.object.zoom;\n    };\n\n    this.reset = () => {\n      scope.target.copy(scope.target0);\n      scope.object.position.copy(scope.position0);\n      scope.object.zoom = scope.zoom0;\n      scope.object.updateProjectionMatrix();\n      scope.dispatchEvent(changeEvent);\n      scope.update();\n      state = STATE.NONE;\n    };\n\n    this.update = (() => {\n      const offset = new Vector3();\n      const quat = new Quaternion().setFromUnitVectors(object.up, new Vector3(0, 1, 0));\n      const quatInverse = quat.clone().invert();\n      const lastPosition = new Vector3();\n      const lastQuaternion = new Quaternion();\n      const twoPI = 2 * Math.PI;\n      return function update() {\n        const position = scope.object.position;\n        offset.copy(position).sub(scope.target);\n        offset.applyQuaternion(quat);\n        spherical.setFromVector3(offset);\n\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle());\n        }\n\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n        } else {\n          spherical.theta += sphericalDelta.theta;\n          spherical.phi += sphericalDelta.phi;\n        }\n\n        let min = scope.minAzimuthAngle;\n        let max = scope.maxAzimuthAngle;\n\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI) min += twoPI;else if (min > Math.PI) min -= twoPI;\n          if (max < -Math.PI) max += twoPI;else if (max > Math.PI) max -= twoPI;\n\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta));\n          } else {\n            spherical.theta = spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta);\n          }\n        }\n\n        spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n        spherical.makeSafe();\n        spherical.radius *= scale;\n        spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius));\n\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor);\n        } else {\n          scope.target.add(panOffset);\n        }\n\n        offset.setFromSpherical(spherical);\n        offset.applyQuaternion(quatInverse);\n        position.copy(scope.target).add(offset);\n        scope.object.lookAt(scope.target);\n\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\n          panOffset.multiplyScalar(1 - scope.dampingFactor);\n        } else {\n          sphericalDelta.set(0, 0, 0);\n          panOffset.set(0, 0, 0);\n        }\n\n        scale = 1;\n\n        if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n          scope.dispatchEvent(changeEvent);\n          lastPosition.copy(scope.object.position);\n          lastQuaternion.copy(scope.object.quaternion);\n          zoomChanged = false;\n          return true;\n        }\n\n        return false;\n      };\n    })();\n\n    this.connect = domElement2 => {\n      if (domElement2 === document) {\n        console.error('THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.');\n      }\n\n      scope.domElement = domElement2;\n      scope.domElement.style.touchAction = \"none\";\n      scope.domElement.addEventListener(\"contextmenu\", onContextMenu);\n      scope.domElement.addEventListener(\"pointerdown\", onPointerDown);\n      scope.domElement.addEventListener(\"pointercancel\", onPointerCancel);\n      scope.domElement.addEventListener(\"wheel\", onMouseWheel);\n    };\n\n    this.dispose = () => {\n      var _a, _b, _c, _d, _e, _f;\n\n      (_a = scope.domElement) == null ? void 0 : _a.removeEventListener(\"contextmenu\", onContextMenu);\n      (_b = scope.domElement) == null ? void 0 : _b.removeEventListener(\"pointerdown\", onPointerDown);\n      (_c = scope.domElement) == null ? void 0 : _c.removeEventListener(\"pointercancel\", onPointerCancel);\n      (_d = scope.domElement) == null ? void 0 : _d.removeEventListener(\"wheel\", onMouseWheel);\n      (_e = scope.domElement) == null ? void 0 : _e.ownerDocument.removeEventListener(\"pointermove\", onPointerMove);\n      (_f = scope.domElement) == null ? void 0 : _f.ownerDocument.removeEventListener(\"pointerup\", onPointerUp);\n\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener(\"keydown\", onKeyDown);\n      }\n    };\n\n    const scope = this;\n    const changeEvent = {\n      type: \"change\"\n    };\n    const startEvent = {\n      type: \"start\"\n    };\n    const endEvent = {\n      type: \"end\"\n    };\n    const STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6\n    };\n    let state = STATE.NONE;\n    const EPS = 1e-6;\n    const spherical = new Spherical();\n    const sphericalDelta = new Spherical();\n    let scale = 1;\n    const panOffset = new Vector3();\n    let zoomChanged = false;\n    const rotateStart = new Vector2();\n    const rotateEnd = new Vector2();\n    const rotateDelta = new Vector2();\n    const panStart = new Vector2();\n    const panEnd = new Vector2();\n    const panDelta = new Vector2();\n    const dollyStart = new Vector2();\n    const dollyEnd = new Vector2();\n    const dollyDelta = new Vector2();\n    const pointers = [];\n    const pointerPositions = {};\n\n    function getAutoRotationAngle() {\n      return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n    }\n\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed);\n    }\n\n    function rotateLeft(angle) {\n      if (scope.reverseOrbit) {\n        sphericalDelta.theta += angle;\n      } else {\n        sphericalDelta.theta -= angle;\n      }\n    }\n\n    function rotateUp(angle) {\n      if (scope.reverseOrbit) {\n        sphericalDelta.phi += angle;\n      } else {\n        sphericalDelta.phi -= angle;\n      }\n    }\n\n    const panLeft = (() => {\n      const v = new Vector3();\n      return function panLeft2(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0);\n        v.multiplyScalar(-distance);\n        panOffset.add(v);\n      };\n    })();\n\n    const panUp = (() => {\n      const v = new Vector3();\n      return function panUp2(distance, objectMatrix) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1);\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0);\n          v.crossVectors(scope.object.up, v);\n        }\n\n        v.multiplyScalar(distance);\n        panOffset.add(v);\n      };\n    })();\n\n    const pan = (() => {\n      const offset = new Vector3();\n      return function pan2(deltaX, deltaY) {\n        const element = scope.domElement;\n\n        if (element && scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n          const position = scope.object.position;\n          offset.copy(position).sub(scope.target);\n          let targetDistance = offset.length();\n          targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180);\n          panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n          panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n        } else if (element && scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n          panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n          panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n        } else {\n          console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.\");\n          scope.enablePan = false;\n        }\n      };\n    })();\n\n    function dollyOut(dollyScale) {\n      if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n        scale /= dollyScale;\n      } else if (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\");\n        scope.enableZoom = false;\n      }\n    }\n\n    function dollyIn(dollyScale) {\n      if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n        scale *= dollyScale;\n      } else if (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\");\n        scope.enableZoom = false;\n      }\n    }\n\n    function handleMouseDownRotate(event) {\n      rotateStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownDolly(event) {\n      dollyStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownPan(event) {\n      panStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseMoveRotate(event) {\n      rotateEnd.set(event.clientX, event.clientY);\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight);\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n\n      rotateStart.copy(rotateEnd);\n      scope.update();\n    }\n\n    function handleMouseMoveDolly(event) {\n      dollyEnd.set(event.clientX, event.clientY);\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale());\n      }\n\n      dollyStart.copy(dollyEnd);\n      scope.update();\n    }\n\n    function handleMouseMovePan(event) {\n      panEnd.set(event.clientX, event.clientY);\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n      scope.update();\n    }\n\n    function handleMouseWheel(event) {\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale());\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale());\n      }\n\n      scope.update();\n    }\n\n    function handleKeyDown(event) {\n      let needsUpdate = false;\n\n      switch (event.code) {\n        case scope.keys.UP:\n          pan(0, scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.LEFT:\n          pan(scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.RIGHT:\n          pan(-scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n      }\n\n      if (needsUpdate) {\n        event.preventDefault();\n        scope.update();\n      }\n    }\n\n    function handleTouchStartRotate() {\n      if (pointers.length == 1) {\n        rotateStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        rotateStart.set(x, y);\n      }\n    }\n\n    function handleTouchStartPan() {\n      if (pointers.length == 1) {\n        panStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        panStart.set(x, y);\n      }\n    }\n\n    function handleTouchStartDolly() {\n      const dx = pointers[0].pageX - pointers[1].pageX;\n      const dy = pointers[0].pageY - pointers[1].pageY;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyStart.set(0, distance);\n    }\n\n    function handleTouchStartDollyPan() {\n      if (scope.enableZoom) handleTouchStartDolly();\n      if (scope.enablePan) handleTouchStartPan();\n    }\n\n    function handleTouchStartDollyRotate() {\n      if (scope.enableZoom) handleTouchStartDolly();\n      if (scope.enableRotate) handleTouchStartRotate();\n    }\n\n    function handleTouchMoveRotate(event) {\n      if (pointers.length == 1) {\n        rotateEnd.set(event.pageX, event.pageY);\n      } else {\n        const position = getSecondPointerPosition(event);\n        const x = 0.5 * (event.pageX + position.x);\n        const y = 0.5 * (event.pageY + position.y);\n        rotateEnd.set(x, y);\n      }\n\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight);\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n\n      rotateStart.copy(rotateEnd);\n    }\n\n    function handleTouchMovePan(event) {\n      if (pointers.length == 1) {\n        panEnd.set(event.pageX, event.pageY);\n      } else {\n        const position = getSecondPointerPosition(event);\n        const x = 0.5 * (event.pageX + position.x);\n        const y = 0.5 * (event.pageY + position.y);\n        panEnd.set(x, y);\n      }\n\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n    }\n\n    function handleTouchMoveDolly(event) {\n      const position = getSecondPointerPosition(event);\n      const dx = event.pageX - position.x;\n      const dy = event.pageY - position.y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyEnd.set(0, distance);\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n      dollyOut(dollyDelta.y);\n      dollyStart.copy(dollyEnd);\n    }\n\n    function handleTouchMoveDollyPan(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enablePan) handleTouchMovePan(event);\n    }\n\n    function handleTouchMoveDollyRotate(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enableRotate) handleTouchMoveRotate(event);\n    }\n\n    function onPointerDown(event) {\n      var _a, _b;\n\n      if (scope.enabled === false) return;\n\n      if (pointers.length === 0) {\n        (_a = scope.domElement) == null ? void 0 : _a.ownerDocument.addEventListener(\"pointermove\", onPointerMove);\n        (_b = scope.domElement) == null ? void 0 : _b.ownerDocument.addEventListener(\"pointerup\", onPointerUp);\n      }\n\n      addPointer(event);\n\n      if (event.pointerType === \"touch\") {\n        onTouchStart(event);\n      } else {\n        onMouseDown(event);\n      }\n    }\n\n    function onPointerMove(event) {\n      if (scope.enabled === false) return;\n\n      if (event.pointerType === \"touch\") {\n        onTouchMove(event);\n      } else {\n        onMouseMove(event);\n      }\n    }\n\n    function onPointerUp(event) {\n      var _a, _b, _c;\n\n      removePointer(event);\n\n      if (pointers.length === 0) {\n        (_a = scope.domElement) == null ? void 0 : _a.releasePointerCapture(event.pointerId);\n        (_b = scope.domElement) == null ? void 0 : _b.ownerDocument.removeEventListener(\"pointermove\", onPointerMove);\n        (_c = scope.domElement) == null ? void 0 : _c.ownerDocument.removeEventListener(\"pointerup\", onPointerUp);\n      }\n\n      scope.dispatchEvent(endEvent);\n      state = STATE.NONE;\n    }\n\n    function onPointerCancel(event) {\n      removePointer(event);\n    }\n\n    function onMouseDown(event) {\n      let mouseAction;\n\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT;\n          break;\n\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE;\n          break;\n\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT;\n          break;\n\n        default:\n          mouseAction = -1;\n      }\n\n      switch (mouseAction) {\n        case MOUSE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseDownDolly(event);\n          state = STATE.DOLLY;\n          break;\n\n        case MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          } else {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          }\n\n          break;\n\n        case MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          } else {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          }\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n\n    function onMouseMove(event) {\n      if (scope.enabled === false) return;\n\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false) return;\n          handleMouseMoveRotate(event);\n          break;\n\n        case STATE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseMoveDolly(event);\n          break;\n\n        case STATE.PAN:\n          if (scope.enablePan === false) return;\n          handleMouseMovePan(event);\n          break;\n      }\n    }\n\n    function onMouseWheel(event) {\n      if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) {\n        return;\n      }\n\n      event.preventDefault();\n      scope.dispatchEvent(startEvent);\n      handleMouseWheel(event);\n      scope.dispatchEvent(endEvent);\n    }\n\n    function onKeyDown(event) {\n      if (scope.enabled === false || scope.enablePan === false) return;\n      handleKeyDown(event);\n    }\n\n    function onTouchStart(event) {\n      trackPointer(event);\n\n      switch (pointers.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case TOUCH.ROTATE:\n              if (scope.enableRotate === false) return;\n              handleTouchStartRotate();\n              state = STATE.TOUCH_ROTATE;\n              break;\n\n            case TOUCH.PAN:\n              if (scope.enablePan === false) return;\n              handleTouchStartPan();\n              state = STATE.TOUCH_PAN;\n              break;\n\n            default:\n              state = STATE.NONE;\n          }\n\n          break;\n\n        case 2:\n          switch (scope.touches.TWO) {\n            case TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false) return;\n              handleTouchStartDollyPan();\n              state = STATE.TOUCH_DOLLY_PAN;\n              break;\n\n            case TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false) return;\n              handleTouchStartDollyRotate();\n              state = STATE.TOUCH_DOLLY_ROTATE;\n              break;\n\n            default:\n              state = STATE.NONE;\n          }\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n\n    function onTouchMove(event) {\n      trackPointer(event);\n\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false) return;\n          handleTouchMoveRotate(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false) return;\n          handleTouchMovePan(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false) return;\n          handleTouchMoveDollyPan(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false) return;\n          handleTouchMoveDollyRotate(event);\n          scope.update();\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n    }\n\n    function onContextMenu(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault();\n    }\n\n    function addPointer(event) {\n      pointers.push(event);\n    }\n\n    function removePointer(event) {\n      delete pointerPositions[event.pointerId];\n\n      for (let i = 0; i < pointers.length; i++) {\n        if (pointers[i].pointerId == event.pointerId) {\n          pointers.splice(i, 1);\n          return;\n        }\n      }\n    }\n\n    function trackPointer(event) {\n      let position = pointerPositions[event.pointerId];\n\n      if (position === void 0) {\n        position = new Vector2();\n        pointerPositions[event.pointerId] = position;\n      }\n\n      position.set(event.pageX, event.pageY);\n    }\n\n    function getSecondPointerPosition(event) {\n      const pointer = event.pointerId === pointers[0].pointerId ? pointers[1] : pointers[0];\n      return pointerPositions[pointer.pointerId];\n    }\n\n    if (domElement !== void 0) this.connect(domElement);\n    this.update();\n  }\n\n}\n\nclass MapControls extends OrbitControls {\n  constructor(object, domElement) {\n    super(object, domElement);\n    this.screenSpacePanning = false;\n    this.mouseButtons.LEFT = MOUSE.PAN;\n    this.mouseButtons.RIGHT = MOUSE.ROTATE;\n    this.touches.ONE = TOUCH.PAN;\n    this.touches.TWO = TOUCH.DOLLY_ROTATE;\n  }\n\n}\n\nexport { MapControls, OrbitControls };","map":{"version":3,"sources":["/Users/theodaguier/Repositories/E-Do-Studio/node_modules/three-stdlib/controls/OrbitControls.js"],"names":["__defProp","Object","defineProperty","__defNormalProp","obj","key","value","enumerable","configurable","writable","__publicField","EventDispatcher","Vector3","MOUSE","TOUCH","Quaternion","Spherical","Vector2","PerspectiveCamera","OrthographicCamera","moduloWrapAround","offset","capacity","OrbitControls","constructor","object","domElement","Infinity","Math","PI","LEFT","UP","RIGHT","BOTTOM","ROTATE","MIDDLE","DOLLY","PAN","ONE","TWO","DOLLY_PAN","target0","target","clone","position0","position","zoom0","zoom","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","setPolarAngle","currentPhi","phiDist","abs","sphericalDelta","scope","update","setAzimuthalAngle","currentTheta","thetaDist","getDistance","distanceTo","listenToKeyEvents","domElement2","addEventListener","onKeyDown","_domElementKeyEvents","saveState","copy","reset","updateProjectionMatrix","dispatchEvent","changeEvent","state","STATE","NONE","quat","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","autoRotate","rotateLeft","getAutoRotationAngle","enableDamping","dampingFactor","min","minAzimuthAngle","max","maxAzimuthAngle","isFinite","minPolarAngle","maxPolarAngle","makeSafe","radius","scale","minDistance","maxDistance","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","connect","document","console","error","style","touchAction","onContextMenu","onPointerDown","onPointerCancel","onMouseWheel","dispose","_a","_b","_c","_d","_e","_f","removeEventListener","ownerDocument","onPointerMove","onPointerUp","type","startEvent","endEvent","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","autoRotateSpeed","getZoomScale","pow","zoomSpeed","angle","reverseOrbit","rotateUp","panLeft","v","panLeft2","distance","objectMatrix","setFromMatrixColumn","panUp","panUp2","screenSpacePanning","crossVectors","pan","pan2","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","warn","enablePan","dollyOut","dollyScale","minZoom","maxZoom","enableZoom","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","subVectors","rotateSpeed","x","y","handleMouseMoveDolly","handleMouseMovePan","panSpeed","handleMouseWheel","handleKeyDown","needsUpdate","code","keys","keyPanSpeed","preventDefault","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchStartDollyPan","handleTouchStartDollyRotate","enableRotate","handleTouchMoveRotate","getSecondPointerPosition","handleTouchMovePan","handleTouchMoveDolly","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","enabled","addPointer","pointerType","onTouchStart","onMouseDown","onTouchMove","onMouseMove","removePointer","releasePointerCapture","pointerId","mouseAction","button","mouseButtons","ctrlKey","metaKey","shiftKey","trackPointer","touches","DOLLY_ROTATE","push","i","splice","pointer","MapControls"],"mappings":"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","sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { EventDispatcher, Vector3, MOUSE, TOUCH, Quaternion, Spherical, Vector2, PerspectiveCamera, OrthographicCamera } from \"three\";\nconst moduloWrapAround = (offset, capacity) => (offset % capacity + capacity) % capacity;\nclass OrbitControls extends EventDispatcher {\n  constructor(object, domElement) {\n    super();\n    __publicField(this, \"object\");\n    __publicField(this, \"domElement\");\n    // Set to false to disable this control\n    __publicField(this, \"enabled\", true);\n    // \"target\" sets the location of focus, where the object orbits around\n    __publicField(this, \"target\", new Vector3());\n    // How far you can dolly in and out ( PerspectiveCamera only )\n    __publicField(this, \"minDistance\", 0);\n    __publicField(this, \"maxDistance\", Infinity);\n    // How far you can zoom in and out ( OrthographicCamera only )\n    __publicField(this, \"minZoom\", 0);\n    __publicField(this, \"maxZoom\", Infinity);\n    // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n    __publicField(this, \"minPolarAngle\", 0);\n    // radians\n    __publicField(this, \"maxPolarAngle\", Math.PI);\n    // radians\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n    __publicField(this, \"minAzimuthAngle\", -Infinity);\n    // radians\n    __publicField(this, \"maxAzimuthAngle\", Infinity);\n    // radians\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n    __publicField(this, \"enableDamping\", false);\n    __publicField(this, \"dampingFactor\", 0.05);\n    // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n    // Set to false to disable zooming\n    __publicField(this, \"enableZoom\", true);\n    __publicField(this, \"zoomSpeed\", 1);\n    // Set to false to disable rotating\n    __publicField(this, \"enableRotate\", true);\n    __publicField(this, \"rotateSpeed\", 1);\n    // Set to false to disable panning\n    __publicField(this, \"enablePan\", true);\n    __publicField(this, \"panSpeed\", 1);\n    __publicField(this, \"screenSpacePanning\", true);\n    // if false, pan orthogonal to world-space direction camera.up\n    __publicField(this, \"keyPanSpeed\", 7);\n    // pixels moved per arrow key push\n    // Set to true to automatically rotate around the target\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\n    __publicField(this, \"autoRotate\", false);\n    __publicField(this, \"autoRotateSpeed\", 2);\n    // 30 seconds per orbit when fps is 60\n    __publicField(this, \"reverseOrbit\", false);\n    // true if you want to reverse the orbit to mouse drag from left to right = orbits left\n    // The four arrow keys\n    __publicField(this, \"keys\", { LEFT: \"ArrowLeft\", UP: \"ArrowUp\", RIGHT: \"ArrowRight\", BOTTOM: \"ArrowDown\" });\n    // Mouse buttons\n    __publicField(this, \"mouseButtons\", {\n      LEFT: MOUSE.ROTATE,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.PAN\n    });\n    // Touch fingers\n    __publicField(this, \"touches\", { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN });\n    __publicField(this, \"target0\");\n    __publicField(this, \"position0\");\n    __publicField(this, \"zoom0\");\n    // the target DOM element for key events\n    __publicField(this, \"_domElementKeyEvents\", null);\n    __publicField(this, \"getPolarAngle\");\n    __publicField(this, \"getAzimuthalAngle\");\n    __publicField(this, \"setPolarAngle\");\n    __publicField(this, \"setAzimuthalAngle\");\n    __publicField(this, \"getDistance\");\n    __publicField(this, \"listenToKeyEvents\");\n    __publicField(this, \"saveState\");\n    __publicField(this, \"reset\");\n    __publicField(this, \"update\");\n    __publicField(this, \"connect\");\n    __publicField(this, \"dispose\");\n    this.object = object;\n    this.domElement = domElement;\n    this.target0 = this.target.clone();\n    this.position0 = this.object.position.clone();\n    this.zoom0 = this.object.zoom;\n    this.getPolarAngle = () => spherical.phi;\n    this.getAzimuthalAngle = () => spherical.theta;\n    this.setPolarAngle = (value) => {\n      let phi = moduloWrapAround(value, 2 * Math.PI);\n      let currentPhi = spherical.phi;\n      if (currentPhi < 0)\n        currentPhi += 2 * Math.PI;\n      if (phi < 0)\n        phi += 2 * Math.PI;\n      let phiDist = Math.abs(phi - currentPhi);\n      if (2 * Math.PI - phiDist < phiDist) {\n        if (phi < currentPhi) {\n          phi += 2 * Math.PI;\n        } else {\n          currentPhi += 2 * Math.PI;\n        }\n      }\n      sphericalDelta.phi = phi - currentPhi;\n      scope.update();\n    };\n    this.setAzimuthalAngle = (value) => {\n      let theta = moduloWrapAround(value, 2 * Math.PI);\n      let currentTheta = spherical.theta;\n      if (currentTheta < 0)\n        currentTheta += 2 * Math.PI;\n      if (theta < 0)\n        theta += 2 * Math.PI;\n      let thetaDist = Math.abs(theta - currentTheta);\n      if (2 * Math.PI - thetaDist < thetaDist) {\n        if (theta < currentTheta) {\n          theta += 2 * Math.PI;\n        } else {\n          currentTheta += 2 * Math.PI;\n        }\n      }\n      sphericalDelta.theta = theta - currentTheta;\n      scope.update();\n    };\n    this.getDistance = () => scope.object.position.distanceTo(scope.target);\n    this.listenToKeyEvents = (domElement2) => {\n      domElement2.addEventListener(\"keydown\", onKeyDown);\n      this._domElementKeyEvents = domElement2;\n    };\n    this.saveState = () => {\n      scope.target0.copy(scope.target);\n      scope.position0.copy(scope.object.position);\n      scope.zoom0 = scope.object.zoom;\n    };\n    this.reset = () => {\n      scope.target.copy(scope.target0);\n      scope.object.position.copy(scope.position0);\n      scope.object.zoom = scope.zoom0;\n      scope.object.updateProjectionMatrix();\n      scope.dispatchEvent(changeEvent);\n      scope.update();\n      state = STATE.NONE;\n    };\n    this.update = (() => {\n      const offset = new Vector3();\n      const quat = new Quaternion().setFromUnitVectors(object.up, new Vector3(0, 1, 0));\n      const quatInverse = quat.clone().invert();\n      const lastPosition = new Vector3();\n      const lastQuaternion = new Quaternion();\n      const twoPI = 2 * Math.PI;\n      return function update() {\n        const position = scope.object.position;\n        offset.copy(position).sub(scope.target);\n        offset.applyQuaternion(quat);\n        spherical.setFromVector3(offset);\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle());\n        }\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n        } else {\n          spherical.theta += sphericalDelta.theta;\n          spherical.phi += sphericalDelta.phi;\n        }\n        let min = scope.minAzimuthAngle;\n        let max = scope.maxAzimuthAngle;\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI)\n            min += twoPI;\n          else if (min > Math.PI)\n            min -= twoPI;\n          if (max < -Math.PI)\n            max += twoPI;\n          else if (max > Math.PI)\n            max -= twoPI;\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta));\n          } else {\n            spherical.theta = spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta);\n          }\n        }\n        spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n        spherical.makeSafe();\n        spherical.radius *= scale;\n        spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius));\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor);\n        } else {\n          scope.target.add(panOffset);\n        }\n        offset.setFromSpherical(spherical);\n        offset.applyQuaternion(quatInverse);\n        position.copy(scope.target).add(offset);\n        scope.object.lookAt(scope.target);\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\n          panOffset.multiplyScalar(1 - scope.dampingFactor);\n        } else {\n          sphericalDelta.set(0, 0, 0);\n          panOffset.set(0, 0, 0);\n        }\n        scale = 1;\n        if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n          scope.dispatchEvent(changeEvent);\n          lastPosition.copy(scope.object.position);\n          lastQuaternion.copy(scope.object.quaternion);\n          zoomChanged = false;\n          return true;\n        }\n        return false;\n      };\n    })();\n    this.connect = (domElement2) => {\n      if (domElement2 === document) {\n        console.error(\n          'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.'\n        );\n      }\n      scope.domElement = domElement2;\n      scope.domElement.style.touchAction = \"none\";\n      scope.domElement.addEventListener(\"contextmenu\", onContextMenu);\n      scope.domElement.addEventListener(\"pointerdown\", onPointerDown);\n      scope.domElement.addEventListener(\"pointercancel\", onPointerCancel);\n      scope.domElement.addEventListener(\"wheel\", onMouseWheel);\n    };\n    this.dispose = () => {\n      var _a, _b, _c, _d, _e, _f;\n      (_a = scope.domElement) == null ? void 0 : _a.removeEventListener(\"contextmenu\", onContextMenu);\n      (_b = scope.domElement) == null ? void 0 : _b.removeEventListener(\"pointerdown\", onPointerDown);\n      (_c = scope.domElement) == null ? void 0 : _c.removeEventListener(\"pointercancel\", onPointerCancel);\n      (_d = scope.domElement) == null ? void 0 : _d.removeEventListener(\"wheel\", onMouseWheel);\n      (_e = scope.domElement) == null ? void 0 : _e.ownerDocument.removeEventListener(\"pointermove\", onPointerMove);\n      (_f = scope.domElement) == null ? void 0 : _f.ownerDocument.removeEventListener(\"pointerup\", onPointerUp);\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener(\"keydown\", onKeyDown);\n      }\n    };\n    const scope = this;\n    const changeEvent = { type: \"change\" };\n    const startEvent = { type: \"start\" };\n    const endEvent = { type: \"end\" };\n    const STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6\n    };\n    let state = STATE.NONE;\n    const EPS = 1e-6;\n    const spherical = new Spherical();\n    const sphericalDelta = new Spherical();\n    let scale = 1;\n    const panOffset = new Vector3();\n    let zoomChanged = false;\n    const rotateStart = new Vector2();\n    const rotateEnd = new Vector2();\n    const rotateDelta = new Vector2();\n    const panStart = new Vector2();\n    const panEnd = new Vector2();\n    const panDelta = new Vector2();\n    const dollyStart = new Vector2();\n    const dollyEnd = new Vector2();\n    const dollyDelta = new Vector2();\n    const pointers = [];\n    const pointerPositions = {};\n    function getAutoRotationAngle() {\n      return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n    }\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed);\n    }\n    function rotateLeft(angle) {\n      if (scope.reverseOrbit) {\n        sphericalDelta.theta += angle;\n      } else {\n        sphericalDelta.theta -= angle;\n      }\n    }\n    function rotateUp(angle) {\n      if (scope.reverseOrbit) {\n        sphericalDelta.phi += angle;\n      } else {\n        sphericalDelta.phi -= angle;\n      }\n    }\n    const panLeft = (() => {\n      const v = new Vector3();\n      return function panLeft2(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0);\n        v.multiplyScalar(-distance);\n        panOffset.add(v);\n      };\n    })();\n    const panUp = (() => {\n      const v = new Vector3();\n      return function panUp2(distance, objectMatrix) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1);\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0);\n          v.crossVectors(scope.object.up, v);\n        }\n        v.multiplyScalar(distance);\n        panOffset.add(v);\n      };\n    })();\n    const pan = (() => {\n      const offset = new Vector3();\n      return function pan2(deltaX, deltaY) {\n        const element = scope.domElement;\n        if (element && scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n          const position = scope.object.position;\n          offset.copy(position).sub(scope.target);\n          let targetDistance = offset.length();\n          targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180);\n          panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n          panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n        } else if (element && scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n          panLeft(\n            deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth,\n            scope.object.matrix\n          );\n          panUp(\n            deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight,\n            scope.object.matrix\n          );\n        } else {\n          console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.\");\n          scope.enablePan = false;\n        }\n      };\n    })();\n    function dollyOut(dollyScale) {\n      if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n        scale /= dollyScale;\n      } else if (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\");\n        scope.enableZoom = false;\n      }\n    }\n    function dollyIn(dollyScale) {\n      if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n        scale *= dollyScale;\n      } else if (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\");\n        scope.enableZoom = false;\n      }\n    }\n    function handleMouseDownRotate(event) {\n      rotateStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseDownDolly(event) {\n      dollyStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseDownPan(event) {\n      panStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseMoveRotate(event) {\n      rotateEnd.set(event.clientX, event.clientY);\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight);\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n      rotateStart.copy(rotateEnd);\n      scope.update();\n    }\n    function handleMouseMoveDolly(event) {\n      dollyEnd.set(event.clientX, event.clientY);\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale());\n      }\n      dollyStart.copy(dollyEnd);\n      scope.update();\n    }\n    function handleMouseMovePan(event) {\n      panEnd.set(event.clientX, event.clientY);\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n      scope.update();\n    }\n    function handleMouseWheel(event) {\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale());\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale());\n      }\n      scope.update();\n    }\n    function handleKeyDown(event) {\n      let needsUpdate = false;\n      switch (event.code) {\n        case scope.keys.UP:\n          pan(0, scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n        case scope.keys.LEFT:\n          pan(scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n        case scope.keys.RIGHT:\n          pan(-scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n      }\n      if (needsUpdate) {\n        event.preventDefault();\n        scope.update();\n      }\n    }\n    function handleTouchStartRotate() {\n      if (pointers.length == 1) {\n        rotateStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        rotateStart.set(x, y);\n      }\n    }\n    function handleTouchStartPan() {\n      if (pointers.length == 1) {\n        panStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        panStart.set(x, y);\n      }\n    }\n    function handleTouchStartDolly() {\n      const dx = pointers[0].pageX - pointers[1].pageX;\n      const dy = pointers[0].pageY - pointers[1].pageY;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyStart.set(0, distance);\n    }\n    function handleTouchStartDollyPan() {\n      if (scope.enableZoom)\n        handleTouchStartDolly();\n      if (scope.enablePan)\n        handleTouchStartPan();\n    }\n    function handleTouchStartDollyRotate() {\n      if (scope.enableZoom)\n        handleTouchStartDolly();\n      if (scope.enableRotate)\n        handleTouchStartRotate();\n    }\n    function handleTouchMoveRotate(event) {\n      if (pointers.length == 1) {\n        rotateEnd.set(event.pageX, event.pageY);\n      } else {\n        const position = getSecondPointerPosition(event);\n        const x = 0.5 * (event.pageX + position.x);\n        const y = 0.5 * (event.pageY + position.y);\n        rotateEnd.set(x, y);\n      }\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight);\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n      rotateStart.copy(rotateEnd);\n    }\n    function handleTouchMovePan(event) {\n      if (pointers.length == 1) {\n        panEnd.set(event.pageX, event.pageY);\n      } else {\n        const position = getSecondPointerPosition(event);\n        const x = 0.5 * (event.pageX + position.x);\n        const y = 0.5 * (event.pageY + position.y);\n        panEnd.set(x, y);\n      }\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n    }\n    function handleTouchMoveDolly(event) {\n      const position = getSecondPointerPosition(event);\n      const dx = event.pageX - position.x;\n      const dy = event.pageY - position.y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyEnd.set(0, distance);\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n      dollyOut(dollyDelta.y);\n      dollyStart.copy(dollyEnd);\n    }\n    function handleTouchMoveDollyPan(event) {\n      if (scope.enableZoom)\n        handleTouchMoveDolly(event);\n      if (scope.enablePan)\n        handleTouchMovePan(event);\n    }\n    function handleTouchMoveDollyRotate(event) {\n      if (scope.enableZoom)\n        handleTouchMoveDolly(event);\n      if (scope.enableRotate)\n        handleTouchMoveRotate(event);\n    }\n    function onPointerDown(event) {\n      var _a, _b;\n      if (scope.enabled === false)\n        return;\n      if (pointers.length === 0) {\n        (_a = scope.domElement) == null ? void 0 : _a.ownerDocument.addEventListener(\"pointermove\", onPointerMove);\n        (_b = scope.domElement) == null ? void 0 : _b.ownerDocument.addEventListener(\"pointerup\", onPointerUp);\n      }\n      addPointer(event);\n      if (event.pointerType === \"touch\") {\n        onTouchStart(event);\n      } else {\n        onMouseDown(event);\n      }\n    }\n    function onPointerMove(event) {\n      if (scope.enabled === false)\n        return;\n      if (event.pointerType === \"touch\") {\n        onTouchMove(event);\n      } else {\n        onMouseMove(event);\n      }\n    }\n    function onPointerUp(event) {\n      var _a, _b, _c;\n      removePointer(event);\n      if (pointers.length === 0) {\n        (_a = scope.domElement) == null ? void 0 : _a.releasePointerCapture(event.pointerId);\n        (_b = scope.domElement) == null ? void 0 : _b.ownerDocument.removeEventListener(\"pointermove\", onPointerMove);\n        (_c = scope.domElement) == null ? void 0 : _c.ownerDocument.removeEventListener(\"pointerup\", onPointerUp);\n      }\n      scope.dispatchEvent(endEvent);\n      state = STATE.NONE;\n    }\n    function onPointerCancel(event) {\n      removePointer(event);\n    }\n    function onMouseDown(event) {\n      let mouseAction;\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT;\n          break;\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE;\n          break;\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT;\n          break;\n        default:\n          mouseAction = -1;\n      }\n      switch (mouseAction) {\n        case MOUSE.DOLLY:\n          if (scope.enableZoom === false)\n            return;\n          handleMouseDownDolly(event);\n          state = STATE.DOLLY;\n          break;\n        case MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false)\n              return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          } else {\n            if (scope.enableRotate === false)\n              return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          }\n          break;\n        case MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false)\n              return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          } else {\n            if (scope.enablePan === false)\n              return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          }\n          break;\n        default:\n          state = STATE.NONE;\n      }\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n    function onMouseMove(event) {\n      if (scope.enabled === false)\n        return;\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false)\n            return;\n          handleMouseMoveRotate(event);\n          break;\n        case STATE.DOLLY:\n          if (scope.enableZoom === false)\n            return;\n          handleMouseMoveDolly(event);\n          break;\n        case STATE.PAN:\n          if (scope.enablePan === false)\n            return;\n          handleMouseMovePan(event);\n          break;\n      }\n    }\n    function onMouseWheel(event) {\n      if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) {\n        return;\n      }\n      event.preventDefault();\n      scope.dispatchEvent(startEvent);\n      handleMouseWheel(event);\n      scope.dispatchEvent(endEvent);\n    }\n    function onKeyDown(event) {\n      if (scope.enabled === false || scope.enablePan === false)\n        return;\n      handleKeyDown(event);\n    }\n    function onTouchStart(event) {\n      trackPointer(event);\n      switch (pointers.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case TOUCH.ROTATE:\n              if (scope.enableRotate === false)\n                return;\n              handleTouchStartRotate();\n              state = STATE.TOUCH_ROTATE;\n              break;\n            case TOUCH.PAN:\n              if (scope.enablePan === false)\n                return;\n              handleTouchStartPan();\n              state = STATE.TOUCH_PAN;\n              break;\n            default:\n              state = STATE.NONE;\n          }\n          break;\n        case 2:\n          switch (scope.touches.TWO) {\n            case TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false)\n                return;\n              handleTouchStartDollyPan();\n              state = STATE.TOUCH_DOLLY_PAN;\n              break;\n            case TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false)\n                return;\n              handleTouchStartDollyRotate();\n              state = STATE.TOUCH_DOLLY_ROTATE;\n              break;\n            default:\n              state = STATE.NONE;\n          }\n          break;\n        default:\n          state = STATE.NONE;\n      }\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n    function onTouchMove(event) {\n      trackPointer(event);\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false)\n            return;\n          handleTouchMoveRotate(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false)\n            return;\n          handleTouchMovePan(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false)\n            return;\n          handleTouchMoveDollyPan(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false)\n            return;\n          handleTouchMoveDollyRotate(event);\n          scope.update();\n          break;\n        default:\n          state = STATE.NONE;\n      }\n    }\n    function onContextMenu(event) {\n      if (scope.enabled === false)\n        return;\n      event.preventDefault();\n    }\n    function addPointer(event) {\n      pointers.push(event);\n    }\n    function removePointer(event) {\n      delete pointerPositions[event.pointerId];\n      for (let i = 0; i < pointers.length; i++) {\n        if (pointers[i].pointerId == event.pointerId) {\n          pointers.splice(i, 1);\n          return;\n        }\n      }\n    }\n    function trackPointer(event) {\n      let position = pointerPositions[event.pointerId];\n      if (position === void 0) {\n        position = new Vector2();\n        pointerPositions[event.pointerId] = position;\n      }\n      position.set(event.pageX, event.pageY);\n    }\n    function getSecondPointerPosition(event) {\n      const pointer = event.pointerId === pointers[0].pointerId ? pointers[1] : pointers[0];\n      return pointerPositions[pointer.pointerId];\n    }\n    if (domElement !== void 0)\n      this.connect(domElement);\n    this.update();\n  }\n}\nclass MapControls extends OrbitControls {\n  constructor(object, domElement) {\n    super(object, domElement);\n    this.screenSpacePanning = false;\n    this.mouseButtons.LEFT = MOUSE.PAN;\n    this.mouseButtons.RIGHT = MOUSE.ROTATE;\n    this.touches.ONE = TOUCH.PAN;\n    this.touches.TWO = TOUCH.DOLLY_ROTATE;\n  }\n}\nexport {\n  MapControls,\n  OrbitControls\n};\n"]},"metadata":{},"sourceType":"module"}