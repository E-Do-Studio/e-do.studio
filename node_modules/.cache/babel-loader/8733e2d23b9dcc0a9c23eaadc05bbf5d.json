{"ast":null,"code":"var _jsxFileName = \"/Users/theodaguier/e-do/src/Components/Index/Services2/textes.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useMediaQuery } from \"@react-hook/media-query\";\nimport anime from \"animejs/lib/anime.es.js\";\nimport { useViewport } from \"../../../Hooks/viewportProvider\";\nimport ButtonRond from \"./boutonRond\";\nimport \"./textes.scss\";\nimport i18next from \"i18next\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst splitLines = (container, opentag, closingtag) => {\n  var spans = container.children,\n      top = 0,\n      tmp = \"\"; // Put spans on each word, for now we use the <n> tag because, we want to save 5 bytes:)\n\n  container.innerHTML = container.textContent.replace(/\\S+/g, \"<n>$&</n>\");\n  let ligne = 0; // Loop through each words (spans)\n\n  for (let i = 0; i < spans.length; i++) {\n    // Get the height of each word\n    var rect = spans[i].getBoundingClientRect().top; // If top is different as the last height of the word use a closingtag and use an opentag after that\n\n    if (top < rect) {\n      ligne++;\n\n      if (ligne == 1) {\n        tmp += opentag;\n      } else {\n        tmp += closingtag + opentag;\n      }\n    }\n\n    top = rect; // Add the spans + space between each word\n\n    tmp += spans[i].textContent + \" \";\n  } // Add the lines back to the paragraph\n\n\n  container.innerHTML = tmp += closingtag;\n};\n\nconst Textes = ({\n  titre,\n  texte,\n  AnimationBloc3\n}) => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation(\"services\");\n  const matches = useMediaQuery(\"only screen and (min-width: 1150px)\"); //Force le rendu après le redimensionnement de l'écran\n\n  const windowSize = useViewport();\n  const [windowSizeState, setWindowSizeState] = useState({\n    width: windowSize.width,\n    height: windowSize.height\n  });\n  const [CalculLigne, setCalculLigne] = useState(false);\n  useEffect(() => {\n    if (document.querySelector(\"#text21\") && !CalculLigne) {\n      splitLines(document.querySelector(\"#text21\"), '<span class=\"ligneServices2\"><span class=\"sousligneServices2\">', \"</span></span>\");\n      splitLines(document.querySelector(\"#text22\"), '<span class=\"ligneServices2\"><span class=\"sousligneServices2\">', \"</span></span>\");\n      setCalculLigne(true);\n    }\n\n    if (windowSize.width !== windowSizeState.width || windowSize.height !== windowSizeState.height) {\n      setWindowSizeState({\n        width: windowSize.width,\n        height: windowSize.height\n      });\n\n      if (document.querySelector(\"#text21\")) {\n        splitLines(document.querySelector(\"#text21\"), '<span class=\"ligneServices2\"><span class=\"sousligneServices2\">', \"</span></span>\");\n        splitLines(document.querySelector(\"#text22\"), '<span class=\"ligneServices2\"><span class=\"sousligneServices2\">', \"</span></span>\");\n        let sousligneServices = document.querySelectorAll(\".sousligneServices2\");\n        let servicesTitreSousLigne = document.querySelectorAll(\".servicesTitreSousLigne2\");\n        sousligneServices.forEach(element => {\n          element.style.opacity = 1;\n        });\n        servicesTitreSousLigne.forEach(element => {\n          element.style.opacity = 1;\n        });\n      }\n    }\n  }); // Animation du texte\n\n  useEffect(() => {\n    if (AnimationBloc3) {\n      anime({\n        targets: \".sousligneServices2\",\n        translateY: [1000, 0],\n        easing: \"easeOutExpo\",\n        duration: 1200,\n        delay: (el, i) => 70 * i\n      });\n      anime({\n        targets: \".servicesTitreSousLigne2\",\n        translateY: [1000, 0],\n        easing: \"easeOutExpo\",\n        duration: 1500,\n        delay: 0\n      });\n      let sousligneServices = document.querySelectorAll(\".sousligneServices2\");\n      let servicesTitreSousLigne = document.querySelectorAll(\".servicesTitreSousLigne2\");\n      sousligneServices.forEach(element => {\n        element.style.opacity = 1;\n      });\n      servicesTitreSousLigne.forEach(element => {\n        element.style.opacity = 1;\n      });\n    }\n  }, [AnimationBloc3]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"servicesTextes2\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"servicesTitreLigne2\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"servicesTitreSousLigne2\",\n          children: titre[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"servicesTitreLigne2\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"servicesTitreSousLigne2\",\n          children: titre[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), !matches ? /*#__PURE__*/_jsxDEV(ButtonRond, {\n        AnimationBloc3: AnimationBloc3,\n        children: t(\"Tarifs\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paragraphes\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"text21\",\n        children: texte[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"text22\",\n        children: texte[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), matches ? /*#__PURE__*/_jsxDEV(ButtonRond, {\n        AnimationBloc3: AnimationBloc3,\n        children: t(\"Prices\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Textes, \"RoIKA3O/MD2a6NZCfk2nth3IB8o=\", false, function () {\n  return [useTranslation, useMediaQuery, useViewport];\n});\n\n_c = Textes;\nexport default Textes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Textes\");","map":{"version":3,"sources":["/Users/theodaguier/e-do/src/Components/Index/Services2/textes.jsx"],"names":["React","useEffect","useState","useMediaQuery","anime","useViewport","ButtonRond","i18next","useTranslation","splitLines","container","opentag","closingtag","spans","children","top","tmp","innerHTML","textContent","replace","ligne","i","length","rect","getBoundingClientRect","Textes","titre","texte","AnimationBloc3","t","i18n","matches","windowSize","windowSizeState","setWindowSizeState","width","height","CalculLigne","setCalculLigne","document","querySelector","sousligneServices","querySelectorAll","servicesTitreSousLigne","forEach","element","style","opacity","targets","translateY","easing","duration","delay","el"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useMediaQuery } from \"@react-hook/media-query\";\nimport anime from \"animejs/lib/anime.es.js\";\n\nimport { useViewport } from \"../../../Hooks/viewportProvider\";\n\nimport ButtonRond from \"./boutonRond\";\n\nimport \"./textes.scss\";\n\nimport i18next from \"i18next\";\nimport { useTranslation } from \"react-i18next\";\n\nconst splitLines = (container, opentag, closingtag) => {\n  var spans = container.children,\n    top = 0,\n    tmp = \"\";\n  // Put spans on each word, for now we use the <n> tag because, we want to save 5 bytes:)\n  container.innerHTML = container.textContent.replace(/\\S+/g, \"<n>$&</n>\");\n  let ligne = 0;\n  // Loop through each words (spans)\n  for (let i = 0; i < spans.length; i++) {\n    // Get the height of each word\n    var rect = spans[i].getBoundingClientRect().top;\n    // If top is different as the last height of the word use a closingtag and use an opentag after that\n    if (top < rect) {\n      ligne++;\n      if (ligne == 1) {\n        tmp += opentag;\n      } else {\n        tmp += closingtag + opentag;\n      }\n    }\n    top = rect;\n    // Add the spans + space between each word\n    tmp += spans[i].textContent + \" \";\n  }\n\n  // Add the lines back to the paragraph\n  container.innerHTML = tmp += closingtag;\n};\n\nconst Textes = ({ titre, texte, AnimationBloc3 }) => {\n  const { t, i18n } = useTranslation(\"services\");\n  const matches = useMediaQuery(\"only screen and (min-width: 1150px)\");\n\n  //Force le rendu après le redimensionnement de l'écran\n  const windowSize = useViewport();\n  const [windowSizeState, setWindowSizeState] = useState({\n    width: windowSize.width,\n    height: windowSize.height,\n  });\n  const [CalculLigne, setCalculLigne] = useState(false);\n\n  useEffect(() => {\n    if (document.querySelector(\"#text21\") && !CalculLigne) {\n      splitLines(\n        document.querySelector(\"#text21\"),\n        '<span class=\"ligneServices2\"><span class=\"sousligneServices2\">',\n        \"</span></span>\"\n      );\n      splitLines(\n        document.querySelector(\"#text22\"),\n        '<span class=\"ligneServices2\"><span class=\"sousligneServices2\">',\n        \"</span></span>\"\n      );\n      setCalculLigne(true);\n    }\n\n    if (\n      windowSize.width !== windowSizeState.width ||\n      windowSize.height !== windowSizeState.height\n    ) {\n      setWindowSizeState({\n        width: windowSize.width,\n        height: windowSize.height,\n      });\n\n      if (document.querySelector(\"#text21\")) {\n        splitLines(\n          document.querySelector(\"#text21\"),\n          '<span class=\"ligneServices2\"><span class=\"sousligneServices2\">',\n          \"</span></span>\"\n        );\n        splitLines(\n          document.querySelector(\"#text22\"),\n          '<span class=\"ligneServices2\"><span class=\"sousligneServices2\">',\n          \"</span></span>\"\n        );\n        let sousligneServices = document.querySelectorAll(\n          \".sousligneServices2\"\n        );\n        let servicesTitreSousLigne = document.querySelectorAll(\n          \".servicesTitreSousLigne2\"\n        );\n\n        sousligneServices.forEach((element) => {\n          element.style.opacity = 1;\n        });\n\n        servicesTitreSousLigne.forEach((element) => {\n          element.style.opacity = 1;\n        });\n      }\n    }\n  });\n\n  // Animation du texte\n  useEffect(() => {\n    if (AnimationBloc3) {\n      anime({\n        targets: \".sousligneServices2\",\n        translateY: [1000, 0],\n        easing: \"easeOutExpo\",\n        duration: 1200,\n        delay: (el, i) => 70 * i,\n      });\n\n      anime({\n        targets: \".servicesTitreSousLigne2\",\n        translateY: [1000, 0],\n        easing: \"easeOutExpo\",\n        duration: 1500,\n        delay: 0,\n      });\n\n      let sousligneServices = document.querySelectorAll(\".sousligneServices2\");\n      let servicesTitreSousLigne = document.querySelectorAll(\n        \".servicesTitreSousLigne2\"\n      );\n\n      sousligneServices.forEach((element) => {\n        element.style.opacity = 1;\n      });\n\n      servicesTitreSousLigne.forEach((element) => {\n        element.style.opacity = 1;\n      });\n    }\n  }, [AnimationBloc3]);\n\n  return (\n    <div className=\"servicesTextes2\">\n      <h1>\n        <span className=\"servicesTitreLigne2\">\n          <span className=\"servicesTitreSousLigne2\">{titre[0]}</span>\n        </span>\n        <span className=\"servicesTitreLigne2\">\n          <span className=\"servicesTitreSousLigne2\">{titre[1]}</span>\n        </span>\n        {!matches ? (\n          <ButtonRond AnimationBloc3={AnimationBloc3}>{t(\"Tarifs\")}</ButtonRond>\n        ) : (\n          \"\"\n        )}\n      </h1>\n      <div className=\"paragraphes\">\n        <p id=\"text21\">{texte[0]}</p>\n        <p id=\"text22\">{texte[1]}</p>\n\n        {matches ? (\n          <ButtonRond AnimationBloc3={AnimationBloc3}>{t(\"Prices\")}</ButtonRond>\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Textes;\n"]},"metadata":{},"sourceType":"module"}