{"ast":null,"code":"var __defProp = Object.defineProperty;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n  return value;\n};\n\nimport { EventDispatcher, Vector3, Euler, Quaternion, MathUtils } from \"three\";\n\nclass DeviceOrientationControls extends EventDispatcher {\n  // radians\n  constructor(object) {\n    super();\n\n    __publicField(this, \"object\");\n\n    __publicField(this, \"changeEvent\", {\n      type: \"change\"\n    });\n\n    __publicField(this, \"EPS\", 1e-6);\n\n    __publicField(this, \"enabled\", true);\n\n    __publicField(this, \"deviceOrientation\", {\n      alpha: 0,\n      beta: 0,\n      gamma: 0\n    });\n\n    __publicField(this, \"screenOrientation\", 0);\n\n    __publicField(this, \"alphaOffset\", 0);\n\n    __publicField(this, \"onDeviceOrientationChangeEvent\", event => {\n      this.deviceOrientation = event;\n    });\n\n    __publicField(this, \"onScreenOrientationChangeEvent\", () => {\n      this.screenOrientation = window.orientation || 0;\n    }); // The angles alpha, beta and gamma form a set of intrinsic Tait-Bryan angles of type Z-X'-Y''\n\n\n    __publicField(this, \"zee\", new Vector3(0, 0, 1));\n\n    __publicField(this, \"euler\", new Euler());\n\n    __publicField(this, \"q0\", new Quaternion());\n\n    __publicField(this, \"q1\", new Quaternion(-Math.sqrt(0.5), 0, 0, Math.sqrt(0.5))); // - PI/2 around the x-axis\n\n\n    __publicField(this, \"setObjectQuaternion\", (quaternion, alpha, beta, gamma, orient) => {\n      this.euler.set(beta, alpha, -gamma, \"YXZ\");\n      quaternion.setFromEuler(this.euler);\n      quaternion.multiply(this.q1);\n      quaternion.multiply(this.q0.setFromAxisAngle(this.zee, -orient));\n    });\n\n    __publicField(this, \"connect\", () => {\n      this.onScreenOrientationChangeEvent();\n\n      if (window.DeviceOrientationEvent !== void 0 && // @ts-ignore\n      typeof window.DeviceOrientationEvent.requestPermission === \"function\") {\n        window.DeviceOrientationEvent.requestPermission().then(response => {\n          if (response == \"granted\") {\n            window.addEventListener(\"orientationchange\", this.onScreenOrientationChangeEvent);\n            window.addEventListener(\"deviceorientation\", this.onDeviceOrientationChangeEvent);\n          }\n        }).catch(error => {\n          console.error(\"THREE.DeviceOrientationControls: Unable to use DeviceOrientation API:\", error);\n        });\n      } else {\n        window.addEventListener(\"orientationchange\", this.onScreenOrientationChangeEvent);\n        window.addEventListener(\"deviceorientation\", this.onDeviceOrientationChangeEvent);\n      }\n\n      this.enabled = true;\n    });\n\n    __publicField(this, \"disconnect\", () => {\n      window.removeEventListener(\"orientationchange\", this.onScreenOrientationChangeEvent);\n      window.removeEventListener(\"deviceorientation\", this.onDeviceOrientationChangeEvent);\n      this.enabled = false;\n    });\n\n    __publicField(this, \"lastQuaternion\", new Quaternion());\n\n    __publicField(this, \"update\", () => {\n      if (this.enabled === false) return;\n      const device = this.deviceOrientation;\n\n      if (device) {\n        const alpha = device.alpha ? MathUtils.degToRad(device.alpha) + this.alphaOffset : 0;\n        const beta = device.beta ? MathUtils.degToRad(device.beta) : 0;\n        const gamma = device.gamma ? MathUtils.degToRad(device.gamma) : 0;\n        const orient = this.screenOrientation ? MathUtils.degToRad(this.screenOrientation) : 0;\n        this.setObjectQuaternion(this.object.quaternion, alpha, beta, gamma, orient);\n\n        if (8 * (1 - this.lastQuaternion.dot(this.object.quaternion)) > this.EPS) {\n          this.lastQuaternion.copy(this.object.quaternion);\n          this.dispatchEvent(this.changeEvent);\n        }\n      }\n    });\n\n    __publicField(this, \"dispose\", () => this.disconnect());\n\n    this.object = object;\n    this.object.rotation.reorder(\"YXZ\");\n    this.connect();\n  }\n\n}\n\nexport { DeviceOrientationControls };","map":{"version":3,"sources":["/Users/theodaguier/Developer/old/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/three-stdlib/controls/DeviceOrientationControls.js"],"names":["__defProp","Object","defineProperty","__defNormalProp","obj","key","value","enumerable","configurable","writable","__publicField","EventDispatcher","Vector3","Euler","Quaternion","MathUtils","DeviceOrientationControls","constructor","object","type","alpha","beta","gamma","event","deviceOrientation","screenOrientation","window","orientation","Math","sqrt","quaternion","orient","euler","set","setFromEuler","multiply","q1","q0","setFromAxisAngle","zee","onScreenOrientationChangeEvent","DeviceOrientationEvent","requestPermission","then","response","addEventListener","onDeviceOrientationChangeEvent","catch","error","console","enabled","removeEventListener","device","degToRad","alphaOffset","setObjectQuaternion","lastQuaternion","dot","EPS","copy","dispatchEvent","changeEvent","disconnect","rotation","reorder","connect"],"mappings":"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","sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { EventDispatcher, Vector3, Euler, Quaternion, MathUtils } from \"three\";\nclass DeviceOrientationControls extends EventDispatcher {\n  // radians\n  constructor(object) {\n    super();\n    __publicField(this, \"object\");\n    __publicField(this, \"changeEvent\", { type: \"change\" });\n    __publicField(this, \"EPS\", 1e-6);\n    __publicField(this, \"enabled\", true);\n    __publicField(this, \"deviceOrientation\", { alpha: 0, beta: 0, gamma: 0 });\n    __publicField(this, \"screenOrientation\", 0);\n    __publicField(this, \"alphaOffset\", 0);\n    __publicField(this, \"onDeviceOrientationChangeEvent\", (event) => {\n      this.deviceOrientation = event;\n    });\n    __publicField(this, \"onScreenOrientationChangeEvent\", () => {\n      this.screenOrientation = window.orientation || 0;\n    });\n    // The angles alpha, beta and gamma form a set of intrinsic Tait-Bryan angles of type Z-X'-Y''\n    __publicField(this, \"zee\", new Vector3(0, 0, 1));\n    __publicField(this, \"euler\", new Euler());\n    __publicField(this, \"q0\", new Quaternion());\n    __publicField(this, \"q1\", new Quaternion(-Math.sqrt(0.5), 0, 0, Math.sqrt(0.5)));\n    // - PI/2 around the x-axis\n    __publicField(this, \"setObjectQuaternion\", (quaternion, alpha, beta, gamma, orient) => {\n      this.euler.set(beta, alpha, -gamma, \"YXZ\");\n      quaternion.setFromEuler(this.euler);\n      quaternion.multiply(this.q1);\n      quaternion.multiply(this.q0.setFromAxisAngle(this.zee, -orient));\n    });\n    __publicField(this, \"connect\", () => {\n      this.onScreenOrientationChangeEvent();\n      if (window.DeviceOrientationEvent !== void 0 && // @ts-ignore\n      typeof window.DeviceOrientationEvent.requestPermission === \"function\") {\n        window.DeviceOrientationEvent.requestPermission().then((response) => {\n          if (response == \"granted\") {\n            window.addEventListener(\"orientationchange\", this.onScreenOrientationChangeEvent);\n            window.addEventListener(\"deviceorientation\", this.onDeviceOrientationChangeEvent);\n          }\n        }).catch((error) => {\n          console.error(\"THREE.DeviceOrientationControls: Unable to use DeviceOrientation API:\", error);\n        });\n      } else {\n        window.addEventListener(\"orientationchange\", this.onScreenOrientationChangeEvent);\n        window.addEventListener(\"deviceorientation\", this.onDeviceOrientationChangeEvent);\n      }\n      this.enabled = true;\n    });\n    __publicField(this, \"disconnect\", () => {\n      window.removeEventListener(\"orientationchange\", this.onScreenOrientationChangeEvent);\n      window.removeEventListener(\"deviceorientation\", this.onDeviceOrientationChangeEvent);\n      this.enabled = false;\n    });\n    __publicField(this, \"lastQuaternion\", new Quaternion());\n    __publicField(this, \"update\", () => {\n      if (this.enabled === false)\n        return;\n      const device = this.deviceOrientation;\n      if (device) {\n        const alpha = device.alpha ? MathUtils.degToRad(device.alpha) + this.alphaOffset : 0;\n        const beta = device.beta ? MathUtils.degToRad(device.beta) : 0;\n        const gamma = device.gamma ? MathUtils.degToRad(device.gamma) : 0;\n        const orient = this.screenOrientation ? MathUtils.degToRad(this.screenOrientation) : 0;\n        this.setObjectQuaternion(this.object.quaternion, alpha, beta, gamma, orient);\n        if (8 * (1 - this.lastQuaternion.dot(this.object.quaternion)) > this.EPS) {\n          this.lastQuaternion.copy(this.object.quaternion);\n          this.dispatchEvent(this.changeEvent);\n        }\n      }\n    });\n    __publicField(this, \"dispose\", () => this.disconnect());\n    this.object = object;\n    this.object.rotation.reorder(\"YXZ\");\n    this.connect();\n  }\n}\nexport {\n  DeviceOrientationControls\n};\n"]},"metadata":{},"sourceType":"module"}