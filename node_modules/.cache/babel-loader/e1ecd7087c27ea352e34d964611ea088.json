{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { forwardRef, useMemo, useEffect } from 'react';\nimport { OrbitControls as OrbitControls$1 } from 'three-stdlib';\nconst OrbitControls = /*#__PURE__*/forwardRef(({\n  makeDefault,\n  camera,\n  regress,\n  domElement,\n  enableDamping = true,\n  onChange,\n  onStart,\n  onEnd,\n  ...restProps\n}, ref) => {\n  const invalidate = useThree(({\n    invalidate\n  }) => invalidate);\n  const defaultCamera = useThree(({\n    camera\n  }) => camera);\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const events = useThree(({\n    events\n  }) => events);\n  const set = useThree(({\n    set\n  }) => set);\n  const get = useThree(({\n    get\n  }) => get);\n  const performance = useThree(({\n    performance\n  }) => performance);\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || (typeof events.connected !== 'boolean' ? events.connected : gl.domElement);\n  const controls = useMemo(() => new OrbitControls$1(explCamera), [explCamera]);\n  useFrame(() => {\n    if (controls.enabled) controls.update();\n  });\n  useEffect(() => {\n    const callback = e => {\n      invalidate();\n      if (regress) performance.regress();\n      if (onChange) onChange(e);\n    };\n\n    controls.connect(explDomElement);\n    controls.addEventListener('change', callback);\n    if (onStart) controls.addEventListener('start', onStart);\n    if (onEnd) controls.addEventListener('end', onEnd);\n    return () => {\n      controls.removeEventListener('change', callback);\n      if (onStart) controls.removeEventListener('start', onStart);\n      if (onEnd) controls.removeEventListener('end', onEnd);\n      controls.dispose();\n    };\n  }, [explDomElement, onChange, onStart, onEnd, regress, controls, invalidate]);\n  useEffect(() => {\n    if (makeDefault) {\n      // @ts-expect-error new in @react-three/fiber@7.0.5\n      const old = get().controls; // @ts-expect-error new in @react-three/fiber@7.0.5\n\n      set({\n        controls\n      }); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls,\n    enableDamping: enableDamping\n  }, restProps));\n});\nexport { OrbitControls };","map":{"version":3,"sources":["/Users/theodaguier/_workdir/dev/pro/e-do/clone/E-Do-Studio/node_modules/@react-three/drei/core/OrbitControls.js"],"names":["_extends","useThree","useFrame","React","forwardRef","useMemo","useEffect","OrbitControls","OrbitControls$1","makeDefault","camera","regress","domElement","enableDamping","onChange","onStart","onEnd","restProps","ref","invalidate","defaultCamera","gl","events","set","get","performance","explCamera","explDomElement","connected","controls","enabled","update","callback","e","connect","addEventListener","removeEventListener","dispose","old","createElement","object"],"mappings":"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","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { forwardRef, useMemo, useEffect } from 'react';\nimport { OrbitControls as OrbitControls$1 } from 'three-stdlib';\n\nconst OrbitControls = /*#__PURE__*/forwardRef(({\n  makeDefault,\n  camera,\n  regress,\n  domElement,\n  enableDamping = true,\n  onChange,\n  onStart,\n  onEnd,\n  ...restProps\n}, ref) => {\n  const invalidate = useThree(({\n    invalidate\n  }) => invalidate);\n  const defaultCamera = useThree(({\n    camera\n  }) => camera);\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const events = useThree(({\n    events\n  }) => events);\n  const set = useThree(({\n    set\n  }) => set);\n  const get = useThree(({\n    get\n  }) => get);\n  const performance = useThree(({\n    performance\n  }) => performance);\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || (typeof events.connected !== 'boolean' ? events.connected : gl.domElement);\n  const controls = useMemo(() => new OrbitControls$1(explCamera), [explCamera]);\n  useFrame(() => {\n    if (controls.enabled) controls.update();\n  });\n  useEffect(() => {\n    const callback = e => {\n      invalidate();\n      if (regress) performance.regress();\n      if (onChange) onChange(e);\n    };\n\n    controls.connect(explDomElement);\n    controls.addEventListener('change', callback);\n    if (onStart) controls.addEventListener('start', onStart);\n    if (onEnd) controls.addEventListener('end', onEnd);\n    return () => {\n      controls.removeEventListener('change', callback);\n      if (onStart) controls.removeEventListener('start', onStart);\n      if (onEnd) controls.removeEventListener('end', onEnd);\n      controls.dispose();\n    };\n  }, [explDomElement, onChange, onStart, onEnd, regress, controls, invalidate]);\n  useEffect(() => {\n    if (makeDefault) {\n      // @ts-expect-error new in @react-three/fiber@7.0.5\n      const old = get().controls; // @ts-expect-error new in @react-three/fiber@7.0.5\n\n      set({\n        controls\n      }); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls,\n    enableDamping: enableDamping\n  }, restProps));\n});\n\nexport { OrbitControls };\n"]},"metadata":{},"sourceType":"module"}