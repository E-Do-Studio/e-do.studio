{"ast":null,"code":"import _slicedToArray from\"/Users/theodaguier/Repositories/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useTexture}from\"@react-three/drei\";import{memo,useRef,useState}from\"react\";import{PlaneGeometry,Mesh,MeshBasicMaterial}from\"three\";import{useThree,useFrame}from\"@react-three/fiber\";import{appliedForces}from\"./helpers\";import image from\"./test.jpg\";import image1 from\"./img/2023_BOTTLES_BOOK2102 copie.webp\";import image2 from\"./img/ATTIRE_THE_STUDIO_MBACH_ATTIRE_010_FRANKLIN_BLACK_028 copie.webp\";import image3 from\"./img/GIAMBATTISTA_23FWPVCA5091-09VIS-6750_26 copie.webp\";import image4 from\"./img/GIAMBATTISTA_A2TIDY-TA07-08 copie.webp\";import image5 from\"./img/JPG_23-12-U-PA061B-J033_Front copie.webp\";import image6 from\"./img/JPG_P220613151038_Fullbody_jpg_23 copie.webp\";import image7 from\"./img/JPG_P220613151038_Fullbody_jpg_23 copie.webp\";import image8 from\"./img/MELISSA_JPG_F-CS002-X033-22-side-tiff-1 copie.webp\";import image9 from\"./img/Parfum_x_Y_Project-back-tiff-1 copie.webp\";import image10 from\"./img/SHANGXIA_FR1223S007QUARTZ-Fullbody-tiff-1 copie.webp\";import{jsx as _jsx}from\"react/jsx-runtime\";export var Photo=/*#__PURE__*/memo(function(_ref){var x=_ref.x,y=_ref.y;var ref=useRef(null);var _useThree=useThree(),viewport=_useThree.viewport;var texture=useTexture(image);// Calculer les dimensions du plan en fonction de la taille de l'image\nvar imageWidth=texture.image.width;var imageHeight=texture.image.height;var aspectRatio=imageWidth/imageHeight;var planeWidth=2;// Largeur du plan (peut être ajustée selon vos besoins)\nvar planeHeight=planeWidth/aspectRatio;// Utiliser PlaneGeometry avec les dimensions calculées\nvar geometry=new PlaneGeometry(planeWidth,planeHeight);var _useState=useState(0),_useState2=_slicedToArray(_useState,2),t=_useState2[0],setT=_useState2[1];var direction=useRef();useFrame(function(_ref2){var mouse=_ref2.mouse;if(!ref.current){return;}if(!direction.current){direction.current=x>viewport.width*mouse.x/2?-1:1;}ref.current.position.add(appliedForces(t,direction.current));setT(t+1);});return/*#__PURE__*/_jsx(\"mesh\",{ref:ref,position:[x,y,0],geometry:geometry,children:/*#__PURE__*/_jsx(\"meshBasicMaterial\",{map:texture})});});","map":{"version":3,"sources":["/Users/theodaguier/Repositories/E-Do-Studio/src/Views/TestAccroche/Photo.jsx"],"names":["useTexture","memo","useRef","useState","PlaneGeometry","Mesh","MeshBasicMaterial","useThree","useFrame","appliedForces","image","image1","image2","image3","image4","image5","image6","image7","image8","image9","image10","Photo","x","y","ref","viewport","texture","imageWidth","width","imageHeight","height","aspectRatio","planeWidth","planeHeight","geometry","t","setT","direction","mouse","current","position","add"],"mappings":"kKAAA,OAASA,UAAT,KAA2B,mBAA3B,CACA,OAASC,IAAT,CAAeC,MAAf,CAAuBC,QAAvB,KAAuC,OAAvC,CACA,OAASC,aAAT,CAAwBC,IAAxB,CAA8BC,iBAA9B,KAAuD,OAAvD,CACA,OAASC,QAAT,CAAmBC,QAAnB,KAAmC,oBAAnC,CACA,OAASC,aAAT,KAA8B,WAA9B,CAEA,MAAOC,CAAAA,KAAP,KAAkB,YAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,wCAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,wEAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0DAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,8CAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,gDAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,oDAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,oDAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0DAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,iDAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,4DAApB,C,2CAEA,MAAO,IAAMC,CAAAA,KAAK,cAAGpB,IAAI,CAAC,cAAc,IAAXqB,CAAAA,CAAW,MAAXA,CAAW,CAARC,CAAQ,MAARA,CAAQ,CACtC,GAAMC,CAAAA,GAAG,CAAGtB,MAAM,CAAC,IAAD,CAAlB,CACA,cAAqBK,QAAQ,EAA7B,CAAQkB,QAAR,WAAQA,QAAR,CAEA,GAAMC,CAAAA,OAAO,CAAG1B,UAAU,CAACU,KAAD,CAA1B,CAEA;AACA,GAAMiB,CAAAA,UAAU,CAAGD,OAAO,CAAChB,KAAR,CAAckB,KAAjC,CACA,GAAMC,CAAAA,WAAW,CAAGH,OAAO,CAAChB,KAAR,CAAcoB,MAAlC,CACA,GAAMC,CAAAA,WAAW,CAAGJ,UAAU,CAAGE,WAAjC,CACA,GAAMG,CAAAA,UAAU,CAAG,CAAnB,CAAsB;AACtB,GAAMC,CAAAA,WAAW,CAAGD,UAAU,CAAGD,WAAjC,CAEA;AACA,GAAMG,CAAAA,QAAQ,CAAG,GAAI9B,CAAAA,aAAJ,CAAkB4B,UAAlB,CAA8BC,WAA9B,CAAjB,CAEA,cAAkB9B,QAAQ,CAAC,CAAD,CAA1B,wCAAOgC,CAAP,eAAUC,IAAV,eACA,GAAMC,CAAAA,SAAS,CAAGnC,MAAM,EAAxB,CAEAM,QAAQ,CAAC,eAAe,IAAZ8B,CAAAA,KAAY,OAAZA,KAAY,CACtB,GAAI,CAACd,GAAG,CAACe,OAAT,CAAkB,CAChB,OACD,CACD,GAAI,CAACF,SAAS,CAACE,OAAf,CAAwB,CACtBF,SAAS,CAACE,OAAV,CAAoBjB,CAAC,CAAIG,QAAQ,CAACG,KAAT,CAAiBU,KAAK,CAAChB,CAAxB,CAA6B,CAAjC,CAAqC,CAAC,CAAtC,CAA0C,CAA9D,CACD,CAEDE,GAAG,CAACe,OAAJ,CAAYC,QAAZ,CAAqBC,GAArB,CAAyBhC,aAAa,CAAC0B,CAAD,CAAIE,SAAS,CAACE,OAAd,CAAtC,EAEAH,IAAI,CAACD,CAAC,CAAG,CAAL,CAAJ,CACD,CAXO,CAAR,CAaA,mBACE,aAAM,GAAG,CAAEX,GAAX,CAAgB,QAAQ,CAAE,CAACF,CAAD,CAAIC,CAAJ,CAAO,CAAP,CAA1B,CAAqC,QAAQ,CAAEW,QAA/C,uBACE,0BAAmB,GAAG,CAAER,OAAxB,EADF,EADF,CAKD,CArCwB,CAAlB","sourcesContent":["import { useTexture } from \"@react-three/drei\";\nimport { memo, useRef, useState } from \"react\";\nimport { PlaneGeometry, Mesh, MeshBasicMaterial } from \"three\";\nimport { useThree, useFrame } from \"@react-three/fiber\";\nimport { appliedForces } from \"./helpers\";\n\nimport image from \"./test.jpg\";\nimport image1 from \"./img/2023_BOTTLES_BOOK2102 copie.webp\";\nimport image2 from \"./img/ATTIRE_THE_STUDIO_MBACH_ATTIRE_010_FRANKLIN_BLACK_028 copie.webp\";\nimport image3 from \"./img/GIAMBATTISTA_23FWPVCA5091-09VIS-6750_26 copie.webp\";\nimport image4 from \"./img/GIAMBATTISTA_A2TIDY-TA07-08 copie.webp\";\nimport image5 from \"./img/JPG_23-12-U-PA061B-J033_Front copie.webp\";\nimport image6 from \"./img/JPG_P220613151038_Fullbody_jpg_23 copie.webp\";\nimport image7 from \"./img/JPG_P220613151038_Fullbody_jpg_23 copie.webp\";\nimport image8 from \"./img/MELISSA_JPG_F-CS002-X033-22-side-tiff-1 copie.webp\";\nimport image9 from \"./img/Parfum_x_Y_Project-back-tiff-1 copie.webp\";\nimport image10 from \"./img/SHANGXIA_FR1223S007QUARTZ-Fullbody-tiff-1 copie.webp\";\n\nexport const Photo = memo(({ x, y }) => {\n  const ref = useRef(null);\n  const { viewport } = useThree();\n\n  const texture = useTexture(image);\n\n  // Calculer les dimensions du plan en fonction de la taille de l'image\n  const imageWidth = texture.image.width;\n  const imageHeight = texture.image.height;\n  const aspectRatio = imageWidth / imageHeight;\n  const planeWidth = 2; // Largeur du plan (peut être ajustée selon vos besoins)\n  const planeHeight = planeWidth / aspectRatio;\n\n  // Utiliser PlaneGeometry avec les dimensions calculées\n  const geometry = new PlaneGeometry(planeWidth, planeHeight);\n\n  const [t, setT] = useState(0);\n  const direction = useRef();\n\n  useFrame(({ mouse }) => {\n    if (!ref.current) {\n      return;\n    }\n    if (!direction.current) {\n      direction.current = x > (viewport.width * mouse.x) / 2 ? -1 : 1;\n    }\n\n    ref.current.position.add(appliedForces(t, direction.current));\n\n    setT(t + 1);\n  });\n\n  return (\n    <mesh ref={ref} position={[x, y, 0]} geometry={geometry}>\n      <meshBasicMaterial map={texture} />\n    </mesh>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}