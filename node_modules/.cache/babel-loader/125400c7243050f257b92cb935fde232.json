{"ast":null,"code":"var __defProp = Object.defineProperty;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n  return value;\n};\n\nimport { Object3D, Raycaster, Vector3, Quaternion, Euler, Matrix4, MeshBasicMaterial, DoubleSide, LineBasicMaterial, CylinderGeometry, BoxGeometry, BufferGeometry, Float32BufferAttribute, Mesh, Line, OctahedronGeometry, PlaneGeometry, TorusGeometry, SphereGeometry, Color } from \"three\";\n\nclass TransformControls extends Object3D {\n  constructor(camera, domElement) {\n    super();\n\n    __publicField(this, \"isTransformControls\", true);\n\n    __publicField(this, \"visible\", false);\n\n    __publicField(this, \"domElement\");\n\n    __publicField(this, \"raycaster\", new Raycaster());\n\n    __publicField(this, \"gizmo\");\n\n    __publicField(this, \"plane\");\n\n    __publicField(this, \"tempVector\", new Vector3());\n\n    __publicField(this, \"tempVector2\", new Vector3());\n\n    __publicField(this, \"tempQuaternion\", new Quaternion());\n\n    __publicField(this, \"unit\", {\n      X: new Vector3(1, 0, 0),\n      Y: new Vector3(0, 1, 0),\n      Z: new Vector3(0, 0, 1)\n    });\n\n    __publicField(this, \"pointStart\", new Vector3());\n\n    __publicField(this, \"pointEnd\", new Vector3());\n\n    __publicField(this, \"offset\", new Vector3());\n\n    __publicField(this, \"rotationAxis\", new Vector3());\n\n    __publicField(this, \"startNorm\", new Vector3());\n\n    __publicField(this, \"endNorm\", new Vector3());\n\n    __publicField(this, \"rotationAngle\", 0);\n\n    __publicField(this, \"cameraPosition\", new Vector3());\n\n    __publicField(this, \"cameraQuaternion\", new Quaternion());\n\n    __publicField(this, \"cameraScale\", new Vector3());\n\n    __publicField(this, \"parentPosition\", new Vector3());\n\n    __publicField(this, \"parentQuaternion\", new Quaternion());\n\n    __publicField(this, \"parentQuaternionInv\", new Quaternion());\n\n    __publicField(this, \"parentScale\", new Vector3());\n\n    __publicField(this, \"worldPositionStart\", new Vector3());\n\n    __publicField(this, \"worldQuaternionStart\", new Quaternion());\n\n    __publicField(this, \"worldScaleStart\", new Vector3());\n\n    __publicField(this, \"worldPosition\", new Vector3());\n\n    __publicField(this, \"worldQuaternion\", new Quaternion());\n\n    __publicField(this, \"worldQuaternionInv\", new Quaternion());\n\n    __publicField(this, \"worldScale\", new Vector3());\n\n    __publicField(this, \"eye\", new Vector3());\n\n    __publicField(this, \"positionStart\", new Vector3());\n\n    __publicField(this, \"quaternionStart\", new Quaternion());\n\n    __publicField(this, \"scaleStart\", new Vector3());\n\n    __publicField(this, \"camera\");\n\n    __publicField(this, \"object\");\n\n    __publicField(this, \"enabled\", true);\n\n    __publicField(this, \"axis\", null);\n\n    __publicField(this, \"mode\", \"translate\");\n\n    __publicField(this, \"translationSnap\", null);\n\n    __publicField(this, \"rotationSnap\", null);\n\n    __publicField(this, \"scaleSnap\", null);\n\n    __publicField(this, \"space\", \"world\");\n\n    __publicField(this, \"size\", 1);\n\n    __publicField(this, \"dragging\", false);\n\n    __publicField(this, \"showX\", true);\n\n    __publicField(this, \"showY\", true);\n\n    __publicField(this, \"showZ\", true); // events\n\n\n    __publicField(this, \"changeEvent\", {\n      type: \"change\"\n    });\n\n    __publicField(this, \"mouseDownEvent\", {\n      type: \"mouseDown\",\n      mode: this.mode\n    });\n\n    __publicField(this, \"mouseUpEvent\", {\n      type: \"mouseUp\",\n      mode: this.mode\n    });\n\n    __publicField(this, \"objectChangeEvent\", {\n      type: \"objectChange\"\n    });\n\n    __publicField(this, \"intersectObjectWithRay\", (object, raycaster, includeInvisible) => {\n      const allIntersections = raycaster.intersectObject(object, true);\n\n      for (let i = 0; i < allIntersections.length; i++) {\n        if (allIntersections[i].object.visible || includeInvisible) {\n          return allIntersections[i];\n        }\n      }\n\n      return false;\n    }); // Set current object\n\n\n    __publicField(this, \"attach\", object => {\n      this.object = object;\n      this.visible = true;\n      return this;\n    }); // Detatch from object\n\n\n    __publicField(this, \"detach\", () => {\n      this.object = void 0;\n      this.visible = false;\n      this.axis = null;\n      return this;\n    }); // Reset\n\n\n    __publicField(this, \"reset\", () => {\n      if (!this.enabled) return this;\n\n      if (this.dragging) {\n        if (this.object !== void 0) {\n          this.object.position.copy(this.positionStart);\n          this.object.quaternion.copy(this.quaternionStart);\n          this.object.scale.copy(this.scaleStart);\n          this.dispatchEvent(this.changeEvent);\n          this.dispatchEvent(this.objectChangeEvent);\n          this.pointStart.copy(this.pointEnd);\n        }\n      }\n\n      return this;\n    });\n\n    __publicField(this, \"updateMatrixWorld\", () => {\n      if (this.object !== void 0) {\n        this.object.updateMatrixWorld();\n\n        if (this.object.parent === null) {\n          console.error(\"TransformControls: The attached 3D object must be a part of the scene graph.\");\n        } else {\n          this.object.parent.matrixWorld.decompose(this.parentPosition, this.parentQuaternion, this.parentScale);\n        }\n\n        this.object.matrixWorld.decompose(this.worldPosition, this.worldQuaternion, this.worldScale);\n        this.parentQuaternionInv.copy(this.parentQuaternion).invert();\n        this.worldQuaternionInv.copy(this.worldQuaternion).invert();\n      }\n\n      this.camera.updateMatrixWorld();\n      this.camera.matrixWorld.decompose(this.cameraPosition, this.cameraQuaternion, this.cameraScale);\n      this.eye.copy(this.cameraPosition).sub(this.worldPosition).normalize();\n      super.updateMatrixWorld();\n    });\n\n    __publicField(this, \"pointerHover\", pointer => {\n      if (this.object === void 0 || this.dragging === true) return;\n      this.raycaster.setFromCamera(pointer, this.camera);\n      const intersect = this.intersectObjectWithRay(this.gizmo.picker[this.mode], this.raycaster);\n\n      if (intersect) {\n        this.axis = intersect.object.name;\n      } else {\n        this.axis = null;\n      }\n    });\n\n    __publicField(this, \"pointerDown\", pointer => {\n      if (this.object === void 0 || this.dragging === true || pointer.button !== 0) return;\n\n      if (this.axis !== null) {\n        this.raycaster.setFromCamera(pointer, this.camera);\n        const planeIntersect = this.intersectObjectWithRay(this.plane, this.raycaster, true);\n\n        if (planeIntersect) {\n          let space = this.space;\n\n          if (this.mode === \"scale\") {\n            space = \"local\";\n          } else if (this.axis === \"E\" || this.axis === \"XYZE\" || this.axis === \"XYZ\") {\n            space = \"world\";\n          }\n\n          if (space === \"local\" && this.mode === \"rotate\") {\n            const snap = this.rotationSnap;\n            if (this.axis === \"X\" && snap) this.object.rotation.x = Math.round(this.object.rotation.x / snap) * snap;\n            if (this.axis === \"Y\" && snap) this.object.rotation.y = Math.round(this.object.rotation.y / snap) * snap;\n            if (this.axis === \"Z\" && snap) this.object.rotation.z = Math.round(this.object.rotation.z / snap) * snap;\n          }\n\n          this.object.updateMatrixWorld();\n\n          if (this.object.parent) {\n            this.object.parent.updateMatrixWorld();\n          }\n\n          this.positionStart.copy(this.object.position);\n          this.quaternionStart.copy(this.object.quaternion);\n          this.scaleStart.copy(this.object.scale);\n          this.object.matrixWorld.decompose(this.worldPositionStart, this.worldQuaternionStart, this.worldScaleStart);\n          this.pointStart.copy(planeIntersect.point).sub(this.worldPositionStart);\n        }\n\n        this.dragging = true;\n        this.mouseDownEvent.mode = this.mode;\n        this.dispatchEvent(this.mouseDownEvent);\n      }\n    });\n\n    __publicField(this, \"pointerMove\", pointer => {\n      const axis = this.axis;\n      const mode = this.mode;\n      const object = this.object;\n      let space = this.space;\n\n      if (mode === \"scale\") {\n        space = \"local\";\n      } else if (axis === \"E\" || axis === \"XYZE\" || axis === \"XYZ\") {\n        space = \"world\";\n      }\n\n      if (object === void 0 || axis === null || this.dragging === false || pointer.button !== -1) return;\n      this.raycaster.setFromCamera(pointer, this.camera);\n      const planeIntersect = this.intersectObjectWithRay(this.plane, this.raycaster, true);\n      if (!planeIntersect) return;\n      this.pointEnd.copy(planeIntersect.point).sub(this.worldPositionStart);\n\n      if (mode === \"translate\") {\n        this.offset.copy(this.pointEnd).sub(this.pointStart);\n\n        if (space === \"local\" && axis !== \"XYZ\") {\n          this.offset.applyQuaternion(this.worldQuaternionInv);\n        }\n\n        if (axis.indexOf(\"X\") === -1) this.offset.x = 0;\n        if (axis.indexOf(\"Y\") === -1) this.offset.y = 0;\n        if (axis.indexOf(\"Z\") === -1) this.offset.z = 0;\n\n        if (space === \"local\" && axis !== \"XYZ\") {\n          this.offset.applyQuaternion(this.quaternionStart).divide(this.parentScale);\n        } else {\n          this.offset.applyQuaternion(this.parentQuaternionInv).divide(this.parentScale);\n        }\n\n        object.position.copy(this.offset).add(this.positionStart);\n\n        if (this.translationSnap) {\n          if (space === \"local\") {\n            object.position.applyQuaternion(this.tempQuaternion.copy(this.quaternionStart).invert());\n\n            if (axis.search(\"X\") !== -1) {\n              object.position.x = Math.round(object.position.x / this.translationSnap) * this.translationSnap;\n            }\n\n            if (axis.search(\"Y\") !== -1) {\n              object.position.y = Math.round(object.position.y / this.translationSnap) * this.translationSnap;\n            }\n\n            if (axis.search(\"Z\") !== -1) {\n              object.position.z = Math.round(object.position.z / this.translationSnap) * this.translationSnap;\n            }\n\n            object.position.applyQuaternion(this.quaternionStart);\n          }\n\n          if (space === \"world\") {\n            if (object.parent) {\n              object.position.add(this.tempVector.setFromMatrixPosition(object.parent.matrixWorld));\n            }\n\n            if (axis.search(\"X\") !== -1) {\n              object.position.x = Math.round(object.position.x / this.translationSnap) * this.translationSnap;\n            }\n\n            if (axis.search(\"Y\") !== -1) {\n              object.position.y = Math.round(object.position.y / this.translationSnap) * this.translationSnap;\n            }\n\n            if (axis.search(\"Z\") !== -1) {\n              object.position.z = Math.round(object.position.z / this.translationSnap) * this.translationSnap;\n            }\n\n            if (object.parent) {\n              object.position.sub(this.tempVector.setFromMatrixPosition(object.parent.matrixWorld));\n            }\n          }\n        }\n      } else if (mode === \"scale\") {\n        if (axis.search(\"XYZ\") !== -1) {\n          let d = this.pointEnd.length() / this.pointStart.length();\n          if (this.pointEnd.dot(this.pointStart) < 0) d *= -1;\n          this.tempVector2.set(d, d, d);\n        } else {\n          this.tempVector.copy(this.pointStart);\n          this.tempVector2.copy(this.pointEnd);\n          this.tempVector.applyQuaternion(this.worldQuaternionInv);\n          this.tempVector2.applyQuaternion(this.worldQuaternionInv);\n          this.tempVector2.divide(this.tempVector);\n\n          if (axis.search(\"X\") === -1) {\n            this.tempVector2.x = 1;\n          }\n\n          if (axis.search(\"Y\") === -1) {\n            this.tempVector2.y = 1;\n          }\n\n          if (axis.search(\"Z\") === -1) {\n            this.tempVector2.z = 1;\n          }\n        }\n\n        object.scale.copy(this.scaleStart).multiply(this.tempVector2);\n\n        if (this.scaleSnap && this.object) {\n          if (axis.search(\"X\") !== -1) {\n            this.object.scale.x = Math.round(object.scale.x / this.scaleSnap) * this.scaleSnap || this.scaleSnap;\n          }\n\n          if (axis.search(\"Y\") !== -1) {\n            object.scale.y = Math.round(object.scale.y / this.scaleSnap) * this.scaleSnap || this.scaleSnap;\n          }\n\n          if (axis.search(\"Z\") !== -1) {\n            object.scale.z = Math.round(object.scale.z / this.scaleSnap) * this.scaleSnap || this.scaleSnap;\n          }\n        }\n      } else if (mode === \"rotate\") {\n        this.offset.copy(this.pointEnd).sub(this.pointStart);\n        const ROTATION_SPEED = 20 / this.worldPosition.distanceTo(this.tempVector.setFromMatrixPosition(this.camera.matrixWorld));\n\n        if (axis === \"E\") {\n          this.rotationAxis.copy(this.eye);\n          this.rotationAngle = this.pointEnd.angleTo(this.pointStart);\n          this.startNorm.copy(this.pointStart).normalize();\n          this.endNorm.copy(this.pointEnd).normalize();\n          this.rotationAngle *= this.endNorm.cross(this.startNorm).dot(this.eye) < 0 ? 1 : -1;\n        } else if (axis === \"XYZE\") {\n          this.rotationAxis.copy(this.offset).cross(this.eye).normalize();\n          this.rotationAngle = this.offset.dot(this.tempVector.copy(this.rotationAxis).cross(this.eye)) * ROTATION_SPEED;\n        } else if (axis === \"X\" || axis === \"Y\" || axis === \"Z\") {\n          this.rotationAxis.copy(this.unit[axis]);\n          this.tempVector.copy(this.unit[axis]);\n\n          if (space === \"local\") {\n            this.tempVector.applyQuaternion(this.worldQuaternion);\n          }\n\n          this.rotationAngle = this.offset.dot(this.tempVector.cross(this.eye).normalize()) * ROTATION_SPEED;\n        }\n\n        if (this.rotationSnap) {\n          this.rotationAngle = Math.round(this.rotationAngle / this.rotationSnap) * this.rotationSnap;\n        }\n\n        if (space === \"local\" && axis !== \"E\" && axis !== \"XYZE\") {\n          object.quaternion.copy(this.quaternionStart);\n          object.quaternion.multiply(this.tempQuaternion.setFromAxisAngle(this.rotationAxis, this.rotationAngle)).normalize();\n        } else {\n          this.rotationAxis.applyQuaternion(this.parentQuaternionInv);\n          object.quaternion.copy(this.tempQuaternion.setFromAxisAngle(this.rotationAxis, this.rotationAngle));\n          object.quaternion.multiply(this.quaternionStart).normalize();\n        }\n      }\n\n      this.dispatchEvent(this.changeEvent);\n      this.dispatchEvent(this.objectChangeEvent);\n    });\n\n    __publicField(this, \"pointerUp\", pointer => {\n      if (pointer.button !== 0) return;\n\n      if (this.dragging && this.axis !== null) {\n        this.mouseUpEvent.mode = this.mode;\n        this.dispatchEvent(this.mouseUpEvent);\n      }\n\n      this.dragging = false;\n      this.axis = null;\n    });\n\n    __publicField(this, \"getPointer\", event => {\n      var _a, _b;\n\n      if (this.domElement && ((_a = this.domElement.ownerDocument) == null ? void 0 : _a.pointerLockElement)) {\n        return {\n          x: 0,\n          y: 0,\n          button: event.button\n        };\n      } else {\n        const pointer = event.changedTouches ? event.changedTouches[0] : event;\n        const rect = (_b = this.domElement) == null ? void 0 : _b.getBoundingClientRect();\n        return {\n          x: (pointer.clientX - rect.left) / rect.width * 2 - 1,\n          y: -(pointer.clientY - rect.top) / rect.height * 2 + 1,\n          button: event.button\n        };\n      }\n    });\n\n    __publicField(this, \"onPointerHover\", event => {\n      if (!this.enabled) return;\n\n      switch (event.pointerType) {\n        case \"mouse\":\n        case \"pen\":\n          this.pointerHover(this.getPointer(event));\n          break;\n      }\n    });\n\n    __publicField(this, \"onPointerDown\", event => {\n      if (!this.enabled || !this.domElement) return;\n      this.domElement.style.touchAction = \"none\";\n      this.domElement.ownerDocument.addEventListener(\"pointermove\", this.onPointerMove);\n      this.pointerHover(this.getPointer(event));\n      this.pointerDown(this.getPointer(event));\n    });\n\n    __publicField(this, \"onPointerMove\", event => {\n      if (!this.enabled) return;\n      this.pointerMove(this.getPointer(event));\n    });\n\n    __publicField(this, \"onPointerUp\", event => {\n      if (!this.enabled || !this.domElement) return;\n      this.domElement.style.touchAction = \"\";\n      this.domElement.ownerDocument.removeEventListener(\"pointermove\", this.onPointerMove);\n      this.pointerUp(this.getPointer(event));\n    });\n\n    __publicField(this, \"getMode\", () => this.mode);\n\n    __publicField(this, \"setMode\", mode => {\n      this.mode = mode;\n    });\n\n    __publicField(this, \"setTranslationSnap\", translationSnap => {\n      this.translationSnap = translationSnap;\n    });\n\n    __publicField(this, \"setRotationSnap\", rotationSnap => {\n      this.rotationSnap = rotationSnap;\n    });\n\n    __publicField(this, \"setScaleSnap\", scaleSnap => {\n      this.scaleSnap = scaleSnap;\n    });\n\n    __publicField(this, \"setSize\", size => {\n      this.size = size;\n    });\n\n    __publicField(this, \"setSpace\", space => {\n      this.space = space;\n    });\n\n    __publicField(this, \"update\", () => {\n      console.warn(\"THREE.TransformControls: update function has no more functionality and therefore has been deprecated.\");\n    });\n\n    __publicField(this, \"connect\", domElement => {\n      if (domElement === document) {\n        console.error('THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.');\n      }\n\n      this.domElement = domElement;\n      this.domElement.addEventListener(\"pointerdown\", this.onPointerDown);\n      this.domElement.addEventListener(\"pointermove\", this.onPointerHover);\n      this.domElement.ownerDocument.addEventListener(\"pointerup\", this.onPointerUp);\n    });\n\n    __publicField(this, \"dispose\", () => {\n      var _a, _b, _c, _d, _e, _f;\n\n      (_a = this.domElement) == null ? void 0 : _a.removeEventListener(\"pointerdown\", this.onPointerDown);\n      (_b = this.domElement) == null ? void 0 : _b.removeEventListener(\"pointermove\", this.onPointerHover);\n      (_d = (_c = this.domElement) == null ? void 0 : _c.ownerDocument) == null ? void 0 : _d.removeEventListener(\"pointermove\", this.onPointerMove);\n      (_f = (_e = this.domElement) == null ? void 0 : _e.ownerDocument) == null ? void 0 : _f.removeEventListener(\"pointerup\", this.onPointerUp);\n      this.traverse(child => {\n        const mesh = child;\n\n        if (mesh.geometry) {\n          mesh.geometry.dispose();\n        }\n\n        if (mesh.material) {\n          mesh.material.dispose();\n        }\n      });\n    });\n\n    this.domElement = domElement;\n    this.camera = camera;\n    this.gizmo = new TransformControlsGizmo();\n    this.add(this.gizmo);\n    this.plane = new TransformControlsPlane();\n    this.add(this.plane);\n\n    const defineProperty = (propName, defaultValue) => {\n      let propValue = defaultValue;\n      Object.defineProperty(this, propName, {\n        get: function () {\n          return propValue !== void 0 ? propValue : defaultValue;\n        },\n        set: function (value) {\n          if (propValue !== value) {\n            propValue = value;\n            this.plane[propName] = value;\n            this.gizmo[propName] = value;\n            this.dispatchEvent({\n              type: propName + \"-changed\",\n              value\n            });\n            this.dispatchEvent(this.changeEvent);\n          }\n        }\n      });\n      this[propName] = defaultValue;\n      this.plane[propName] = defaultValue;\n      this.gizmo[propName] = defaultValue;\n    };\n\n    defineProperty(\"camera\", this.camera);\n    defineProperty(\"object\", this.object);\n    defineProperty(\"enabled\", this.enabled);\n    defineProperty(\"axis\", this.axis);\n    defineProperty(\"mode\", this.mode);\n    defineProperty(\"translationSnap\", this.translationSnap);\n    defineProperty(\"rotationSnap\", this.rotationSnap);\n    defineProperty(\"scaleSnap\", this.scaleSnap);\n    defineProperty(\"space\", this.space);\n    defineProperty(\"size\", this.size);\n    defineProperty(\"dragging\", this.dragging);\n    defineProperty(\"showX\", this.showX);\n    defineProperty(\"showY\", this.showY);\n    defineProperty(\"showZ\", this.showZ);\n    defineProperty(\"worldPosition\", this.worldPosition);\n    defineProperty(\"worldPositionStart\", this.worldPositionStart);\n    defineProperty(\"worldQuaternion\", this.worldQuaternion);\n    defineProperty(\"worldQuaternionStart\", this.worldQuaternionStart);\n    defineProperty(\"cameraPosition\", this.cameraPosition);\n    defineProperty(\"cameraQuaternion\", this.cameraQuaternion);\n    defineProperty(\"pointStart\", this.pointStart);\n    defineProperty(\"pointEnd\", this.pointEnd);\n    defineProperty(\"rotationAxis\", this.rotationAxis);\n    defineProperty(\"rotationAngle\", this.rotationAngle);\n    defineProperty(\"eye\", this.eye);\n    if (domElement !== void 0) this.connect(domElement);\n  }\n\n}\n\nclass TransformControlsGizmo extends Object3D {\n  constructor() {\n    super();\n\n    __publicField(this, \"isTransformControlsGizmo\", true);\n\n    __publicField(this, \"type\", \"TransformControlsGizmo\");\n\n    __publicField(this, \"tempVector\", new Vector3(0, 0, 0));\n\n    __publicField(this, \"tempEuler\", new Euler());\n\n    __publicField(this, \"alignVector\", new Vector3(0, 1, 0));\n\n    __publicField(this, \"zeroVector\", new Vector3(0, 0, 0));\n\n    __publicField(this, \"lookAtMatrix\", new Matrix4());\n\n    __publicField(this, \"tempQuaternion\", new Quaternion());\n\n    __publicField(this, \"tempQuaternion2\", new Quaternion());\n\n    __publicField(this, \"identityQuaternion\", new Quaternion());\n\n    __publicField(this, \"unitX\", new Vector3(1, 0, 0));\n\n    __publicField(this, \"unitY\", new Vector3(0, 1, 0));\n\n    __publicField(this, \"unitZ\", new Vector3(0, 0, 1));\n\n    __publicField(this, \"gizmo\");\n\n    __publicField(this, \"picker\");\n\n    __publicField(this, \"helper\"); // these are set from parent class TransformControls\n\n\n    __publicField(this, \"rotationAxis\", new Vector3());\n\n    __publicField(this, \"cameraPosition\", new Vector3());\n\n    __publicField(this, \"worldPositionStart\", new Vector3());\n\n    __publicField(this, \"worldQuaternionStart\", new Quaternion());\n\n    __publicField(this, \"worldPosition\", new Vector3());\n\n    __publicField(this, \"worldQuaternion\", new Quaternion());\n\n    __publicField(this, \"eye\", new Vector3());\n\n    __publicField(this, \"camera\", null);\n\n    __publicField(this, \"enabled\", true);\n\n    __publicField(this, \"axis\", null);\n\n    __publicField(this, \"mode\", \"translate\");\n\n    __publicField(this, \"space\", \"world\");\n\n    __publicField(this, \"size\", 1);\n\n    __publicField(this, \"dragging\", false);\n\n    __publicField(this, \"showX\", true);\n\n    __publicField(this, \"showY\", true);\n\n    __publicField(this, \"showZ\", true); // updateMatrixWorld will update transformations and appearance of individual handles\n\n\n    __publicField(this, \"updateMatrixWorld\", () => {\n      let space = this.space;\n\n      if (this.mode === \"scale\") {\n        space = \"local\";\n      }\n\n      const quaternion = space === \"local\" ? this.worldQuaternion : this.identityQuaternion;\n      this.gizmo[\"translate\"].visible = this.mode === \"translate\";\n      this.gizmo[\"rotate\"].visible = this.mode === \"rotate\";\n      this.gizmo[\"scale\"].visible = this.mode === \"scale\";\n      this.helper[\"translate\"].visible = this.mode === \"translate\";\n      this.helper[\"rotate\"].visible = this.mode === \"rotate\";\n      this.helper[\"scale\"].visible = this.mode === \"scale\";\n      let handles = [];\n      handles = handles.concat(this.picker[this.mode].children);\n      handles = handles.concat(this.gizmo[this.mode].children);\n      handles = handles.concat(this.helper[this.mode].children);\n\n      for (let i = 0; i < handles.length; i++) {\n        const handle = handles[i];\n        handle.visible = true;\n        handle.rotation.set(0, 0, 0);\n        handle.position.copy(this.worldPosition);\n        let factor;\n\n        if (this.camera.isOrthographicCamera) {\n          factor = (this.camera.top - this.camera.bottom) / this.camera.zoom;\n        } else {\n          factor = this.worldPosition.distanceTo(this.cameraPosition) * Math.min(1.9 * Math.tan(Math.PI * this.camera.fov / 360) / this.camera.zoom, 7);\n        }\n\n        handle.scale.set(1, 1, 1).multiplyScalar(factor * this.size / 7);\n\n        if (handle.tag === \"helper\") {\n          handle.visible = false;\n\n          if (handle.name === \"AXIS\") {\n            handle.position.copy(this.worldPositionStart);\n            handle.visible = !!this.axis;\n\n            if (this.axis === \"X\") {\n              this.tempQuaternion.setFromEuler(this.tempEuler.set(0, 0, 0));\n              handle.quaternion.copy(quaternion).multiply(this.tempQuaternion);\n\n              if (Math.abs(this.alignVector.copy(this.unitX).applyQuaternion(quaternion).dot(this.eye)) > 0.9) {\n                handle.visible = false;\n              }\n            }\n\n            if (this.axis === \"Y\") {\n              this.tempQuaternion.setFromEuler(this.tempEuler.set(0, 0, Math.PI / 2));\n              handle.quaternion.copy(quaternion).multiply(this.tempQuaternion);\n\n              if (Math.abs(this.alignVector.copy(this.unitY).applyQuaternion(quaternion).dot(this.eye)) > 0.9) {\n                handle.visible = false;\n              }\n            }\n\n            if (this.axis === \"Z\") {\n              this.tempQuaternion.setFromEuler(this.tempEuler.set(0, Math.PI / 2, 0));\n              handle.quaternion.copy(quaternion).multiply(this.tempQuaternion);\n\n              if (Math.abs(this.alignVector.copy(this.unitZ).applyQuaternion(quaternion).dot(this.eye)) > 0.9) {\n                handle.visible = false;\n              }\n            }\n\n            if (this.axis === \"XYZE\") {\n              this.tempQuaternion.setFromEuler(this.tempEuler.set(0, Math.PI / 2, 0));\n              this.alignVector.copy(this.rotationAxis);\n              handle.quaternion.setFromRotationMatrix(this.lookAtMatrix.lookAt(this.zeroVector, this.alignVector, this.unitY));\n              handle.quaternion.multiply(this.tempQuaternion);\n              handle.visible = this.dragging;\n            }\n\n            if (this.axis === \"E\") {\n              handle.visible = false;\n            }\n          } else if (handle.name === \"START\") {\n            handle.position.copy(this.worldPositionStart);\n            handle.visible = this.dragging;\n          } else if (handle.name === \"END\") {\n            handle.position.copy(this.worldPosition);\n            handle.visible = this.dragging;\n          } else if (handle.name === \"DELTA\") {\n            handle.position.copy(this.worldPositionStart);\n            handle.quaternion.copy(this.worldQuaternionStart);\n            this.tempVector.set(1e-10, 1e-10, 1e-10).add(this.worldPositionStart).sub(this.worldPosition).multiplyScalar(-1);\n            this.tempVector.applyQuaternion(this.worldQuaternionStart.clone().invert());\n            handle.scale.copy(this.tempVector);\n            handle.visible = this.dragging;\n          } else {\n            handle.quaternion.copy(quaternion);\n\n            if (this.dragging) {\n              handle.position.copy(this.worldPositionStart);\n            } else {\n              handle.position.copy(this.worldPosition);\n            }\n\n            if (this.axis) {\n              handle.visible = this.axis.search(handle.name) !== -1;\n            }\n          }\n\n          continue;\n        }\n\n        handle.quaternion.copy(quaternion);\n\n        if (this.mode === \"translate\" || this.mode === \"scale\") {\n          const AXIS_HIDE_TRESHOLD = 0.99;\n          const PLANE_HIDE_TRESHOLD = 0.2;\n          const AXIS_FLIP_TRESHOLD = 0;\n\n          if (handle.name === \"X\" || handle.name === \"XYZX\") {\n            if (Math.abs(this.alignVector.copy(this.unitX).applyQuaternion(quaternion).dot(this.eye)) > AXIS_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n\n          if (handle.name === \"Y\" || handle.name === \"XYZY\") {\n            if (Math.abs(this.alignVector.copy(this.unitY).applyQuaternion(quaternion).dot(this.eye)) > AXIS_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n\n          if (handle.name === \"Z\" || handle.name === \"XYZZ\") {\n            if (Math.abs(this.alignVector.copy(this.unitZ).applyQuaternion(quaternion).dot(this.eye)) > AXIS_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n\n          if (handle.name === \"XY\") {\n            if (Math.abs(this.alignVector.copy(this.unitZ).applyQuaternion(quaternion).dot(this.eye)) < PLANE_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n\n          if (handle.name === \"YZ\") {\n            if (Math.abs(this.alignVector.copy(this.unitX).applyQuaternion(quaternion).dot(this.eye)) < PLANE_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n\n          if (handle.name === \"XZ\") {\n            if (Math.abs(this.alignVector.copy(this.unitY).applyQuaternion(quaternion).dot(this.eye)) < PLANE_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n\n          if (handle.name.search(\"X\") !== -1) {\n            if (this.alignVector.copy(this.unitX).applyQuaternion(quaternion).dot(this.eye) < AXIS_FLIP_TRESHOLD) {\n              if (handle.tag === \"fwd\") {\n                handle.visible = false;\n              } else {\n                handle.scale.x *= -1;\n              }\n            } else if (handle.tag === \"bwd\") {\n              handle.visible = false;\n            }\n          }\n\n          if (handle.name.search(\"Y\") !== -1) {\n            if (this.alignVector.copy(this.unitY).applyQuaternion(quaternion).dot(this.eye) < AXIS_FLIP_TRESHOLD) {\n              if (handle.tag === \"fwd\") {\n                handle.visible = false;\n              } else {\n                handle.scale.y *= -1;\n              }\n            } else if (handle.tag === \"bwd\") {\n              handle.visible = false;\n            }\n          }\n\n          if (handle.name.search(\"Z\") !== -1) {\n            if (this.alignVector.copy(this.unitZ).applyQuaternion(quaternion).dot(this.eye) < AXIS_FLIP_TRESHOLD) {\n              if (handle.tag === \"fwd\") {\n                handle.visible = false;\n              } else {\n                handle.scale.z *= -1;\n              }\n            } else if (handle.tag === \"bwd\") {\n              handle.visible = false;\n            }\n          }\n        } else if (this.mode === \"rotate\") {\n          this.tempQuaternion2.copy(quaternion);\n          this.alignVector.copy(this.eye).applyQuaternion(this.tempQuaternion.copy(quaternion).invert());\n\n          if (handle.name.search(\"E\") !== -1) {\n            handle.quaternion.setFromRotationMatrix(this.lookAtMatrix.lookAt(this.eye, this.zeroVector, this.unitY));\n          }\n\n          if (handle.name === \"X\") {\n            this.tempQuaternion.setFromAxisAngle(this.unitX, Math.atan2(-this.alignVector.y, this.alignVector.z));\n            this.tempQuaternion.multiplyQuaternions(this.tempQuaternion2, this.tempQuaternion);\n            handle.quaternion.copy(this.tempQuaternion);\n          }\n\n          if (handle.name === \"Y\") {\n            this.tempQuaternion.setFromAxisAngle(this.unitY, Math.atan2(this.alignVector.x, this.alignVector.z));\n            this.tempQuaternion.multiplyQuaternions(this.tempQuaternion2, this.tempQuaternion);\n            handle.quaternion.copy(this.tempQuaternion);\n          }\n\n          if (handle.name === \"Z\") {\n            this.tempQuaternion.setFromAxisAngle(this.unitZ, Math.atan2(this.alignVector.y, this.alignVector.x));\n            this.tempQuaternion.multiplyQuaternions(this.tempQuaternion2, this.tempQuaternion);\n            handle.quaternion.copy(this.tempQuaternion);\n          }\n        }\n\n        handle.visible = handle.visible && (handle.name.indexOf(\"X\") === -1 || this.showX);\n        handle.visible = handle.visible && (handle.name.indexOf(\"Y\") === -1 || this.showY);\n        handle.visible = handle.visible && (handle.name.indexOf(\"Z\") === -1 || this.showZ);\n        handle.visible = handle.visible && (handle.name.indexOf(\"E\") === -1 || this.showX && this.showY && this.showZ);\n        handle.material.tempOpacity = handle.material.tempOpacity || handle.material.opacity;\n        handle.material.tempColor = handle.material.tempColor || handle.material.color.clone();\n        handle.material.color.copy(handle.material.tempColor);\n        handle.material.opacity = handle.material.tempOpacity;\n\n        if (!this.enabled) {\n          handle.material.opacity *= 0.5;\n          handle.material.color.lerp(new Color(1, 1, 1), 0.5);\n        } else if (this.axis) {\n          if (handle.name === this.axis) {\n            handle.material.opacity = 1;\n            handle.material.color.lerp(new Color(1, 1, 1), 0.5);\n          } else if (this.axis.split(\"\").some(function (a) {\n            return handle.name === a;\n          })) {\n            handle.material.opacity = 1;\n            handle.material.color.lerp(new Color(1, 1, 1), 0.5);\n          } else {\n            handle.material.opacity *= 0.25;\n            handle.material.color.lerp(new Color(1, 1, 1), 0.5);\n          }\n        }\n      }\n\n      super.updateMatrixWorld();\n    });\n\n    const gizmoMaterial = new MeshBasicMaterial({\n      depthTest: false,\n      depthWrite: false,\n      transparent: true,\n      side: DoubleSide,\n      fog: false,\n      toneMapped: false\n    });\n    const gizmoLineMaterial = new LineBasicMaterial({\n      depthTest: false,\n      depthWrite: false,\n      transparent: true,\n      linewidth: 1,\n      fog: false,\n      toneMapped: false\n    });\n    const matInvisible = gizmoMaterial.clone();\n    matInvisible.opacity = 0.15;\n    const matHelper = gizmoMaterial.clone();\n    matHelper.opacity = 0.33;\n    const matRed = gizmoMaterial.clone();\n    matRed.color.set(16711680);\n    const matGreen = gizmoMaterial.clone();\n    matGreen.color.set(65280);\n    const matBlue = gizmoMaterial.clone();\n    matBlue.color.set(255);\n    const matWhiteTransparent = gizmoMaterial.clone();\n    matWhiteTransparent.opacity = 0.25;\n    const matYellowTransparent = matWhiteTransparent.clone();\n    matYellowTransparent.color.set(16776960);\n    const matCyanTransparent = matWhiteTransparent.clone();\n    matCyanTransparent.color.set(65535);\n    const matMagentaTransparent = matWhiteTransparent.clone();\n    matMagentaTransparent.color.set(16711935);\n    const matYellow = gizmoMaterial.clone();\n    matYellow.color.set(16776960);\n    const matLineRed = gizmoLineMaterial.clone();\n    matLineRed.color.set(16711680);\n    const matLineGreen = gizmoLineMaterial.clone();\n    matLineGreen.color.set(65280);\n    const matLineBlue = gizmoLineMaterial.clone();\n    matLineBlue.color.set(255);\n    const matLineCyan = gizmoLineMaterial.clone();\n    matLineCyan.color.set(65535);\n    const matLineMagenta = gizmoLineMaterial.clone();\n    matLineMagenta.color.set(16711935);\n    const matLineYellow = gizmoLineMaterial.clone();\n    matLineYellow.color.set(16776960);\n    const matLineGray = gizmoLineMaterial.clone();\n    matLineGray.color.set(7895160);\n    const matLineYellowTransparent = matLineYellow.clone();\n    matLineYellowTransparent.opacity = 0.25;\n    const arrowGeometry = new CylinderGeometry(0, 0.05, 0.2, 12, 1, false);\n    const scaleHandleGeometry = new BoxGeometry(0.125, 0.125, 0.125);\n    const lineGeometry = new BufferGeometry();\n    lineGeometry.setAttribute(\"position\", new Float32BufferAttribute([0, 0, 0, 1, 0, 0], 3));\n\n    const CircleGeometry = (radius, arc) => {\n      const geometry = new BufferGeometry();\n      const vertices = [];\n\n      for (let i = 0; i <= 64 * arc; ++i) {\n        vertices.push(0, Math.cos(i / 32 * Math.PI) * radius, Math.sin(i / 32 * Math.PI) * radius);\n      }\n\n      geometry.setAttribute(\"position\", new Float32BufferAttribute(vertices, 3));\n      return geometry;\n    };\n\n    const TranslateHelperGeometry = () => {\n      const geometry = new BufferGeometry();\n      geometry.setAttribute(\"position\", new Float32BufferAttribute([0, 0, 0, 1, 1, 1], 3));\n      return geometry;\n    };\n\n    const gizmoTranslate = {\n      X: [[new Mesh(arrowGeometry, matRed), [1, 0, 0], [0, 0, -Math.PI / 2], null, \"fwd\"], [new Mesh(arrowGeometry, matRed), [1, 0, 0], [0, 0, Math.PI / 2], null, \"bwd\"], [new Line(lineGeometry, matLineRed)]],\n      Y: [[new Mesh(arrowGeometry, matGreen), [0, 1, 0], null, null, \"fwd\"], [new Mesh(arrowGeometry, matGreen), [0, 1, 0], [Math.PI, 0, 0], null, \"bwd\"], [new Line(lineGeometry, matLineGreen), null, [0, 0, Math.PI / 2]]],\n      Z: [[new Mesh(arrowGeometry, matBlue), [0, 0, 1], [Math.PI / 2, 0, 0], null, \"fwd\"], [new Mesh(arrowGeometry, matBlue), [0, 0, 1], [-Math.PI / 2, 0, 0], null, \"bwd\"], [new Line(lineGeometry, matLineBlue), null, [0, -Math.PI / 2, 0]]],\n      XYZ: [[new Mesh(new OctahedronGeometry(0.1, 0), matWhiteTransparent.clone()), [0, 0, 0], [0, 0, 0]]],\n      XY: [[new Mesh(new PlaneGeometry(0.295, 0.295), matYellowTransparent.clone()), [0.15, 0.15, 0]], [new Line(lineGeometry, matLineYellow), [0.18, 0.3, 0], null, [0.125, 1, 1]], [new Line(lineGeometry, matLineYellow), [0.3, 0.18, 0], [0, 0, Math.PI / 2], [0.125, 1, 1]]],\n      YZ: [[new Mesh(new PlaneGeometry(0.295, 0.295), matCyanTransparent.clone()), [0, 0.15, 0.15], [0, Math.PI / 2, 0]], [new Line(lineGeometry, matLineCyan), [0, 0.18, 0.3], [0, 0, Math.PI / 2], [0.125, 1, 1]], [new Line(lineGeometry, matLineCyan), [0, 0.3, 0.18], [0, -Math.PI / 2, 0], [0.125, 1, 1]]],\n      XZ: [[new Mesh(new PlaneGeometry(0.295, 0.295), matMagentaTransparent.clone()), [0.15, 0, 0.15], [-Math.PI / 2, 0, 0]], [new Line(lineGeometry, matLineMagenta), [0.18, 0, 0.3], null, [0.125, 1, 1]], [new Line(lineGeometry, matLineMagenta), [0.3, 0, 0.18], [0, -Math.PI / 2, 0], [0.125, 1, 1]]]\n    };\n    const pickerTranslate = {\n      X: [[new Mesh(new CylinderGeometry(0.2, 0, 1, 4, 1, false), matInvisible), [0.6, 0, 0], [0, 0, -Math.PI / 2]]],\n      Y: [[new Mesh(new CylinderGeometry(0.2, 0, 1, 4, 1, false), matInvisible), [0, 0.6, 0]]],\n      Z: [[new Mesh(new CylinderGeometry(0.2, 0, 1, 4, 1, false), matInvisible), [0, 0, 0.6], [Math.PI / 2, 0, 0]]],\n      XYZ: [[new Mesh(new OctahedronGeometry(0.2, 0), matInvisible)]],\n      XY: [[new Mesh(new PlaneGeometry(0.4, 0.4), matInvisible), [0.2, 0.2, 0]]],\n      YZ: [[new Mesh(new PlaneGeometry(0.4, 0.4), matInvisible), [0, 0.2, 0.2], [0, Math.PI / 2, 0]]],\n      XZ: [[new Mesh(new PlaneGeometry(0.4, 0.4), matInvisible), [0.2, 0, 0.2], [-Math.PI / 2, 0, 0]]]\n    };\n    const helperTranslate = {\n      START: [[new Mesh(new OctahedronGeometry(0.01, 2), matHelper), null, null, null, \"helper\"]],\n      END: [[new Mesh(new OctahedronGeometry(0.01, 2), matHelper), null, null, null, \"helper\"]],\n      DELTA: [[new Line(TranslateHelperGeometry(), matHelper), null, null, null, \"helper\"]],\n      X: [[new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], \"helper\"]],\n      Y: [[new Line(lineGeometry, matHelper.clone()), [0, -1e3, 0], [0, 0, Math.PI / 2], [1e6, 1, 1], \"helper\"]],\n      Z: [[new Line(lineGeometry, matHelper.clone()), [0, 0, -1e3], [0, -Math.PI / 2, 0], [1e6, 1, 1], \"helper\"]]\n    };\n    const gizmoRotate = {\n      X: [[new Line(CircleGeometry(1, 0.5), matLineRed)], [new Mesh(new OctahedronGeometry(0.04, 0), matRed), [0, 0, 0.99], null, [1, 3, 1]]],\n      Y: [[new Line(CircleGeometry(1, 0.5), matLineGreen), null, [0, 0, -Math.PI / 2]], [new Mesh(new OctahedronGeometry(0.04, 0), matGreen), [0, 0, 0.99], null, [3, 1, 1]]],\n      Z: [[new Line(CircleGeometry(1, 0.5), matLineBlue), null, [0, Math.PI / 2, 0]], [new Mesh(new OctahedronGeometry(0.04, 0), matBlue), [0.99, 0, 0], null, [1, 3, 1]]],\n      E: [[new Line(CircleGeometry(1.25, 1), matLineYellowTransparent), null, [0, Math.PI / 2, 0]], [new Mesh(new CylinderGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent), [1.17, 0, 0], [0, 0, -Math.PI / 2], [1, 1, 1e-3]], [new Mesh(new CylinderGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent), [-1.17, 0, 0], [0, 0, Math.PI / 2], [1, 1, 1e-3]], [new Mesh(new CylinderGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent), [0, -1.17, 0], [Math.PI, 0, 0], [1, 1, 1e-3]], [new Mesh(new CylinderGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent), [0, 1.17, 0], [0, 0, 0], [1, 1, 1e-3]]],\n      XYZE: [[new Line(CircleGeometry(1, 1), matLineGray), null, [0, Math.PI / 2, 0]]]\n    };\n    const helperRotate = {\n      AXIS: [[new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], \"helper\"]]\n    };\n    const pickerRotate = {\n      X: [[new Mesh(new TorusGeometry(1, 0.1, 4, 24), matInvisible), [0, 0, 0], [0, -Math.PI / 2, -Math.PI / 2]]],\n      Y: [[new Mesh(new TorusGeometry(1, 0.1, 4, 24), matInvisible), [0, 0, 0], [Math.PI / 2, 0, 0]]],\n      Z: [[new Mesh(new TorusGeometry(1, 0.1, 4, 24), matInvisible), [0, 0, 0], [0, 0, -Math.PI / 2]]],\n      E: [[new Mesh(new TorusGeometry(1.25, 0.1, 2, 24), matInvisible)]],\n      XYZE: [[new Mesh(new SphereGeometry(0.7, 10, 8), matInvisible)]]\n    };\n    const gizmoScale = {\n      X: [[new Mesh(scaleHandleGeometry, matRed), [0.8, 0, 0], [0, 0, -Math.PI / 2]], [new Line(lineGeometry, matLineRed), null, null, [0.8, 1, 1]]],\n      Y: [[new Mesh(scaleHandleGeometry, matGreen), [0, 0.8, 0]], [new Line(lineGeometry, matLineGreen), null, [0, 0, Math.PI / 2], [0.8, 1, 1]]],\n      Z: [[new Mesh(scaleHandleGeometry, matBlue), [0, 0, 0.8], [Math.PI / 2, 0, 0]], [new Line(lineGeometry, matLineBlue), null, [0, -Math.PI / 2, 0], [0.8, 1, 1]]],\n      XY: [[new Mesh(scaleHandleGeometry, matYellowTransparent), [0.85, 0.85, 0], null, [2, 2, 0.2]], [new Line(lineGeometry, matLineYellow), [0.855, 0.98, 0], null, [0.125, 1, 1]], [new Line(lineGeometry, matLineYellow), [0.98, 0.855, 0], [0, 0, Math.PI / 2], [0.125, 1, 1]]],\n      YZ: [[new Mesh(scaleHandleGeometry, matCyanTransparent), [0, 0.85, 0.85], null, [0.2, 2, 2]], [new Line(lineGeometry, matLineCyan), [0, 0.855, 0.98], [0, 0, Math.PI / 2], [0.125, 1, 1]], [new Line(lineGeometry, matLineCyan), [0, 0.98, 0.855], [0, -Math.PI / 2, 0], [0.125, 1, 1]]],\n      XZ: [[new Mesh(scaleHandleGeometry, matMagentaTransparent), [0.85, 0, 0.85], null, [2, 0.2, 2]], [new Line(lineGeometry, matLineMagenta), [0.855, 0, 0.98], null, [0.125, 1, 1]], [new Line(lineGeometry, matLineMagenta), [0.98, 0, 0.855], [0, -Math.PI / 2, 0], [0.125, 1, 1]]],\n      XYZX: [[new Mesh(new BoxGeometry(0.125, 0.125, 0.125), matWhiteTransparent.clone()), [1.1, 0, 0]]],\n      XYZY: [[new Mesh(new BoxGeometry(0.125, 0.125, 0.125), matWhiteTransparent.clone()), [0, 1.1, 0]]],\n      XYZZ: [[new Mesh(new BoxGeometry(0.125, 0.125, 0.125), matWhiteTransparent.clone()), [0, 0, 1.1]]]\n    };\n    const pickerScale = {\n      X: [[new Mesh(new CylinderGeometry(0.2, 0, 0.8, 4, 1, false), matInvisible), [0.5, 0, 0], [0, 0, -Math.PI / 2]]],\n      Y: [[new Mesh(new CylinderGeometry(0.2, 0, 0.8, 4, 1, false), matInvisible), [0, 0.5, 0]]],\n      Z: [[new Mesh(new CylinderGeometry(0.2, 0, 0.8, 4, 1, false), matInvisible), [0, 0, 0.5], [Math.PI / 2, 0, 0]]],\n      XY: [[new Mesh(scaleHandleGeometry, matInvisible), [0.85, 0.85, 0], null, [3, 3, 0.2]]],\n      YZ: [[new Mesh(scaleHandleGeometry, matInvisible), [0, 0.85, 0.85], null, [0.2, 3, 3]]],\n      XZ: [[new Mesh(scaleHandleGeometry, matInvisible), [0.85, 0, 0.85], null, [3, 0.2, 3]]],\n      XYZX: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.2), matInvisible), [1.1, 0, 0]]],\n      XYZY: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.2), matInvisible), [0, 1.1, 0]]],\n      XYZZ: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.2), matInvisible), [0, 0, 1.1]]]\n    };\n    const helperScale = {\n      X: [[new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], \"helper\"]],\n      Y: [[new Line(lineGeometry, matHelper.clone()), [0, -1e3, 0], [0, 0, Math.PI / 2], [1e6, 1, 1], \"helper\"]],\n      Z: [[new Line(lineGeometry, matHelper.clone()), [0, 0, -1e3], [0, -Math.PI / 2, 0], [1e6, 1, 1], \"helper\"]]\n    };\n\n    const setupGizmo = gizmoMap => {\n      const gizmo = new Object3D();\n\n      for (let name in gizmoMap) {\n        for (let i = gizmoMap[name].length; i--;) {\n          const object = gizmoMap[name][i][0].clone();\n          const position = gizmoMap[name][i][1];\n          const rotation = gizmoMap[name][i][2];\n          const scale = gizmoMap[name][i][3];\n          const tag = gizmoMap[name][i][4];\n          object.name = name;\n          object.tag = tag;\n\n          if (position) {\n            object.position.set(position[0], position[1], position[2]);\n          }\n\n          if (rotation) {\n            object.rotation.set(rotation[0], rotation[1], rotation[2]);\n          }\n\n          if (scale) {\n            object.scale.set(scale[0], scale[1], scale[2]);\n          }\n\n          object.updateMatrix();\n          const tempGeometry = object.geometry.clone();\n          tempGeometry.applyMatrix4(object.matrix);\n          object.geometry = tempGeometry;\n          object.renderOrder = Infinity;\n          object.position.set(0, 0, 0);\n          object.rotation.set(0, 0, 0);\n          object.scale.set(1, 1, 1);\n          gizmo.add(object);\n        }\n      }\n\n      return gizmo;\n    };\n\n    this.gizmo = {};\n    this.picker = {};\n    this.helper = {};\n    this.add(this.gizmo[\"translate\"] = setupGizmo(gizmoTranslate));\n    this.add(this.gizmo[\"rotate\"] = setupGizmo(gizmoRotate));\n    this.add(this.gizmo[\"scale\"] = setupGizmo(gizmoScale));\n    this.add(this.picker[\"translate\"] = setupGizmo(pickerTranslate));\n    this.add(this.picker[\"rotate\"] = setupGizmo(pickerRotate));\n    this.add(this.picker[\"scale\"] = setupGizmo(pickerScale));\n    this.add(this.helper[\"translate\"] = setupGizmo(helperTranslate));\n    this.add(this.helper[\"rotate\"] = setupGizmo(helperRotate));\n    this.add(this.helper[\"scale\"] = setupGizmo(helperScale));\n    this.picker[\"translate\"].visible = false;\n    this.picker[\"rotate\"].visible = false;\n    this.picker[\"scale\"].visible = false;\n  }\n\n}\n\nclass TransformControlsPlane extends Mesh {\n  constructor() {\n    super(new PlaneGeometry(1e5, 1e5, 2, 2), new MeshBasicMaterial({\n      visible: false,\n      wireframe: true,\n      side: DoubleSide,\n      transparent: true,\n      opacity: 0.1,\n      toneMapped: false\n    }));\n\n    __publicField(this, \"isTransformControlsPlane\", true);\n\n    __publicField(this, \"type\", \"TransformControlsPlane\");\n\n    __publicField(this, \"unitX\", new Vector3(1, 0, 0));\n\n    __publicField(this, \"unitY\", new Vector3(0, 1, 0));\n\n    __publicField(this, \"unitZ\", new Vector3(0, 0, 1));\n\n    __publicField(this, \"tempVector\", new Vector3());\n\n    __publicField(this, \"dirVector\", new Vector3());\n\n    __publicField(this, \"alignVector\", new Vector3());\n\n    __publicField(this, \"tempMatrix\", new Matrix4());\n\n    __publicField(this, \"identityQuaternion\", new Quaternion()); // these are set from parent class TransformControls\n\n\n    __publicField(this, \"cameraQuaternion\", new Quaternion());\n\n    __publicField(this, \"worldPosition\", new Vector3());\n\n    __publicField(this, \"worldQuaternion\", new Quaternion());\n\n    __publicField(this, \"eye\", new Vector3());\n\n    __publicField(this, \"axis\", null);\n\n    __publicField(this, \"mode\", \"translate\");\n\n    __publicField(this, \"space\", \"world\");\n\n    __publicField(this, \"updateMatrixWorld\", () => {\n      let space = this.space;\n      this.position.copy(this.worldPosition);\n      if (this.mode === \"scale\") space = \"local\";\n      this.unitX.set(1, 0, 0).applyQuaternion(space === \"local\" ? this.worldQuaternion : this.identityQuaternion);\n      this.unitY.set(0, 1, 0).applyQuaternion(space === \"local\" ? this.worldQuaternion : this.identityQuaternion);\n      this.unitZ.set(0, 0, 1).applyQuaternion(space === \"local\" ? this.worldQuaternion : this.identityQuaternion);\n      this.alignVector.copy(this.unitY);\n\n      switch (this.mode) {\n        case \"translate\":\n        case \"scale\":\n          switch (this.axis) {\n            case \"X\":\n              this.alignVector.copy(this.eye).cross(this.unitX);\n              this.dirVector.copy(this.unitX).cross(this.alignVector);\n              break;\n\n            case \"Y\":\n              this.alignVector.copy(this.eye).cross(this.unitY);\n              this.dirVector.copy(this.unitY).cross(this.alignVector);\n              break;\n\n            case \"Z\":\n              this.alignVector.copy(this.eye).cross(this.unitZ);\n              this.dirVector.copy(this.unitZ).cross(this.alignVector);\n              break;\n\n            case \"XY\":\n              this.dirVector.copy(this.unitZ);\n              break;\n\n            case \"YZ\":\n              this.dirVector.copy(this.unitX);\n              break;\n\n            case \"XZ\":\n              this.alignVector.copy(this.unitZ);\n              this.dirVector.copy(this.unitY);\n              break;\n\n            case \"XYZ\":\n            case \"E\":\n              this.dirVector.set(0, 0, 0);\n              break;\n          }\n\n          break;\n\n        case \"rotate\":\n        default:\n          this.dirVector.set(0, 0, 0);\n      }\n\n      if (this.dirVector.length() === 0) {\n        this.quaternion.copy(this.cameraQuaternion);\n      } else {\n        this.tempMatrix.lookAt(this.tempVector.set(0, 0, 0), this.dirVector, this.alignVector);\n        this.quaternion.setFromRotationMatrix(this.tempMatrix);\n      }\n\n      super.updateMatrixWorld();\n    });\n  }\n\n}\n\nexport { TransformControls, TransformControlsGizmo, TransformControlsPlane };","map":{"version":3,"sources":["/Users/theodaguier/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/three-stdlib/controls/TransformControls.js"],"names":["__defProp","Object","defineProperty","__defNormalProp","obj","key","value","enumerable","configurable","writable","__publicField","Object3D","Raycaster","Vector3","Quaternion","Euler","Matrix4","MeshBasicMaterial","DoubleSide","LineBasicMaterial","CylinderGeometry","BoxGeometry","BufferGeometry","Float32BufferAttribute","Mesh","Line","OctahedronGeometry","PlaneGeometry","TorusGeometry","SphereGeometry","Color","TransformControls","constructor","camera","domElement","X","Y","Z","type","mode","object","raycaster","includeInvisible","allIntersections","intersectObject","i","length","visible","axis","enabled","dragging","position","copy","positionStart","quaternion","quaternionStart","scale","scaleStart","dispatchEvent","changeEvent","objectChangeEvent","pointStart","pointEnd","updateMatrixWorld","parent","console","error","matrixWorld","decompose","parentPosition","parentQuaternion","parentScale","worldPosition","worldQuaternion","worldScale","parentQuaternionInv","invert","worldQuaternionInv","cameraPosition","cameraQuaternion","cameraScale","eye","sub","normalize","pointer","setFromCamera","intersect","intersectObjectWithRay","gizmo","picker","name","button","planeIntersect","plane","space","snap","rotationSnap","rotation","x","Math","round","y","z","worldPositionStart","worldQuaternionStart","worldScaleStart","point","mouseDownEvent","offset","applyQuaternion","indexOf","divide","add","translationSnap","tempQuaternion","search","tempVector","setFromMatrixPosition","d","dot","tempVector2","set","multiply","scaleSnap","ROTATION_SPEED","distanceTo","rotationAxis","rotationAngle","angleTo","startNorm","endNorm","cross","unit","setFromAxisAngle","mouseUpEvent","event","_a","_b","ownerDocument","pointerLockElement","changedTouches","rect","getBoundingClientRect","clientX","left","width","clientY","top","height","pointerType","pointerHover","getPointer","style","touchAction","addEventListener","onPointerMove","pointerDown","pointerMove","removeEventListener","pointerUp","size","warn","document","onPointerDown","onPointerHover","onPointerUp","_c","_d","_e","_f","traverse","child","mesh","geometry","dispose","material","TransformControlsGizmo","TransformControlsPlane","propName","defaultValue","propValue","get","showX","showY","showZ","connect","identityQuaternion","helper","handles","concat","children","handle","factor","isOrthographicCamera","bottom","zoom","min","tan","PI","fov","multiplyScalar","tag","setFromEuler","tempEuler","abs","alignVector","unitX","unitY","unitZ","setFromRotationMatrix","lookAtMatrix","lookAt","zeroVector","clone","AXIS_HIDE_TRESHOLD","PLANE_HIDE_TRESHOLD","AXIS_FLIP_TRESHOLD","tempQuaternion2","atan2","multiplyQuaternions","tempOpacity","opacity","tempColor","color","lerp","split","some","a","gizmoMaterial","depthTest","depthWrite","transparent","side","fog","toneMapped","gizmoLineMaterial","linewidth","matInvisible","matHelper","matRed","matGreen","matBlue","matWhiteTransparent","matYellowTransparent","matCyanTransparent","matMagentaTransparent","matYellow","matLineRed","matLineGreen","matLineBlue","matLineCyan","matLineMagenta","matLineYellow","matLineGray","matLineYellowTransparent","arrowGeometry","scaleHandleGeometry","lineGeometry","setAttribute","CircleGeometry","radius","arc","vertices","push","cos","sin","TranslateHelperGeometry","gizmoTranslate","XYZ","XY","YZ","XZ","pickerTranslate","helperTranslate","START","END","DELTA","gizmoRotate","E","XYZE","helperRotate","AXIS","pickerRotate","gizmoScale","XYZX","XYZY","XYZZ","pickerScale","helperScale","setupGizmo","gizmoMap","updateMatrix","tempGeometry","applyMatrix4","matrix","renderOrder","Infinity","wireframe","dirVector","tempMatrix"],"mappings":"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","sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { Object3D, Raycaster, Vector3, Quaternion, Euler, Matrix4, MeshBasicMaterial, DoubleSide, LineBasicMaterial, CylinderGeometry, BoxGeometry, BufferGeometry, Float32BufferAttribute, Mesh, Line, OctahedronGeometry, PlaneGeometry, TorusGeometry, SphereGeometry, Color } from \"three\";\nclass TransformControls extends Object3D {\n  constructor(camera, domElement) {\n    super();\n    __publicField(this, \"isTransformControls\", true);\n    __publicField(this, \"visible\", false);\n    __publicField(this, \"domElement\");\n    __publicField(this, \"raycaster\", new Raycaster());\n    __publicField(this, \"gizmo\");\n    __publicField(this, \"plane\");\n    __publicField(this, \"tempVector\", new Vector3());\n    __publicField(this, \"tempVector2\", new Vector3());\n    __publicField(this, \"tempQuaternion\", new Quaternion());\n    __publicField(this, \"unit\", {\n      X: new Vector3(1, 0, 0),\n      Y: new Vector3(0, 1, 0),\n      Z: new Vector3(0, 0, 1)\n    });\n    __publicField(this, \"pointStart\", new Vector3());\n    __publicField(this, \"pointEnd\", new Vector3());\n    __publicField(this, \"offset\", new Vector3());\n    __publicField(this, \"rotationAxis\", new Vector3());\n    __publicField(this, \"startNorm\", new Vector3());\n    __publicField(this, \"endNorm\", new Vector3());\n    __publicField(this, \"rotationAngle\", 0);\n    __publicField(this, \"cameraPosition\", new Vector3());\n    __publicField(this, \"cameraQuaternion\", new Quaternion());\n    __publicField(this, \"cameraScale\", new Vector3());\n    __publicField(this, \"parentPosition\", new Vector3());\n    __publicField(this, \"parentQuaternion\", new Quaternion());\n    __publicField(this, \"parentQuaternionInv\", new Quaternion());\n    __publicField(this, \"parentScale\", new Vector3());\n    __publicField(this, \"worldPositionStart\", new Vector3());\n    __publicField(this, \"worldQuaternionStart\", new Quaternion());\n    __publicField(this, \"worldScaleStart\", new Vector3());\n    __publicField(this, \"worldPosition\", new Vector3());\n    __publicField(this, \"worldQuaternion\", new Quaternion());\n    __publicField(this, \"worldQuaternionInv\", new Quaternion());\n    __publicField(this, \"worldScale\", new Vector3());\n    __publicField(this, \"eye\", new Vector3());\n    __publicField(this, \"positionStart\", new Vector3());\n    __publicField(this, \"quaternionStart\", new Quaternion());\n    __publicField(this, \"scaleStart\", new Vector3());\n    __publicField(this, \"camera\");\n    __publicField(this, \"object\");\n    __publicField(this, \"enabled\", true);\n    __publicField(this, \"axis\", null);\n    __publicField(this, \"mode\", \"translate\");\n    __publicField(this, \"translationSnap\", null);\n    __publicField(this, \"rotationSnap\", null);\n    __publicField(this, \"scaleSnap\", null);\n    __publicField(this, \"space\", \"world\");\n    __publicField(this, \"size\", 1);\n    __publicField(this, \"dragging\", false);\n    __publicField(this, \"showX\", true);\n    __publicField(this, \"showY\", true);\n    __publicField(this, \"showZ\", true);\n    // events\n    __publicField(this, \"changeEvent\", { type: \"change\" });\n    __publicField(this, \"mouseDownEvent\", { type: \"mouseDown\", mode: this.mode });\n    __publicField(this, \"mouseUpEvent\", { type: \"mouseUp\", mode: this.mode });\n    __publicField(this, \"objectChangeEvent\", { type: \"objectChange\" });\n    __publicField(this, \"intersectObjectWithRay\", (object, raycaster, includeInvisible) => {\n      const allIntersections = raycaster.intersectObject(object, true);\n      for (let i = 0; i < allIntersections.length; i++) {\n        if (allIntersections[i].object.visible || includeInvisible) {\n          return allIntersections[i];\n        }\n      }\n      return false;\n    });\n    // Set current object\n    __publicField(this, \"attach\", (object) => {\n      this.object = object;\n      this.visible = true;\n      return this;\n    });\n    // Detatch from object\n    __publicField(this, \"detach\", () => {\n      this.object = void 0;\n      this.visible = false;\n      this.axis = null;\n      return this;\n    });\n    // Reset\n    __publicField(this, \"reset\", () => {\n      if (!this.enabled)\n        return this;\n      if (this.dragging) {\n        if (this.object !== void 0) {\n          this.object.position.copy(this.positionStart);\n          this.object.quaternion.copy(this.quaternionStart);\n          this.object.scale.copy(this.scaleStart);\n          this.dispatchEvent(this.changeEvent);\n          this.dispatchEvent(this.objectChangeEvent);\n          this.pointStart.copy(this.pointEnd);\n        }\n      }\n      return this;\n    });\n    __publicField(this, \"updateMatrixWorld\", () => {\n      if (this.object !== void 0) {\n        this.object.updateMatrixWorld();\n        if (this.object.parent === null) {\n          console.error(\"TransformControls: The attached 3D object must be a part of the scene graph.\");\n        } else {\n          this.object.parent.matrixWorld.decompose(this.parentPosition, this.parentQuaternion, this.parentScale);\n        }\n        this.object.matrixWorld.decompose(this.worldPosition, this.worldQuaternion, this.worldScale);\n        this.parentQuaternionInv.copy(this.parentQuaternion).invert();\n        this.worldQuaternionInv.copy(this.worldQuaternion).invert();\n      }\n      this.camera.updateMatrixWorld();\n      this.camera.matrixWorld.decompose(this.cameraPosition, this.cameraQuaternion, this.cameraScale);\n      this.eye.copy(this.cameraPosition).sub(this.worldPosition).normalize();\n      super.updateMatrixWorld();\n    });\n    __publicField(this, \"pointerHover\", (pointer) => {\n      if (this.object === void 0 || this.dragging === true)\n        return;\n      this.raycaster.setFromCamera(pointer, this.camera);\n      const intersect = this.intersectObjectWithRay(this.gizmo.picker[this.mode], this.raycaster);\n      if (intersect) {\n        this.axis = intersect.object.name;\n      } else {\n        this.axis = null;\n      }\n    });\n    __publicField(this, \"pointerDown\", (pointer) => {\n      if (this.object === void 0 || this.dragging === true || pointer.button !== 0)\n        return;\n      if (this.axis !== null) {\n        this.raycaster.setFromCamera(pointer, this.camera);\n        const planeIntersect = this.intersectObjectWithRay(this.plane, this.raycaster, true);\n        if (planeIntersect) {\n          let space = this.space;\n          if (this.mode === \"scale\") {\n            space = \"local\";\n          } else if (this.axis === \"E\" || this.axis === \"XYZE\" || this.axis === \"XYZ\") {\n            space = \"world\";\n          }\n          if (space === \"local\" && this.mode === \"rotate\") {\n            const snap = this.rotationSnap;\n            if (this.axis === \"X\" && snap)\n              this.object.rotation.x = Math.round(this.object.rotation.x / snap) * snap;\n            if (this.axis === \"Y\" && snap)\n              this.object.rotation.y = Math.round(this.object.rotation.y / snap) * snap;\n            if (this.axis === \"Z\" && snap)\n              this.object.rotation.z = Math.round(this.object.rotation.z / snap) * snap;\n          }\n          this.object.updateMatrixWorld();\n          if (this.object.parent) {\n            this.object.parent.updateMatrixWorld();\n          }\n          this.positionStart.copy(this.object.position);\n          this.quaternionStart.copy(this.object.quaternion);\n          this.scaleStart.copy(this.object.scale);\n          this.object.matrixWorld.decompose(this.worldPositionStart, this.worldQuaternionStart, this.worldScaleStart);\n          this.pointStart.copy(planeIntersect.point).sub(this.worldPositionStart);\n        }\n        this.dragging = true;\n        this.mouseDownEvent.mode = this.mode;\n        this.dispatchEvent(this.mouseDownEvent);\n      }\n    });\n    __publicField(this, \"pointerMove\", (pointer) => {\n      const axis = this.axis;\n      const mode = this.mode;\n      const object = this.object;\n      let space = this.space;\n      if (mode === \"scale\") {\n        space = \"local\";\n      } else if (axis === \"E\" || axis === \"XYZE\" || axis === \"XYZ\") {\n        space = \"world\";\n      }\n      if (object === void 0 || axis === null || this.dragging === false || pointer.button !== -1)\n        return;\n      this.raycaster.setFromCamera(pointer, this.camera);\n      const planeIntersect = this.intersectObjectWithRay(this.plane, this.raycaster, true);\n      if (!planeIntersect)\n        return;\n      this.pointEnd.copy(planeIntersect.point).sub(this.worldPositionStart);\n      if (mode === \"translate\") {\n        this.offset.copy(this.pointEnd).sub(this.pointStart);\n        if (space === \"local\" && axis !== \"XYZ\") {\n          this.offset.applyQuaternion(this.worldQuaternionInv);\n        }\n        if (axis.indexOf(\"X\") === -1)\n          this.offset.x = 0;\n        if (axis.indexOf(\"Y\") === -1)\n          this.offset.y = 0;\n        if (axis.indexOf(\"Z\") === -1)\n          this.offset.z = 0;\n        if (space === \"local\" && axis !== \"XYZ\") {\n          this.offset.applyQuaternion(this.quaternionStart).divide(this.parentScale);\n        } else {\n          this.offset.applyQuaternion(this.parentQuaternionInv).divide(this.parentScale);\n        }\n        object.position.copy(this.offset).add(this.positionStart);\n        if (this.translationSnap) {\n          if (space === \"local\") {\n            object.position.applyQuaternion(this.tempQuaternion.copy(this.quaternionStart).invert());\n            if (axis.search(\"X\") !== -1) {\n              object.position.x = Math.round(object.position.x / this.translationSnap) * this.translationSnap;\n            }\n            if (axis.search(\"Y\") !== -1) {\n              object.position.y = Math.round(object.position.y / this.translationSnap) * this.translationSnap;\n            }\n            if (axis.search(\"Z\") !== -1) {\n              object.position.z = Math.round(object.position.z / this.translationSnap) * this.translationSnap;\n            }\n            object.position.applyQuaternion(this.quaternionStart);\n          }\n          if (space === \"world\") {\n            if (object.parent) {\n              object.position.add(this.tempVector.setFromMatrixPosition(object.parent.matrixWorld));\n            }\n            if (axis.search(\"X\") !== -1) {\n              object.position.x = Math.round(object.position.x / this.translationSnap) * this.translationSnap;\n            }\n            if (axis.search(\"Y\") !== -1) {\n              object.position.y = Math.round(object.position.y / this.translationSnap) * this.translationSnap;\n            }\n            if (axis.search(\"Z\") !== -1) {\n              object.position.z = Math.round(object.position.z / this.translationSnap) * this.translationSnap;\n            }\n            if (object.parent) {\n              object.position.sub(this.tempVector.setFromMatrixPosition(object.parent.matrixWorld));\n            }\n          }\n        }\n      } else if (mode === \"scale\") {\n        if (axis.search(\"XYZ\") !== -1) {\n          let d = this.pointEnd.length() / this.pointStart.length();\n          if (this.pointEnd.dot(this.pointStart) < 0)\n            d *= -1;\n          this.tempVector2.set(d, d, d);\n        } else {\n          this.tempVector.copy(this.pointStart);\n          this.tempVector2.copy(this.pointEnd);\n          this.tempVector.applyQuaternion(this.worldQuaternionInv);\n          this.tempVector2.applyQuaternion(this.worldQuaternionInv);\n          this.tempVector2.divide(this.tempVector);\n          if (axis.search(\"X\") === -1) {\n            this.tempVector2.x = 1;\n          }\n          if (axis.search(\"Y\") === -1) {\n            this.tempVector2.y = 1;\n          }\n          if (axis.search(\"Z\") === -1) {\n            this.tempVector2.z = 1;\n          }\n        }\n        object.scale.copy(this.scaleStart).multiply(this.tempVector2);\n        if (this.scaleSnap && this.object) {\n          if (axis.search(\"X\") !== -1) {\n            this.object.scale.x = Math.round(object.scale.x / this.scaleSnap) * this.scaleSnap || this.scaleSnap;\n          }\n          if (axis.search(\"Y\") !== -1) {\n            object.scale.y = Math.round(object.scale.y / this.scaleSnap) * this.scaleSnap || this.scaleSnap;\n          }\n          if (axis.search(\"Z\") !== -1) {\n            object.scale.z = Math.round(object.scale.z / this.scaleSnap) * this.scaleSnap || this.scaleSnap;\n          }\n        }\n      } else if (mode === \"rotate\") {\n        this.offset.copy(this.pointEnd).sub(this.pointStart);\n        const ROTATION_SPEED = 20 / this.worldPosition.distanceTo(this.tempVector.setFromMatrixPosition(this.camera.matrixWorld));\n        if (axis === \"E\") {\n          this.rotationAxis.copy(this.eye);\n          this.rotationAngle = this.pointEnd.angleTo(this.pointStart);\n          this.startNorm.copy(this.pointStart).normalize();\n          this.endNorm.copy(this.pointEnd).normalize();\n          this.rotationAngle *= this.endNorm.cross(this.startNorm).dot(this.eye) < 0 ? 1 : -1;\n        } else if (axis === \"XYZE\") {\n          this.rotationAxis.copy(this.offset).cross(this.eye).normalize();\n          this.rotationAngle = this.offset.dot(this.tempVector.copy(this.rotationAxis).cross(this.eye)) * ROTATION_SPEED;\n        } else if (axis === \"X\" || axis === \"Y\" || axis === \"Z\") {\n          this.rotationAxis.copy(this.unit[axis]);\n          this.tempVector.copy(this.unit[axis]);\n          if (space === \"local\") {\n            this.tempVector.applyQuaternion(this.worldQuaternion);\n          }\n          this.rotationAngle = this.offset.dot(this.tempVector.cross(this.eye).normalize()) * ROTATION_SPEED;\n        }\n        if (this.rotationSnap) {\n          this.rotationAngle = Math.round(this.rotationAngle / this.rotationSnap) * this.rotationSnap;\n        }\n        if (space === \"local\" && axis !== \"E\" && axis !== \"XYZE\") {\n          object.quaternion.copy(this.quaternionStart);\n          object.quaternion.multiply(this.tempQuaternion.setFromAxisAngle(this.rotationAxis, this.rotationAngle)).normalize();\n        } else {\n          this.rotationAxis.applyQuaternion(this.parentQuaternionInv);\n          object.quaternion.copy(this.tempQuaternion.setFromAxisAngle(this.rotationAxis, this.rotationAngle));\n          object.quaternion.multiply(this.quaternionStart).normalize();\n        }\n      }\n      this.dispatchEvent(this.changeEvent);\n      this.dispatchEvent(this.objectChangeEvent);\n    });\n    __publicField(this, \"pointerUp\", (pointer) => {\n      if (pointer.button !== 0)\n        return;\n      if (this.dragging && this.axis !== null) {\n        this.mouseUpEvent.mode = this.mode;\n        this.dispatchEvent(this.mouseUpEvent);\n      }\n      this.dragging = false;\n      this.axis = null;\n    });\n    __publicField(this, \"getPointer\", (event) => {\n      var _a, _b;\n      if (this.domElement && ((_a = this.domElement.ownerDocument) == null ? void 0 : _a.pointerLockElement)) {\n        return {\n          x: 0,\n          y: 0,\n          button: event.button\n        };\n      } else {\n        const pointer = event.changedTouches ? event.changedTouches[0] : event;\n        const rect = (_b = this.domElement) == null ? void 0 : _b.getBoundingClientRect();\n        return {\n          x: (pointer.clientX - rect.left) / rect.width * 2 - 1,\n          y: -(pointer.clientY - rect.top) / rect.height * 2 + 1,\n          button: event.button\n        };\n      }\n    });\n    __publicField(this, \"onPointerHover\", (event) => {\n      if (!this.enabled)\n        return;\n      switch (event.pointerType) {\n        case \"mouse\":\n        case \"pen\":\n          this.pointerHover(this.getPointer(event));\n          break;\n      }\n    });\n    __publicField(this, \"onPointerDown\", (event) => {\n      if (!this.enabled || !this.domElement)\n        return;\n      this.domElement.style.touchAction = \"none\";\n      this.domElement.ownerDocument.addEventListener(\"pointermove\", this.onPointerMove);\n      this.pointerHover(this.getPointer(event));\n      this.pointerDown(this.getPointer(event));\n    });\n    __publicField(this, \"onPointerMove\", (event) => {\n      if (!this.enabled)\n        return;\n      this.pointerMove(this.getPointer(event));\n    });\n    __publicField(this, \"onPointerUp\", (event) => {\n      if (!this.enabled || !this.domElement)\n        return;\n      this.domElement.style.touchAction = \"\";\n      this.domElement.ownerDocument.removeEventListener(\"pointermove\", this.onPointerMove);\n      this.pointerUp(this.getPointer(event));\n    });\n    __publicField(this, \"getMode\", () => this.mode);\n    __publicField(this, \"setMode\", (mode) => {\n      this.mode = mode;\n    });\n    __publicField(this, \"setTranslationSnap\", (translationSnap) => {\n      this.translationSnap = translationSnap;\n    });\n    __publicField(this, \"setRotationSnap\", (rotationSnap) => {\n      this.rotationSnap = rotationSnap;\n    });\n    __publicField(this, \"setScaleSnap\", (scaleSnap) => {\n      this.scaleSnap = scaleSnap;\n    });\n    __publicField(this, \"setSize\", (size) => {\n      this.size = size;\n    });\n    __publicField(this, \"setSpace\", (space) => {\n      this.space = space;\n    });\n    __publicField(this, \"update\", () => {\n      console.warn(\n        \"THREE.TransformControls: update function has no more functionality and therefore has been deprecated.\"\n      );\n    });\n    __publicField(this, \"connect\", (domElement) => {\n      if (domElement === document) {\n        console.error(\n          'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.'\n        );\n      }\n      this.domElement = domElement;\n      this.domElement.addEventListener(\"pointerdown\", this.onPointerDown);\n      this.domElement.addEventListener(\"pointermove\", this.onPointerHover);\n      this.domElement.ownerDocument.addEventListener(\"pointerup\", this.onPointerUp);\n    });\n    __publicField(this, \"dispose\", () => {\n      var _a, _b, _c, _d, _e, _f;\n      (_a = this.domElement) == null ? void 0 : _a.removeEventListener(\"pointerdown\", this.onPointerDown);\n      (_b = this.domElement) == null ? void 0 : _b.removeEventListener(\"pointermove\", this.onPointerHover);\n      (_d = (_c = this.domElement) == null ? void 0 : _c.ownerDocument) == null ? void 0 : _d.removeEventListener(\"pointermove\", this.onPointerMove);\n      (_f = (_e = this.domElement) == null ? void 0 : _e.ownerDocument) == null ? void 0 : _f.removeEventListener(\"pointerup\", this.onPointerUp);\n      this.traverse((child) => {\n        const mesh = child;\n        if (mesh.geometry) {\n          mesh.geometry.dispose();\n        }\n        if (mesh.material) {\n          mesh.material.dispose();\n        }\n      });\n    });\n    this.domElement = domElement;\n    this.camera = camera;\n    this.gizmo = new TransformControlsGizmo();\n    this.add(this.gizmo);\n    this.plane = new TransformControlsPlane();\n    this.add(this.plane);\n    const defineProperty = (propName, defaultValue) => {\n      let propValue = defaultValue;\n      Object.defineProperty(this, propName, {\n        get: function() {\n          return propValue !== void 0 ? propValue : defaultValue;\n        },\n        set: function(value) {\n          if (propValue !== value) {\n            propValue = value;\n            this.plane[propName] = value;\n            this.gizmo[propName] = value;\n            this.dispatchEvent({ type: propName + \"-changed\", value });\n            this.dispatchEvent(this.changeEvent);\n          }\n        }\n      });\n      this[propName] = defaultValue;\n      this.plane[propName] = defaultValue;\n      this.gizmo[propName] = defaultValue;\n    };\n    defineProperty(\"camera\", this.camera);\n    defineProperty(\"object\", this.object);\n    defineProperty(\"enabled\", this.enabled);\n    defineProperty(\"axis\", this.axis);\n    defineProperty(\"mode\", this.mode);\n    defineProperty(\"translationSnap\", this.translationSnap);\n    defineProperty(\"rotationSnap\", this.rotationSnap);\n    defineProperty(\"scaleSnap\", this.scaleSnap);\n    defineProperty(\"space\", this.space);\n    defineProperty(\"size\", this.size);\n    defineProperty(\"dragging\", this.dragging);\n    defineProperty(\"showX\", this.showX);\n    defineProperty(\"showY\", this.showY);\n    defineProperty(\"showZ\", this.showZ);\n    defineProperty(\"worldPosition\", this.worldPosition);\n    defineProperty(\"worldPositionStart\", this.worldPositionStart);\n    defineProperty(\"worldQuaternion\", this.worldQuaternion);\n    defineProperty(\"worldQuaternionStart\", this.worldQuaternionStart);\n    defineProperty(\"cameraPosition\", this.cameraPosition);\n    defineProperty(\"cameraQuaternion\", this.cameraQuaternion);\n    defineProperty(\"pointStart\", this.pointStart);\n    defineProperty(\"pointEnd\", this.pointEnd);\n    defineProperty(\"rotationAxis\", this.rotationAxis);\n    defineProperty(\"rotationAngle\", this.rotationAngle);\n    defineProperty(\"eye\", this.eye);\n    if (domElement !== void 0)\n      this.connect(domElement);\n  }\n}\nclass TransformControlsGizmo extends Object3D {\n  constructor() {\n    super();\n    __publicField(this, \"isTransformControlsGizmo\", true);\n    __publicField(this, \"type\", \"TransformControlsGizmo\");\n    __publicField(this, \"tempVector\", new Vector3(0, 0, 0));\n    __publicField(this, \"tempEuler\", new Euler());\n    __publicField(this, \"alignVector\", new Vector3(0, 1, 0));\n    __publicField(this, \"zeroVector\", new Vector3(0, 0, 0));\n    __publicField(this, \"lookAtMatrix\", new Matrix4());\n    __publicField(this, \"tempQuaternion\", new Quaternion());\n    __publicField(this, \"tempQuaternion2\", new Quaternion());\n    __publicField(this, \"identityQuaternion\", new Quaternion());\n    __publicField(this, \"unitX\", new Vector3(1, 0, 0));\n    __publicField(this, \"unitY\", new Vector3(0, 1, 0));\n    __publicField(this, \"unitZ\", new Vector3(0, 0, 1));\n    __publicField(this, \"gizmo\");\n    __publicField(this, \"picker\");\n    __publicField(this, \"helper\");\n    // these are set from parent class TransformControls\n    __publicField(this, \"rotationAxis\", new Vector3());\n    __publicField(this, \"cameraPosition\", new Vector3());\n    __publicField(this, \"worldPositionStart\", new Vector3());\n    __publicField(this, \"worldQuaternionStart\", new Quaternion());\n    __publicField(this, \"worldPosition\", new Vector3());\n    __publicField(this, \"worldQuaternion\", new Quaternion());\n    __publicField(this, \"eye\", new Vector3());\n    __publicField(this, \"camera\", null);\n    __publicField(this, \"enabled\", true);\n    __publicField(this, \"axis\", null);\n    __publicField(this, \"mode\", \"translate\");\n    __publicField(this, \"space\", \"world\");\n    __publicField(this, \"size\", 1);\n    __publicField(this, \"dragging\", false);\n    __publicField(this, \"showX\", true);\n    __publicField(this, \"showY\", true);\n    __publicField(this, \"showZ\", true);\n    // updateMatrixWorld will update transformations and appearance of individual handles\n    __publicField(this, \"updateMatrixWorld\", () => {\n      let space = this.space;\n      if (this.mode === \"scale\") {\n        space = \"local\";\n      }\n      const quaternion = space === \"local\" ? this.worldQuaternion : this.identityQuaternion;\n      this.gizmo[\"translate\"].visible = this.mode === \"translate\";\n      this.gizmo[\"rotate\"].visible = this.mode === \"rotate\";\n      this.gizmo[\"scale\"].visible = this.mode === \"scale\";\n      this.helper[\"translate\"].visible = this.mode === \"translate\";\n      this.helper[\"rotate\"].visible = this.mode === \"rotate\";\n      this.helper[\"scale\"].visible = this.mode === \"scale\";\n      let handles = [];\n      handles = handles.concat(this.picker[this.mode].children);\n      handles = handles.concat(this.gizmo[this.mode].children);\n      handles = handles.concat(this.helper[this.mode].children);\n      for (let i = 0; i < handles.length; i++) {\n        const handle = handles[i];\n        handle.visible = true;\n        handle.rotation.set(0, 0, 0);\n        handle.position.copy(this.worldPosition);\n        let factor;\n        if (this.camera.isOrthographicCamera) {\n          factor = (this.camera.top - this.camera.bottom) / this.camera.zoom;\n        } else {\n          factor = this.worldPosition.distanceTo(this.cameraPosition) * Math.min(1.9 * Math.tan(Math.PI * this.camera.fov / 360) / this.camera.zoom, 7);\n        }\n        handle.scale.set(1, 1, 1).multiplyScalar(factor * this.size / 7);\n        if (handle.tag === \"helper\") {\n          handle.visible = false;\n          if (handle.name === \"AXIS\") {\n            handle.position.copy(this.worldPositionStart);\n            handle.visible = !!this.axis;\n            if (this.axis === \"X\") {\n              this.tempQuaternion.setFromEuler(this.tempEuler.set(0, 0, 0));\n              handle.quaternion.copy(quaternion).multiply(this.tempQuaternion);\n              if (Math.abs(this.alignVector.copy(this.unitX).applyQuaternion(quaternion).dot(this.eye)) > 0.9) {\n                handle.visible = false;\n              }\n            }\n            if (this.axis === \"Y\") {\n              this.tempQuaternion.setFromEuler(this.tempEuler.set(0, 0, Math.PI / 2));\n              handle.quaternion.copy(quaternion).multiply(this.tempQuaternion);\n              if (Math.abs(this.alignVector.copy(this.unitY).applyQuaternion(quaternion).dot(this.eye)) > 0.9) {\n                handle.visible = false;\n              }\n            }\n            if (this.axis === \"Z\") {\n              this.tempQuaternion.setFromEuler(this.tempEuler.set(0, Math.PI / 2, 0));\n              handle.quaternion.copy(quaternion).multiply(this.tempQuaternion);\n              if (Math.abs(this.alignVector.copy(this.unitZ).applyQuaternion(quaternion).dot(this.eye)) > 0.9) {\n                handle.visible = false;\n              }\n            }\n            if (this.axis === \"XYZE\") {\n              this.tempQuaternion.setFromEuler(this.tempEuler.set(0, Math.PI / 2, 0));\n              this.alignVector.copy(this.rotationAxis);\n              handle.quaternion.setFromRotationMatrix(\n                this.lookAtMatrix.lookAt(this.zeroVector, this.alignVector, this.unitY)\n              );\n              handle.quaternion.multiply(this.tempQuaternion);\n              handle.visible = this.dragging;\n            }\n            if (this.axis === \"E\") {\n              handle.visible = false;\n            }\n          } else if (handle.name === \"START\") {\n            handle.position.copy(this.worldPositionStart);\n            handle.visible = this.dragging;\n          } else if (handle.name === \"END\") {\n            handle.position.copy(this.worldPosition);\n            handle.visible = this.dragging;\n          } else if (handle.name === \"DELTA\") {\n            handle.position.copy(this.worldPositionStart);\n            handle.quaternion.copy(this.worldQuaternionStart);\n            this.tempVector.set(1e-10, 1e-10, 1e-10).add(this.worldPositionStart).sub(this.worldPosition).multiplyScalar(-1);\n            this.tempVector.applyQuaternion(this.worldQuaternionStart.clone().invert());\n            handle.scale.copy(this.tempVector);\n            handle.visible = this.dragging;\n          } else {\n            handle.quaternion.copy(quaternion);\n            if (this.dragging) {\n              handle.position.copy(this.worldPositionStart);\n            } else {\n              handle.position.copy(this.worldPosition);\n            }\n            if (this.axis) {\n              handle.visible = this.axis.search(handle.name) !== -1;\n            }\n          }\n          continue;\n        }\n        handle.quaternion.copy(quaternion);\n        if (this.mode === \"translate\" || this.mode === \"scale\") {\n          const AXIS_HIDE_TRESHOLD = 0.99;\n          const PLANE_HIDE_TRESHOLD = 0.2;\n          const AXIS_FLIP_TRESHOLD = 0;\n          if (handle.name === \"X\" || handle.name === \"XYZX\") {\n            if (Math.abs(this.alignVector.copy(this.unitX).applyQuaternion(quaternion).dot(this.eye)) > AXIS_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n          if (handle.name === \"Y\" || handle.name === \"XYZY\") {\n            if (Math.abs(this.alignVector.copy(this.unitY).applyQuaternion(quaternion).dot(this.eye)) > AXIS_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n          if (handle.name === \"Z\" || handle.name === \"XYZZ\") {\n            if (Math.abs(this.alignVector.copy(this.unitZ).applyQuaternion(quaternion).dot(this.eye)) > AXIS_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n          if (handle.name === \"XY\") {\n            if (Math.abs(this.alignVector.copy(this.unitZ).applyQuaternion(quaternion).dot(this.eye)) < PLANE_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n          if (handle.name === \"YZ\") {\n            if (Math.abs(this.alignVector.copy(this.unitX).applyQuaternion(quaternion).dot(this.eye)) < PLANE_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n          if (handle.name === \"XZ\") {\n            if (Math.abs(this.alignVector.copy(this.unitY).applyQuaternion(quaternion).dot(this.eye)) < PLANE_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n          if (handle.name.search(\"X\") !== -1) {\n            if (this.alignVector.copy(this.unitX).applyQuaternion(quaternion).dot(this.eye) < AXIS_FLIP_TRESHOLD) {\n              if (handle.tag === \"fwd\") {\n                handle.visible = false;\n              } else {\n                handle.scale.x *= -1;\n              }\n            } else if (handle.tag === \"bwd\") {\n              handle.visible = false;\n            }\n          }\n          if (handle.name.search(\"Y\") !== -1) {\n            if (this.alignVector.copy(this.unitY).applyQuaternion(quaternion).dot(this.eye) < AXIS_FLIP_TRESHOLD) {\n              if (handle.tag === \"fwd\") {\n                handle.visible = false;\n              } else {\n                handle.scale.y *= -1;\n              }\n            } else if (handle.tag === \"bwd\") {\n              handle.visible = false;\n            }\n          }\n          if (handle.name.search(\"Z\") !== -1) {\n            if (this.alignVector.copy(this.unitZ).applyQuaternion(quaternion).dot(this.eye) < AXIS_FLIP_TRESHOLD) {\n              if (handle.tag === \"fwd\") {\n                handle.visible = false;\n              } else {\n                handle.scale.z *= -1;\n              }\n            } else if (handle.tag === \"bwd\") {\n              handle.visible = false;\n            }\n          }\n        } else if (this.mode === \"rotate\") {\n          this.tempQuaternion2.copy(quaternion);\n          this.alignVector.copy(this.eye).applyQuaternion(this.tempQuaternion.copy(quaternion).invert());\n          if (handle.name.search(\"E\") !== -1) {\n            handle.quaternion.setFromRotationMatrix(this.lookAtMatrix.lookAt(this.eye, this.zeroVector, this.unitY));\n          }\n          if (handle.name === \"X\") {\n            this.tempQuaternion.setFromAxisAngle(this.unitX, Math.atan2(-this.alignVector.y, this.alignVector.z));\n            this.tempQuaternion.multiplyQuaternions(this.tempQuaternion2, this.tempQuaternion);\n            handle.quaternion.copy(this.tempQuaternion);\n          }\n          if (handle.name === \"Y\") {\n            this.tempQuaternion.setFromAxisAngle(this.unitY, Math.atan2(this.alignVector.x, this.alignVector.z));\n            this.tempQuaternion.multiplyQuaternions(this.tempQuaternion2, this.tempQuaternion);\n            handle.quaternion.copy(this.tempQuaternion);\n          }\n          if (handle.name === \"Z\") {\n            this.tempQuaternion.setFromAxisAngle(this.unitZ, Math.atan2(this.alignVector.y, this.alignVector.x));\n            this.tempQuaternion.multiplyQuaternions(this.tempQuaternion2, this.tempQuaternion);\n            handle.quaternion.copy(this.tempQuaternion);\n          }\n        }\n        handle.visible = handle.visible && (handle.name.indexOf(\"X\") === -1 || this.showX);\n        handle.visible = handle.visible && (handle.name.indexOf(\"Y\") === -1 || this.showY);\n        handle.visible = handle.visible && (handle.name.indexOf(\"Z\") === -1 || this.showZ);\n        handle.visible = handle.visible && (handle.name.indexOf(\"E\") === -1 || this.showX && this.showY && this.showZ);\n        handle.material.tempOpacity = handle.material.tempOpacity || handle.material.opacity;\n        handle.material.tempColor = handle.material.tempColor || handle.material.color.clone();\n        handle.material.color.copy(handle.material.tempColor);\n        handle.material.opacity = handle.material.tempOpacity;\n        if (!this.enabled) {\n          handle.material.opacity *= 0.5;\n          handle.material.color.lerp(new Color(1, 1, 1), 0.5);\n        } else if (this.axis) {\n          if (handle.name === this.axis) {\n            handle.material.opacity = 1;\n            handle.material.color.lerp(new Color(1, 1, 1), 0.5);\n          } else if (this.axis.split(\"\").some(function(a) {\n            return handle.name === a;\n          })) {\n            handle.material.opacity = 1;\n            handle.material.color.lerp(new Color(1, 1, 1), 0.5);\n          } else {\n            handle.material.opacity *= 0.25;\n            handle.material.color.lerp(new Color(1, 1, 1), 0.5);\n          }\n        }\n      }\n      super.updateMatrixWorld();\n    });\n    const gizmoMaterial = new MeshBasicMaterial({\n      depthTest: false,\n      depthWrite: false,\n      transparent: true,\n      side: DoubleSide,\n      fog: false,\n      toneMapped: false\n    });\n    const gizmoLineMaterial = new LineBasicMaterial({\n      depthTest: false,\n      depthWrite: false,\n      transparent: true,\n      linewidth: 1,\n      fog: false,\n      toneMapped: false\n    });\n    const matInvisible = gizmoMaterial.clone();\n    matInvisible.opacity = 0.15;\n    const matHelper = gizmoMaterial.clone();\n    matHelper.opacity = 0.33;\n    const matRed = gizmoMaterial.clone();\n    matRed.color.set(16711680);\n    const matGreen = gizmoMaterial.clone();\n    matGreen.color.set(65280);\n    const matBlue = gizmoMaterial.clone();\n    matBlue.color.set(255);\n    const matWhiteTransparent = gizmoMaterial.clone();\n    matWhiteTransparent.opacity = 0.25;\n    const matYellowTransparent = matWhiteTransparent.clone();\n    matYellowTransparent.color.set(16776960);\n    const matCyanTransparent = matWhiteTransparent.clone();\n    matCyanTransparent.color.set(65535);\n    const matMagentaTransparent = matWhiteTransparent.clone();\n    matMagentaTransparent.color.set(16711935);\n    const matYellow = gizmoMaterial.clone();\n    matYellow.color.set(16776960);\n    const matLineRed = gizmoLineMaterial.clone();\n    matLineRed.color.set(16711680);\n    const matLineGreen = gizmoLineMaterial.clone();\n    matLineGreen.color.set(65280);\n    const matLineBlue = gizmoLineMaterial.clone();\n    matLineBlue.color.set(255);\n    const matLineCyan = gizmoLineMaterial.clone();\n    matLineCyan.color.set(65535);\n    const matLineMagenta = gizmoLineMaterial.clone();\n    matLineMagenta.color.set(16711935);\n    const matLineYellow = gizmoLineMaterial.clone();\n    matLineYellow.color.set(16776960);\n    const matLineGray = gizmoLineMaterial.clone();\n    matLineGray.color.set(7895160);\n    const matLineYellowTransparent = matLineYellow.clone();\n    matLineYellowTransparent.opacity = 0.25;\n    const arrowGeometry = new CylinderGeometry(0, 0.05, 0.2, 12, 1, false);\n    const scaleHandleGeometry = new BoxGeometry(0.125, 0.125, 0.125);\n    const lineGeometry = new BufferGeometry();\n    lineGeometry.setAttribute(\"position\", new Float32BufferAttribute([0, 0, 0, 1, 0, 0], 3));\n    const CircleGeometry = (radius, arc) => {\n      const geometry = new BufferGeometry();\n      const vertices = [];\n      for (let i = 0; i <= 64 * arc; ++i) {\n        vertices.push(0, Math.cos(i / 32 * Math.PI) * radius, Math.sin(i / 32 * Math.PI) * radius);\n      }\n      geometry.setAttribute(\"position\", new Float32BufferAttribute(vertices, 3));\n      return geometry;\n    };\n    const TranslateHelperGeometry = () => {\n      const geometry = new BufferGeometry();\n      geometry.setAttribute(\"position\", new Float32BufferAttribute([0, 0, 0, 1, 1, 1], 3));\n      return geometry;\n    };\n    const gizmoTranslate = {\n      X: [\n        [new Mesh(arrowGeometry, matRed), [1, 0, 0], [0, 0, -Math.PI / 2], null, \"fwd\"],\n        [new Mesh(arrowGeometry, matRed), [1, 0, 0], [0, 0, Math.PI / 2], null, \"bwd\"],\n        [new Line(lineGeometry, matLineRed)]\n      ],\n      Y: [\n        [new Mesh(arrowGeometry, matGreen), [0, 1, 0], null, null, \"fwd\"],\n        [new Mesh(arrowGeometry, matGreen), [0, 1, 0], [Math.PI, 0, 0], null, \"bwd\"],\n        [new Line(lineGeometry, matLineGreen), null, [0, 0, Math.PI / 2]]\n      ],\n      Z: [\n        [new Mesh(arrowGeometry, matBlue), [0, 0, 1], [Math.PI / 2, 0, 0], null, \"fwd\"],\n        [new Mesh(arrowGeometry, matBlue), [0, 0, 1], [-Math.PI / 2, 0, 0], null, \"bwd\"],\n        [new Line(lineGeometry, matLineBlue), null, [0, -Math.PI / 2, 0]]\n      ],\n      XYZ: [[new Mesh(new OctahedronGeometry(0.1, 0), matWhiteTransparent.clone()), [0, 0, 0], [0, 0, 0]]],\n      XY: [\n        [new Mesh(new PlaneGeometry(0.295, 0.295), matYellowTransparent.clone()), [0.15, 0.15, 0]],\n        [new Line(lineGeometry, matLineYellow), [0.18, 0.3, 0], null, [0.125, 1, 1]],\n        [new Line(lineGeometry, matLineYellow), [0.3, 0.18, 0], [0, 0, Math.PI / 2], [0.125, 1, 1]]\n      ],\n      YZ: [\n        [new Mesh(new PlaneGeometry(0.295, 0.295), matCyanTransparent.clone()), [0, 0.15, 0.15], [0, Math.PI / 2, 0]],\n        [new Line(lineGeometry, matLineCyan), [0, 0.18, 0.3], [0, 0, Math.PI / 2], [0.125, 1, 1]],\n        [new Line(lineGeometry, matLineCyan), [0, 0.3, 0.18], [0, -Math.PI / 2, 0], [0.125, 1, 1]]\n      ],\n      XZ: [\n        [\n          new Mesh(new PlaneGeometry(0.295, 0.295), matMagentaTransparent.clone()),\n          [0.15, 0, 0.15],\n          [-Math.PI / 2, 0, 0]\n        ],\n        [new Line(lineGeometry, matLineMagenta), [0.18, 0, 0.3], null, [0.125, 1, 1]],\n        [new Line(lineGeometry, matLineMagenta), [0.3, 0, 0.18], [0, -Math.PI / 2, 0], [0.125, 1, 1]]\n      ]\n    };\n    const pickerTranslate = {\n      X: [[new Mesh(new CylinderGeometry(0.2, 0, 1, 4, 1, false), matInvisible), [0.6, 0, 0], [0, 0, -Math.PI / 2]]],\n      Y: [[new Mesh(new CylinderGeometry(0.2, 0, 1, 4, 1, false), matInvisible), [0, 0.6, 0]]],\n      Z: [[new Mesh(new CylinderGeometry(0.2, 0, 1, 4, 1, false), matInvisible), [0, 0, 0.6], [Math.PI / 2, 0, 0]]],\n      XYZ: [[new Mesh(new OctahedronGeometry(0.2, 0), matInvisible)]],\n      XY: [[new Mesh(new PlaneGeometry(0.4, 0.4), matInvisible), [0.2, 0.2, 0]]],\n      YZ: [[new Mesh(new PlaneGeometry(0.4, 0.4), matInvisible), [0, 0.2, 0.2], [0, Math.PI / 2, 0]]],\n      XZ: [[new Mesh(new PlaneGeometry(0.4, 0.4), matInvisible), [0.2, 0, 0.2], [-Math.PI / 2, 0, 0]]]\n    };\n    const helperTranslate = {\n      START: [[new Mesh(new OctahedronGeometry(0.01, 2), matHelper), null, null, null, \"helper\"]],\n      END: [[new Mesh(new OctahedronGeometry(0.01, 2), matHelper), null, null, null, \"helper\"]],\n      DELTA: [[new Line(TranslateHelperGeometry(), matHelper), null, null, null, \"helper\"]],\n      X: [[new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], \"helper\"]],\n      Y: [[new Line(lineGeometry, matHelper.clone()), [0, -1e3, 0], [0, 0, Math.PI / 2], [1e6, 1, 1], \"helper\"]],\n      Z: [[new Line(lineGeometry, matHelper.clone()), [0, 0, -1e3], [0, -Math.PI / 2, 0], [1e6, 1, 1], \"helper\"]]\n    };\n    const gizmoRotate = {\n      X: [\n        [new Line(CircleGeometry(1, 0.5), matLineRed)],\n        [new Mesh(new OctahedronGeometry(0.04, 0), matRed), [0, 0, 0.99], null, [1, 3, 1]]\n      ],\n      Y: [\n        [new Line(CircleGeometry(1, 0.5), matLineGreen), null, [0, 0, -Math.PI / 2]],\n        [new Mesh(new OctahedronGeometry(0.04, 0), matGreen), [0, 0, 0.99], null, [3, 1, 1]]\n      ],\n      Z: [\n        [new Line(CircleGeometry(1, 0.5), matLineBlue), null, [0, Math.PI / 2, 0]],\n        [new Mesh(new OctahedronGeometry(0.04, 0), matBlue), [0.99, 0, 0], null, [1, 3, 1]]\n      ],\n      E: [\n        [new Line(CircleGeometry(1.25, 1), matLineYellowTransparent), null, [0, Math.PI / 2, 0]],\n        [\n          new Mesh(new CylinderGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent),\n          [1.17, 0, 0],\n          [0, 0, -Math.PI / 2],\n          [1, 1, 1e-3]\n        ],\n        [\n          new Mesh(new CylinderGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent),\n          [-1.17, 0, 0],\n          [0, 0, Math.PI / 2],\n          [1, 1, 1e-3]\n        ],\n        [\n          new Mesh(new CylinderGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent),\n          [0, -1.17, 0],\n          [Math.PI, 0, 0],\n          [1, 1, 1e-3]\n        ],\n        [\n          new Mesh(new CylinderGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent),\n          [0, 1.17, 0],\n          [0, 0, 0],\n          [1, 1, 1e-3]\n        ]\n      ],\n      XYZE: [[new Line(CircleGeometry(1, 1), matLineGray), null, [0, Math.PI / 2, 0]]]\n    };\n    const helperRotate = {\n      AXIS: [[new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], \"helper\"]]\n    };\n    const pickerRotate = {\n      X: [[new Mesh(new TorusGeometry(1, 0.1, 4, 24), matInvisible), [0, 0, 0], [0, -Math.PI / 2, -Math.PI / 2]]],\n      Y: [[new Mesh(new TorusGeometry(1, 0.1, 4, 24), matInvisible), [0, 0, 0], [Math.PI / 2, 0, 0]]],\n      Z: [[new Mesh(new TorusGeometry(1, 0.1, 4, 24), matInvisible), [0, 0, 0], [0, 0, -Math.PI / 2]]],\n      E: [[new Mesh(new TorusGeometry(1.25, 0.1, 2, 24), matInvisible)]],\n      XYZE: [[new Mesh(new SphereGeometry(0.7, 10, 8), matInvisible)]]\n    };\n    const gizmoScale = {\n      X: [\n        [new Mesh(scaleHandleGeometry, matRed), [0.8, 0, 0], [0, 0, -Math.PI / 2]],\n        [new Line(lineGeometry, matLineRed), null, null, [0.8, 1, 1]]\n      ],\n      Y: [\n        [new Mesh(scaleHandleGeometry, matGreen), [0, 0.8, 0]],\n        [new Line(lineGeometry, matLineGreen), null, [0, 0, Math.PI / 2], [0.8, 1, 1]]\n      ],\n      Z: [\n        [new Mesh(scaleHandleGeometry, matBlue), [0, 0, 0.8], [Math.PI / 2, 0, 0]],\n        [new Line(lineGeometry, matLineBlue), null, [0, -Math.PI / 2, 0], [0.8, 1, 1]]\n      ],\n      XY: [\n        [new Mesh(scaleHandleGeometry, matYellowTransparent), [0.85, 0.85, 0], null, [2, 2, 0.2]],\n        [new Line(lineGeometry, matLineYellow), [0.855, 0.98, 0], null, [0.125, 1, 1]],\n        [new Line(lineGeometry, matLineYellow), [0.98, 0.855, 0], [0, 0, Math.PI / 2], [0.125, 1, 1]]\n      ],\n      YZ: [\n        [new Mesh(scaleHandleGeometry, matCyanTransparent), [0, 0.85, 0.85], null, [0.2, 2, 2]],\n        [new Line(lineGeometry, matLineCyan), [0, 0.855, 0.98], [0, 0, Math.PI / 2], [0.125, 1, 1]],\n        [new Line(lineGeometry, matLineCyan), [0, 0.98, 0.855], [0, -Math.PI / 2, 0], [0.125, 1, 1]]\n      ],\n      XZ: [\n        [new Mesh(scaleHandleGeometry, matMagentaTransparent), [0.85, 0, 0.85], null, [2, 0.2, 2]],\n        [new Line(lineGeometry, matLineMagenta), [0.855, 0, 0.98], null, [0.125, 1, 1]],\n        [new Line(lineGeometry, matLineMagenta), [0.98, 0, 0.855], [0, -Math.PI / 2, 0], [0.125, 1, 1]]\n      ],\n      XYZX: [[new Mesh(new BoxGeometry(0.125, 0.125, 0.125), matWhiteTransparent.clone()), [1.1, 0, 0]]],\n      XYZY: [[new Mesh(new BoxGeometry(0.125, 0.125, 0.125), matWhiteTransparent.clone()), [0, 1.1, 0]]],\n      XYZZ: [[new Mesh(new BoxGeometry(0.125, 0.125, 0.125), matWhiteTransparent.clone()), [0, 0, 1.1]]]\n    };\n    const pickerScale = {\n      X: [[new Mesh(new CylinderGeometry(0.2, 0, 0.8, 4, 1, false), matInvisible), [0.5, 0, 0], [0, 0, -Math.PI / 2]]],\n      Y: [[new Mesh(new CylinderGeometry(0.2, 0, 0.8, 4, 1, false), matInvisible), [0, 0.5, 0]]],\n      Z: [[new Mesh(new CylinderGeometry(0.2, 0, 0.8, 4, 1, false), matInvisible), [0, 0, 0.5], [Math.PI / 2, 0, 0]]],\n      XY: [[new Mesh(scaleHandleGeometry, matInvisible), [0.85, 0.85, 0], null, [3, 3, 0.2]]],\n      YZ: [[new Mesh(scaleHandleGeometry, matInvisible), [0, 0.85, 0.85], null, [0.2, 3, 3]]],\n      XZ: [[new Mesh(scaleHandleGeometry, matInvisible), [0.85, 0, 0.85], null, [3, 0.2, 3]]],\n      XYZX: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.2), matInvisible), [1.1, 0, 0]]],\n      XYZY: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.2), matInvisible), [0, 1.1, 0]]],\n      XYZZ: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.2), matInvisible), [0, 0, 1.1]]]\n    };\n    const helperScale = {\n      X: [[new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], \"helper\"]],\n      Y: [[new Line(lineGeometry, matHelper.clone()), [0, -1e3, 0], [0, 0, Math.PI / 2], [1e6, 1, 1], \"helper\"]],\n      Z: [[new Line(lineGeometry, matHelper.clone()), [0, 0, -1e3], [0, -Math.PI / 2, 0], [1e6, 1, 1], \"helper\"]]\n    };\n    const setupGizmo = (gizmoMap) => {\n      const gizmo = new Object3D();\n      for (let name in gizmoMap) {\n        for (let i = gizmoMap[name].length; i--; ) {\n          const object = gizmoMap[name][i][0].clone();\n          const position = gizmoMap[name][i][1];\n          const rotation = gizmoMap[name][i][2];\n          const scale = gizmoMap[name][i][3];\n          const tag = gizmoMap[name][i][4];\n          object.name = name;\n          object.tag = tag;\n          if (position) {\n            object.position.set(position[0], position[1], position[2]);\n          }\n          if (rotation) {\n            object.rotation.set(rotation[0], rotation[1], rotation[2]);\n          }\n          if (scale) {\n            object.scale.set(scale[0], scale[1], scale[2]);\n          }\n          object.updateMatrix();\n          const tempGeometry = object.geometry.clone();\n          tempGeometry.applyMatrix4(object.matrix);\n          object.geometry = tempGeometry;\n          object.renderOrder = Infinity;\n          object.position.set(0, 0, 0);\n          object.rotation.set(0, 0, 0);\n          object.scale.set(1, 1, 1);\n          gizmo.add(object);\n        }\n      }\n      return gizmo;\n    };\n    this.gizmo = {};\n    this.picker = {};\n    this.helper = {};\n    this.add(this.gizmo[\"translate\"] = setupGizmo(gizmoTranslate));\n    this.add(this.gizmo[\"rotate\"] = setupGizmo(gizmoRotate));\n    this.add(this.gizmo[\"scale\"] = setupGizmo(gizmoScale));\n    this.add(this.picker[\"translate\"] = setupGizmo(pickerTranslate));\n    this.add(this.picker[\"rotate\"] = setupGizmo(pickerRotate));\n    this.add(this.picker[\"scale\"] = setupGizmo(pickerScale));\n    this.add(this.helper[\"translate\"] = setupGizmo(helperTranslate));\n    this.add(this.helper[\"rotate\"] = setupGizmo(helperRotate));\n    this.add(this.helper[\"scale\"] = setupGizmo(helperScale));\n    this.picker[\"translate\"].visible = false;\n    this.picker[\"rotate\"].visible = false;\n    this.picker[\"scale\"].visible = false;\n  }\n}\nclass TransformControlsPlane extends Mesh {\n  constructor() {\n    super(\n      new PlaneGeometry(1e5, 1e5, 2, 2),\n      new MeshBasicMaterial({\n        visible: false,\n        wireframe: true,\n        side: DoubleSide,\n        transparent: true,\n        opacity: 0.1,\n        toneMapped: false\n      })\n    );\n    __publicField(this, \"isTransformControlsPlane\", true);\n    __publicField(this, \"type\", \"TransformControlsPlane\");\n    __publicField(this, \"unitX\", new Vector3(1, 0, 0));\n    __publicField(this, \"unitY\", new Vector3(0, 1, 0));\n    __publicField(this, \"unitZ\", new Vector3(0, 0, 1));\n    __publicField(this, \"tempVector\", new Vector3());\n    __publicField(this, \"dirVector\", new Vector3());\n    __publicField(this, \"alignVector\", new Vector3());\n    __publicField(this, \"tempMatrix\", new Matrix4());\n    __publicField(this, \"identityQuaternion\", new Quaternion());\n    // these are set from parent class TransformControls\n    __publicField(this, \"cameraQuaternion\", new Quaternion());\n    __publicField(this, \"worldPosition\", new Vector3());\n    __publicField(this, \"worldQuaternion\", new Quaternion());\n    __publicField(this, \"eye\", new Vector3());\n    __publicField(this, \"axis\", null);\n    __publicField(this, \"mode\", \"translate\");\n    __publicField(this, \"space\", \"world\");\n    __publicField(this, \"updateMatrixWorld\", () => {\n      let space = this.space;\n      this.position.copy(this.worldPosition);\n      if (this.mode === \"scale\")\n        space = \"local\";\n      this.unitX.set(1, 0, 0).applyQuaternion(space === \"local\" ? this.worldQuaternion : this.identityQuaternion);\n      this.unitY.set(0, 1, 0).applyQuaternion(space === \"local\" ? this.worldQuaternion : this.identityQuaternion);\n      this.unitZ.set(0, 0, 1).applyQuaternion(space === \"local\" ? this.worldQuaternion : this.identityQuaternion);\n      this.alignVector.copy(this.unitY);\n      switch (this.mode) {\n        case \"translate\":\n        case \"scale\":\n          switch (this.axis) {\n            case \"X\":\n              this.alignVector.copy(this.eye).cross(this.unitX);\n              this.dirVector.copy(this.unitX).cross(this.alignVector);\n              break;\n            case \"Y\":\n              this.alignVector.copy(this.eye).cross(this.unitY);\n              this.dirVector.copy(this.unitY).cross(this.alignVector);\n              break;\n            case \"Z\":\n              this.alignVector.copy(this.eye).cross(this.unitZ);\n              this.dirVector.copy(this.unitZ).cross(this.alignVector);\n              break;\n            case \"XY\":\n              this.dirVector.copy(this.unitZ);\n              break;\n            case \"YZ\":\n              this.dirVector.copy(this.unitX);\n              break;\n            case \"XZ\":\n              this.alignVector.copy(this.unitZ);\n              this.dirVector.copy(this.unitY);\n              break;\n            case \"XYZ\":\n            case \"E\":\n              this.dirVector.set(0, 0, 0);\n              break;\n          }\n          break;\n        case \"rotate\":\n        default:\n          this.dirVector.set(0, 0, 0);\n      }\n      if (this.dirVector.length() === 0) {\n        this.quaternion.copy(this.cameraQuaternion);\n      } else {\n        this.tempMatrix.lookAt(this.tempVector.set(0, 0, 0), this.dirVector, this.alignVector);\n        this.quaternion.setFromRotationMatrix(this.tempMatrix);\n      }\n      super.updateMatrixWorld();\n    });\n  }\n}\nexport {\n  TransformControls,\n  TransformControlsGizmo,\n  TransformControlsPlane\n};\n"]},"metadata":{},"sourceType":"module"}