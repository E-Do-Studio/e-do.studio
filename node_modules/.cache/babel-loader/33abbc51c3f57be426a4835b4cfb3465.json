{"ast":null,"code":"import _classCallCheck from \"/Users/theodaguier/Repositories/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\nvar AsciiEffect = function AsciiEffect(renderer) {\n  var charSet = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \" .:-=+*#%@\";\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  _classCallCheck(this, AsciiEffect);\n\n  var fResolution = options[\"resolution\"] || 0.15;\n  var iScale = options[\"scale\"] || 1;\n  var bColor = options[\"color\"] || false;\n  var bAlpha = options[\"alpha\"] || false;\n  var bBlock = options[\"block\"] || false;\n  var bInvert = options[\"invert\"] || false;\n  var strResolution = options[\"strResolution\"] || \"low\";\n  var width, height;\n  var domElement = document.createElement(\"div\");\n  domElement.style.cursor = \"default\";\n  var oAscii = document.createElement(\"table\");\n  domElement.appendChild(oAscii);\n  var iWidth, iHeight;\n  var oImg;\n\n  this.setSize = function (w, h) {\n    width = w;\n    height = h;\n    renderer.setSize(w, h);\n    initAsciiSize();\n  };\n\n  this.render = function (scene, camera) {\n    renderer.render(scene, camera);\n    asciifyImage(oAscii);\n  };\n\n  this.domElement = domElement;\n\n  function initAsciiSize() {\n    iWidth = Math.floor(width * fResolution);\n    iHeight = Math.floor(height * fResolution);\n    oCanvas.width = iWidth;\n    oCanvas.height = iHeight;\n    oImg = renderer.domElement;\n\n    if (oImg.style.backgroundColor) {\n      oAscii.rows[0].cells[0].style.backgroundColor = oImg.style.backgroundColor;\n      oAscii.rows[0].cells[0].style.color = oImg.style.color;\n    }\n\n    oAscii.cellSpacing = 0;\n    oAscii.cellPadding = 0;\n    var oStyle = oAscii.style;\n    oStyle.whiteSpace = \"pre\";\n    oStyle.margin = \"0px\";\n    oStyle.padding = \"0px\";\n    oStyle.letterSpacing = fLetterSpacing + \"px\";\n    oStyle.fontFamily = strFont;\n    oStyle.fontSize = fFontSize + \"px\";\n    oStyle.lineHeight = fLineHeight + \"px\";\n    oStyle.textAlign = \"left\";\n    oStyle.textDecoration = \"none\";\n  }\n\n  var aDefaultCharList = \" .,:;i1tfLCG08@\".split(\"\");\n  var aDefaultColorCharList = \" CGO08@\".split(\"\");\n  var strFont = \"courier new, monospace\";\n  var oCanvasImg = renderer.domElement;\n  var oCanvas = document.createElement(\"canvas\");\n\n  if (!oCanvas.getContext) {\n    return;\n  }\n\n  var oCtx = oCanvas.getContext(\"2d\");\n\n  if (!oCtx.getImageData) {\n    return;\n  }\n\n  var aCharList = bColor ? aDefaultColorCharList : aDefaultCharList;\n  if (charSet) aCharList = charSet;\n  var fFontSize = 2 / fResolution * iScale;\n  var fLineHeight = 2 / fResolution * iScale;\n  var fLetterSpacing = 0;\n\n  if (strResolution == \"low\") {\n    switch (iScale) {\n      case 1:\n        fLetterSpacing = -1;\n        break;\n\n      case 2:\n      case 3:\n        fLetterSpacing = -2.1;\n        break;\n\n      case 4:\n        fLetterSpacing = -3.1;\n        break;\n\n      case 5:\n        fLetterSpacing = -4.15;\n        break;\n    }\n  }\n\n  if (strResolution == \"medium\") {\n    switch (iScale) {\n      case 1:\n        fLetterSpacing = 0;\n        break;\n\n      case 2:\n        fLetterSpacing = -1;\n        break;\n\n      case 3:\n        fLetterSpacing = -1.04;\n        break;\n\n      case 4:\n      case 5:\n        fLetterSpacing = -2.1;\n        break;\n    }\n  }\n\n  if (strResolution == \"high\") {\n    switch (iScale) {\n      case 1:\n      case 2:\n        fLetterSpacing = 0;\n        break;\n\n      case 3:\n      case 4:\n      case 5:\n        fLetterSpacing = -1;\n        break;\n    }\n  }\n\n  function asciifyImage(oAscii2) {\n    oCtx.clearRect(0, 0, iWidth, iHeight);\n    oCtx.drawImage(oCanvasImg, 0, 0, iWidth, iHeight);\n    var oImgData = oCtx.getImageData(0, 0, iWidth, iHeight).data;\n    var strChars = \"\";\n\n    for (var y = 0; y < iHeight; y += 2) {\n      for (var x = 0; x < iWidth; x++) {\n        var iOffset = (y * iWidth + x) * 4;\n        var iRed = oImgData[iOffset];\n        var iGreen = oImgData[iOffset + 1];\n        var iBlue = oImgData[iOffset + 2];\n        var iAlpha = oImgData[iOffset + 3];\n        var iCharIdx = void 0;\n        var fBrightness = void 0;\n        fBrightness = (0.3 * iRed + 0.59 * iGreen + 0.11 * iBlue) / 255;\n\n        if (iAlpha == 0) {\n          fBrightness = 1;\n        }\n\n        iCharIdx = Math.floor((1 - fBrightness) * (aCharList.length - 1));\n\n        if (bInvert) {\n          iCharIdx = aCharList.length - iCharIdx - 1;\n        }\n\n        var strThisChar = aCharList[iCharIdx];\n        if (strThisChar === void 0 || strThisChar == \" \") strThisChar = \"&nbsp;\";\n\n        if (bColor) {\n          strChars += \"<span style='color:rgb(\" + iRed + \",\" + iGreen + \",\" + iBlue + \");\" + (bBlock ? \"background-color:rgb(\" + iRed + \",\" + iGreen + \",\" + iBlue + \");\" : \"\") + (bAlpha ? \"opacity:\" + iAlpha / 255 + \";\" : \"\") + \"'>\" + strThisChar + \"</span>\";\n        } else {\n          strChars += strThisChar;\n        }\n      }\n\n      strChars += \"<br/>\";\n    }\n\n    oAscii2.innerHTML = \"<tr><td style=\\\"display:block;width:\".concat(width, \"px;height:\").concat(height, \"px;overflow:hidden\\\">\").concat(strChars, \"</td></tr>\");\n  }\n};\n\nexport { AsciiEffect };","map":{"version":3,"sources":["/Users/theodaguier/Repositories/E-Do-Studio/node_modules/three-stdlib/effects/AsciiEffect.js"],"names":["AsciiEffect","renderer","charSet","options","fResolution","iScale","bColor","bAlpha","bBlock","bInvert","strResolution","width","height","domElement","document","createElement","style","cursor","oAscii","appendChild","iWidth","iHeight","oImg","setSize","w","h","initAsciiSize","render","scene","camera","asciifyImage","Math","floor","oCanvas","backgroundColor","rows","cells","color","cellSpacing","cellPadding","oStyle","whiteSpace","margin","padding","letterSpacing","fLetterSpacing","fontFamily","strFont","fontSize","fFontSize","lineHeight","fLineHeight","textAlign","textDecoration","aDefaultCharList","split","aDefaultColorCharList","oCanvasImg","getContext","oCtx","getImageData","aCharList","oAscii2","clearRect","drawImage","oImgData","data","strChars","y","x","iOffset","iRed","iGreen","iBlue","iAlpha","iCharIdx","fBrightness","length","strThisChar","innerHTML"],"mappings":"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","sourcesContent":["class AsciiEffect {\n  constructor(renderer, charSet = \" .:-=+*#%@\", options = {}) {\n    const fResolution = options[\"resolution\"] || 0.15;\n    const iScale = options[\"scale\"] || 1;\n    const bColor = options[\"color\"] || false;\n    const bAlpha = options[\"alpha\"] || false;\n    const bBlock = options[\"block\"] || false;\n    const bInvert = options[\"invert\"] || false;\n    const strResolution = options[\"strResolution\"] || \"low\";\n    let width, height;\n    const domElement = document.createElement(\"div\");\n    domElement.style.cursor = \"default\";\n    const oAscii = document.createElement(\"table\");\n    domElement.appendChild(oAscii);\n    let iWidth, iHeight;\n    let oImg;\n    this.setSize = function(w, h) {\n      width = w;\n      height = h;\n      renderer.setSize(w, h);\n      initAsciiSize();\n    };\n    this.render = function(scene, camera) {\n      renderer.render(scene, camera);\n      asciifyImage(oAscii);\n    };\n    this.domElement = domElement;\n    function initAsciiSize() {\n      iWidth = Math.floor(width * fResolution);\n      iHeight = Math.floor(height * fResolution);\n      oCanvas.width = iWidth;\n      oCanvas.height = iHeight;\n      oImg = renderer.domElement;\n      if (oImg.style.backgroundColor) {\n        oAscii.rows[0].cells[0].style.backgroundColor = oImg.style.backgroundColor;\n        oAscii.rows[0].cells[0].style.color = oImg.style.color;\n      }\n      oAscii.cellSpacing = 0;\n      oAscii.cellPadding = 0;\n      const oStyle = oAscii.style;\n      oStyle.whiteSpace = \"pre\";\n      oStyle.margin = \"0px\";\n      oStyle.padding = \"0px\";\n      oStyle.letterSpacing = fLetterSpacing + \"px\";\n      oStyle.fontFamily = strFont;\n      oStyle.fontSize = fFontSize + \"px\";\n      oStyle.lineHeight = fLineHeight + \"px\";\n      oStyle.textAlign = \"left\";\n      oStyle.textDecoration = \"none\";\n    }\n    const aDefaultCharList = \" .,:;i1tfLCG08@\".split(\"\");\n    const aDefaultColorCharList = \" CGO08@\".split(\"\");\n    const strFont = \"courier new, monospace\";\n    const oCanvasImg = renderer.domElement;\n    const oCanvas = document.createElement(\"canvas\");\n    if (!oCanvas.getContext) {\n      return;\n    }\n    const oCtx = oCanvas.getContext(\"2d\");\n    if (!oCtx.getImageData) {\n      return;\n    }\n    let aCharList = bColor ? aDefaultColorCharList : aDefaultCharList;\n    if (charSet)\n      aCharList = charSet;\n    const fFontSize = 2 / fResolution * iScale;\n    const fLineHeight = 2 / fResolution * iScale;\n    let fLetterSpacing = 0;\n    if (strResolution == \"low\") {\n      switch (iScale) {\n        case 1:\n          fLetterSpacing = -1;\n          break;\n        case 2:\n        case 3:\n          fLetterSpacing = -2.1;\n          break;\n        case 4:\n          fLetterSpacing = -3.1;\n          break;\n        case 5:\n          fLetterSpacing = -4.15;\n          break;\n      }\n    }\n    if (strResolution == \"medium\") {\n      switch (iScale) {\n        case 1:\n          fLetterSpacing = 0;\n          break;\n        case 2:\n          fLetterSpacing = -1;\n          break;\n        case 3:\n          fLetterSpacing = -1.04;\n          break;\n        case 4:\n        case 5:\n          fLetterSpacing = -2.1;\n          break;\n      }\n    }\n    if (strResolution == \"high\") {\n      switch (iScale) {\n        case 1:\n        case 2:\n          fLetterSpacing = 0;\n          break;\n        case 3:\n        case 4:\n        case 5:\n          fLetterSpacing = -1;\n          break;\n      }\n    }\n    function asciifyImage(oAscii2) {\n      oCtx.clearRect(0, 0, iWidth, iHeight);\n      oCtx.drawImage(oCanvasImg, 0, 0, iWidth, iHeight);\n      const oImgData = oCtx.getImageData(0, 0, iWidth, iHeight).data;\n      let strChars = \"\";\n      for (let y = 0; y < iHeight; y += 2) {\n        for (let x = 0; x < iWidth; x++) {\n          const iOffset = (y * iWidth + x) * 4;\n          const iRed = oImgData[iOffset];\n          const iGreen = oImgData[iOffset + 1];\n          const iBlue = oImgData[iOffset + 2];\n          const iAlpha = oImgData[iOffset + 3];\n          let iCharIdx;\n          let fBrightness;\n          fBrightness = (0.3 * iRed + 0.59 * iGreen + 0.11 * iBlue) / 255;\n          if (iAlpha == 0) {\n            fBrightness = 1;\n          }\n          iCharIdx = Math.floor((1 - fBrightness) * (aCharList.length - 1));\n          if (bInvert) {\n            iCharIdx = aCharList.length - iCharIdx - 1;\n          }\n          let strThisChar = aCharList[iCharIdx];\n          if (strThisChar === void 0 || strThisChar == \" \")\n            strThisChar = \"&nbsp;\";\n          if (bColor) {\n            strChars += \"<span style='color:rgb(\" + iRed + \",\" + iGreen + \",\" + iBlue + \");\" + (bBlock ? \"background-color:rgb(\" + iRed + \",\" + iGreen + \",\" + iBlue + \");\" : \"\") + (bAlpha ? \"opacity:\" + iAlpha / 255 + \";\" : \"\") + \"'>\" + strThisChar + \"</span>\";\n          } else {\n            strChars += strThisChar;\n          }\n        }\n        strChars += \"<br/>\";\n      }\n      oAscii2.innerHTML = `<tr><td style=\"display:block;width:${width}px;height:${height}px;overflow:hidden\">${strChars}</td></tr>`;\n    }\n  }\n}\nexport {\n  AsciiEffect\n};\n"]},"metadata":{},"sourceType":"module"}