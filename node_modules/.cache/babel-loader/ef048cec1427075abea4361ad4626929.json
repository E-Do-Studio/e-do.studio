{"ast":null,"code":"import _classCallCheck from \"/Users/theodaguier/_workdir/dev/pro/e-do/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/theodaguier/_workdir/dev/pro/e-do/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/theodaguier/_workdir/dev/pro/e-do/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/theodaguier/_workdir/dev/pro/e-do/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Vector3, Mesh, InstancedInterleavedBuffer, InterleavedBufferAttribute } from \"three\";\nimport { LineSegmentsGeometry } from \"./LineSegmentsGeometry.js\";\nimport { LineMaterial } from \"./LineMaterial.js\";\n\nvar _start = /* @__PURE__ */new Vector3();\n\nvar _end = /* @__PURE__ */new Vector3();\n\nvar Wireframe = /*#__PURE__*/function (_Mesh) {\n  _inherits(Wireframe, _Mesh);\n\n  var _super = _createSuper(Wireframe);\n\n  function Wireframe() {\n    var _this;\n\n    var geometry = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new LineSegmentsGeometry();\n    var material = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new LineMaterial({\n      color: Math.random() * 16777215\n    });\n\n    _classCallCheck(this, Wireframe);\n\n    _this = _super.call(this, geometry, material);\n    _this.isWireframe = true;\n    _this.type = \"Wireframe\";\n    return _this;\n  } // for backwards-compatibility, but could be a method of LineSegmentsGeometry...\n\n\n  _createClass(Wireframe, [{\n    key: \"computeLineDistances\",\n    value: function computeLineDistances() {\n      var geometry = this.geometry;\n      var instanceStart = geometry.attributes.instanceStart;\n      var instanceEnd = geometry.attributes.instanceEnd;\n      var lineDistances = new Float32Array(2 * instanceStart.count);\n\n      for (var i = 0, j = 0, l = instanceStart.count; i < l; i++, j += 2) {\n        _start.fromBufferAttribute(instanceStart, i);\n\n        _end.fromBufferAttribute(instanceEnd, i);\n\n        lineDistances[j] = j === 0 ? 0 : lineDistances[j - 1];\n        lineDistances[j + 1] = lineDistances[j] + _start.distanceTo(_end);\n      }\n\n      var instanceDistanceBuffer = new InstancedInterleavedBuffer(lineDistances, 2, 1);\n      geometry.setAttribute(\"instanceDistanceStart\", new InterleavedBufferAttribute(instanceDistanceBuffer, 1, 0));\n      geometry.setAttribute(\"instanceDistanceEnd\", new InterleavedBufferAttribute(instanceDistanceBuffer, 1, 1));\n      return this;\n    }\n  }]);\n\n  return Wireframe;\n}(Mesh);\n\nexport { Wireframe };","map":{"version":3,"sources":["/Users/theodaguier/_workdir/dev/pro/e-do/E-Do-Studio/node_modules/three-stdlib/lines/Wireframe.js"],"names":["Vector3","Mesh","InstancedInterleavedBuffer","InterleavedBufferAttribute","LineSegmentsGeometry","LineMaterial","_start","_end","Wireframe","geometry","material","color","Math","random","isWireframe","type","instanceStart","attributes","instanceEnd","lineDistances","Float32Array","count","i","j","l","fromBufferAttribute","distanceTo","instanceDistanceBuffer","setAttribute"],"mappings":";;;;AAAA,SAASA,OAAT,EAAkBC,IAAlB,EAAwBC,0BAAxB,EAAoDC,0BAApD,QAAsF,OAAtF;AACA,SAASC,oBAAT,QAAqC,2BAArC;AACA,SAASC,YAAT,QAA6B,mBAA7B;;AACA,IAAMC,MAAM,GAAG,eAAgB,IAAIN,OAAJ,EAA/B;;AACA,IAAMO,IAAI,GAAG,eAAgB,IAAIP,OAAJ,EAA7B;;IACMQ,S;;;;;AACJ,uBAAqH;AAAA;;AAAA,QAAzGC,QAAyG,uEAA9F,IAAIL,oBAAJ,EAA8F;AAAA,QAAlEM,QAAkE,uEAAvD,IAAIL,YAAJ,CAAiB;AAAEM,MAAAA,KAAK,EAAEC,IAAI,CAACC,MAAL,KAAgB;AAAzB,KAAjB,CAAuD;;AAAA;;AACnH,8BAAMJ,QAAN,EAAgBC,QAAhB;AACA,UAAKI,WAAL,GAAmB,IAAnB;AACA,UAAKC,IAAL,GAAY,WAAZ;AAHmH;AAIpH,G,CACD;;;;;WACA,gCAAuB;AACrB,UAAMN,QAAQ,GAAG,KAAKA,QAAtB;AACA,UAAMO,aAAa,GAAGP,QAAQ,CAACQ,UAAT,CAAoBD,aAA1C;AACA,UAAME,WAAW,GAAGT,QAAQ,CAACQ,UAAT,CAAoBC,WAAxC;AACA,UAAMC,aAAa,GAAG,IAAIC,YAAJ,CAAiB,IAAIJ,aAAa,CAACK,KAAnC,CAAtB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG,CAAf,EAAkBC,CAAC,GAAGR,aAAa,CAACK,KAAzC,EAAgDC,CAAC,GAAGE,CAApD,EAAuDF,CAAC,IAAIC,CAAC,IAAI,CAAjE,EAAoE;AAClEjB,QAAAA,MAAM,CAACmB,mBAAP,CAA2BT,aAA3B,EAA0CM,CAA1C;;AACAf,QAAAA,IAAI,CAACkB,mBAAL,CAAyBP,WAAzB,EAAsCI,CAAtC;;AACAH,QAAAA,aAAa,CAACI,CAAD,CAAb,GAAmBA,CAAC,KAAK,CAAN,GAAU,CAAV,GAAcJ,aAAa,CAACI,CAAC,GAAG,CAAL,CAA9C;AACAJ,QAAAA,aAAa,CAACI,CAAC,GAAG,CAAL,CAAb,GAAuBJ,aAAa,CAACI,CAAD,CAAb,GAAmBjB,MAAM,CAACoB,UAAP,CAAkBnB,IAAlB,CAA1C;AACD;;AACD,UAAMoB,sBAAsB,GAAG,IAAIzB,0BAAJ,CAA+BiB,aAA/B,EAA8C,CAA9C,EAAiD,CAAjD,CAA/B;AACAV,MAAAA,QAAQ,CAACmB,YAAT,CAAsB,uBAAtB,EAA+C,IAAIzB,0BAAJ,CAA+BwB,sBAA/B,EAAuD,CAAvD,EAA0D,CAA1D,CAA/C;AACAlB,MAAAA,QAAQ,CAACmB,YAAT,CAAsB,qBAAtB,EAA6C,IAAIzB,0BAAJ,CAA+BwB,sBAA/B,EAAuD,CAAvD,EAA0D,CAA1D,CAA7C;AACA,aAAO,IAAP;AACD;;;;EAtBqB1B,I;;AAwBxB,SACEO,SADF","sourcesContent":["import { Vector3, Mesh, InstancedInterleavedBuffer, InterleavedBufferAttribute } from \"three\";\nimport { LineSegmentsGeometry } from \"./LineSegmentsGeometry.js\";\nimport { LineMaterial } from \"./LineMaterial.js\";\nconst _start = /* @__PURE__ */ new Vector3();\nconst _end = /* @__PURE__ */ new Vector3();\nclass Wireframe extends Mesh {\n  constructor(geometry = new LineSegmentsGeometry(), material = new LineMaterial({ color: Math.random() * 16777215 })) {\n    super(geometry, material);\n    this.isWireframe = true;\n    this.type = \"Wireframe\";\n  }\n  // for backwards-compatibility, but could be a method of LineSegmentsGeometry...\n  computeLineDistances() {\n    const geometry = this.geometry;\n    const instanceStart = geometry.attributes.instanceStart;\n    const instanceEnd = geometry.attributes.instanceEnd;\n    const lineDistances = new Float32Array(2 * instanceStart.count);\n    for (let i = 0, j = 0, l = instanceStart.count; i < l; i++, j += 2) {\n      _start.fromBufferAttribute(instanceStart, i);\n      _end.fromBufferAttribute(instanceEnd, i);\n      lineDistances[j] = j === 0 ? 0 : lineDistances[j - 1];\n      lineDistances[j + 1] = lineDistances[j] + _start.distanceTo(_end);\n    }\n    const instanceDistanceBuffer = new InstancedInterleavedBuffer(lineDistances, 2, 1);\n    geometry.setAttribute(\"instanceDistanceStart\", new InterleavedBufferAttribute(instanceDistanceBuffer, 1, 0));\n    geometry.setAttribute(\"instanceDistanceEnd\", new InterleavedBufferAttribute(instanceDistanceBuffer, 1, 1));\n    return this;\n  }\n}\nexport {\n  Wireframe\n};\n"]},"metadata":{},"sourceType":"module"}