{"ast":null,"code":"import _classCallCheck from \"/Users/theodaguier/_workdir/dev/pro/e-do/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { StereoCamera, Vector2 } from \"three\";\n\nvar StereoEffect = function StereoEffect(renderer) {\n  _classCallCheck(this, StereoEffect);\n\n  var _stereo = new StereoCamera();\n\n  _stereo.aspect = 0.5;\n  var size = new Vector2();\n\n  this.setEyeSeparation = function (eyeSep) {\n    _stereo.eyeSep = eyeSep;\n  };\n\n  this.setSize = function (width, height) {\n    renderer.setSize(width, height);\n  };\n\n  this.render = function (scene, camera) {\n    if (scene.matrixWorldAutoUpdate === true) scene.updateMatrixWorld();\n    if (camera.parent === null && camera.matrixWorldAutoUpdate === true) camera.updateMatrixWorld();\n\n    _stereo.update(camera);\n\n    renderer.getSize(size);\n    if (renderer.autoClear) renderer.clear();\n    renderer.setScissorTest(true);\n    renderer.setScissor(0, 0, size.width / 2, size.height);\n    renderer.setViewport(0, 0, size.width / 2, size.height);\n    renderer.render(scene, _stereo.cameraL);\n    renderer.setScissor(size.width / 2, 0, size.width / 2, size.height);\n    renderer.setViewport(size.width / 2, 0, size.width / 2, size.height);\n    renderer.render(scene, _stereo.cameraR);\n    renderer.setScissorTest(false);\n  };\n};\n\nexport { StereoEffect };","map":{"version":3,"sources":["/Users/theodaguier/_workdir/dev/pro/e-do/E-Do-Studio/node_modules/three-stdlib/effects/StereoEffect.js"],"names":["StereoCamera","Vector2","StereoEffect","renderer","_stereo","aspect","size","setEyeSeparation","eyeSep","setSize","width","height","render","scene","camera","matrixWorldAutoUpdate","updateMatrixWorld","parent","update","getSize","autoClear","clear","setScissorTest","setScissor","setViewport","cameraL","cameraR"],"mappings":";AAAA,SAASA,YAAT,EAAuBC,OAAvB,QAAsC,OAAtC;;IACMC,Y,GACJ,sBAAYC,QAAZ,EAAsB;AAAA;;AACpB,MAAMC,OAAO,GAAG,IAAIJ,YAAJ,EAAhB;;AACAI,EAAAA,OAAO,CAACC,MAAR,GAAiB,GAAjB;AACA,MAAMC,IAAI,GAAG,IAAIL,OAAJ,EAAb;;AACA,OAAKM,gBAAL,GAAwB,UAASC,MAAT,EAAiB;AACvCJ,IAAAA,OAAO,CAACI,MAAR,GAAiBA,MAAjB;AACD,GAFD;;AAGA,OAAKC,OAAL,GAAe,UAASC,KAAT,EAAgBC,MAAhB,EAAwB;AACrCR,IAAAA,QAAQ,CAACM,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB;AACD,GAFD;;AAGA,OAAKC,MAAL,GAAc,UAASC,KAAT,EAAgBC,MAAhB,EAAwB;AACpC,QAAID,KAAK,CAACE,qBAAN,KAAgC,IAApC,EACEF,KAAK,CAACG,iBAAN;AACF,QAAIF,MAAM,CAACG,MAAP,KAAkB,IAAlB,IAA0BH,MAAM,CAACC,qBAAP,KAAiC,IAA/D,EACED,MAAM,CAACE,iBAAP;;AACFZ,IAAAA,OAAO,CAACc,MAAR,CAAeJ,MAAf;;AACAX,IAAAA,QAAQ,CAACgB,OAAT,CAAiBb,IAAjB;AACA,QAAIH,QAAQ,CAACiB,SAAb,EACEjB,QAAQ,CAACkB,KAAT;AACFlB,IAAAA,QAAQ,CAACmB,cAAT,CAAwB,IAAxB;AACAnB,IAAAA,QAAQ,CAACoB,UAAT,CAAoB,CAApB,EAAuB,CAAvB,EAA0BjB,IAAI,CAACI,KAAL,GAAa,CAAvC,EAA0CJ,IAAI,CAACK,MAA/C;AACAR,IAAAA,QAAQ,CAACqB,WAAT,CAAqB,CAArB,EAAwB,CAAxB,EAA2BlB,IAAI,CAACI,KAAL,GAAa,CAAxC,EAA2CJ,IAAI,CAACK,MAAhD;AACAR,IAAAA,QAAQ,CAACS,MAAT,CAAgBC,KAAhB,EAAuBT,OAAO,CAACqB,OAA/B;AACAtB,IAAAA,QAAQ,CAACoB,UAAT,CAAoBjB,IAAI,CAACI,KAAL,GAAa,CAAjC,EAAoC,CAApC,EAAuCJ,IAAI,CAACI,KAAL,GAAa,CAApD,EAAuDJ,IAAI,CAACK,MAA5D;AACAR,IAAAA,QAAQ,CAACqB,WAAT,CAAqBlB,IAAI,CAACI,KAAL,GAAa,CAAlC,EAAqC,CAArC,EAAwCJ,IAAI,CAACI,KAAL,GAAa,CAArD,EAAwDJ,IAAI,CAACK,MAA7D;AACAR,IAAAA,QAAQ,CAACS,MAAT,CAAgBC,KAAhB,EAAuBT,OAAO,CAACsB,OAA/B;AACAvB,IAAAA,QAAQ,CAACmB,cAAT,CAAwB,KAAxB;AACD,GAjBD;AAkBD,C;;AAEH,SACEpB,YADF","sourcesContent":["import { StereoCamera, Vector2 } from \"three\";\nclass StereoEffect {\n  constructor(renderer) {\n    const _stereo = new StereoCamera();\n    _stereo.aspect = 0.5;\n    const size = new Vector2();\n    this.setEyeSeparation = function(eyeSep) {\n      _stereo.eyeSep = eyeSep;\n    };\n    this.setSize = function(width, height) {\n      renderer.setSize(width, height);\n    };\n    this.render = function(scene, camera) {\n      if (scene.matrixWorldAutoUpdate === true)\n        scene.updateMatrixWorld();\n      if (camera.parent === null && camera.matrixWorldAutoUpdate === true)\n        camera.updateMatrixWorld();\n      _stereo.update(camera);\n      renderer.getSize(size);\n      if (renderer.autoClear)\n        renderer.clear();\n      renderer.setScissorTest(true);\n      renderer.setScissor(0, 0, size.width / 2, size.height);\n      renderer.setViewport(0, 0, size.width / 2, size.height);\n      renderer.render(scene, _stereo.cameraL);\n      renderer.setScissor(size.width / 2, 0, size.width / 2, size.height);\n      renderer.setViewport(size.width / 2, 0, size.width / 2, size.height);\n      renderer.render(scene, _stereo.cameraR);\n      renderer.setScissorTest(false);\n    };\n  }\n}\nexport {\n  StereoEffect\n};\n"]},"metadata":{},"sourceType":"module"}