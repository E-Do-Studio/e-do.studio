{"ast":null,"code":"class AsciiEffect {\n  constructor(renderer, charSet = \" .:-=+*#%@\", options = {}) {\n    const fResolution = options[\"resolution\"] || 0.15;\n    const iScale = options[\"scale\"] || 1;\n    const bColor = options[\"color\"] || false;\n    const bAlpha = options[\"alpha\"] || false;\n    const bBlock = options[\"block\"] || false;\n    const bInvert = options[\"invert\"] || false;\n    const strResolution = options[\"strResolution\"] || \"low\";\n    let width, height;\n    const domElement = document.createElement(\"div\");\n    domElement.style.cursor = \"default\";\n    const oAscii = document.createElement(\"table\");\n    domElement.appendChild(oAscii);\n    let iWidth, iHeight;\n    let oImg;\n\n    this.setSize = function (w, h) {\n      width = w;\n      height = h;\n      renderer.setSize(w, h);\n      initAsciiSize();\n    };\n\n    this.render = function (scene, camera) {\n      renderer.render(scene, camera);\n      asciifyImage(oAscii);\n    };\n\n    this.domElement = domElement;\n\n    function initAsciiSize() {\n      iWidth = Math.floor(width * fResolution);\n      iHeight = Math.floor(height * fResolution);\n      oCanvas.width = iWidth;\n      oCanvas.height = iHeight;\n      oImg = renderer.domElement;\n\n      if (oImg.style.backgroundColor) {\n        oAscii.rows[0].cells[0].style.backgroundColor = oImg.style.backgroundColor;\n        oAscii.rows[0].cells[0].style.color = oImg.style.color;\n      }\n\n      oAscii.cellSpacing = 0;\n      oAscii.cellPadding = 0;\n      const oStyle = oAscii.style;\n      oStyle.whiteSpace = \"pre\";\n      oStyle.margin = \"0px\";\n      oStyle.padding = \"0px\";\n      oStyle.letterSpacing = fLetterSpacing + \"px\";\n      oStyle.fontFamily = strFont;\n      oStyle.fontSize = fFontSize + \"px\";\n      oStyle.lineHeight = fLineHeight + \"px\";\n      oStyle.textAlign = \"left\";\n      oStyle.textDecoration = \"none\";\n    }\n\n    const aDefaultCharList = \" .,:;i1tfLCG08@\".split(\"\");\n    const aDefaultColorCharList = \" CGO08@\".split(\"\");\n    const strFont = \"courier new, monospace\";\n    const oCanvasImg = renderer.domElement;\n    const oCanvas = document.createElement(\"canvas\");\n\n    if (!oCanvas.getContext) {\n      return;\n    }\n\n    const oCtx = oCanvas.getContext(\"2d\");\n\n    if (!oCtx.getImageData) {\n      return;\n    }\n\n    let aCharList = bColor ? aDefaultColorCharList : aDefaultCharList;\n    if (charSet) aCharList = charSet;\n    const fFontSize = 2 / fResolution * iScale;\n    const fLineHeight = 2 / fResolution * iScale;\n    let fLetterSpacing = 0;\n\n    if (strResolution == \"low\") {\n      switch (iScale) {\n        case 1:\n          fLetterSpacing = -1;\n          break;\n\n        case 2:\n        case 3:\n          fLetterSpacing = -2.1;\n          break;\n\n        case 4:\n          fLetterSpacing = -3.1;\n          break;\n\n        case 5:\n          fLetterSpacing = -4.15;\n          break;\n      }\n    }\n\n    if (strResolution == \"medium\") {\n      switch (iScale) {\n        case 1:\n          fLetterSpacing = 0;\n          break;\n\n        case 2:\n          fLetterSpacing = -1;\n          break;\n\n        case 3:\n          fLetterSpacing = -1.04;\n          break;\n\n        case 4:\n        case 5:\n          fLetterSpacing = -2.1;\n          break;\n      }\n    }\n\n    if (strResolution == \"high\") {\n      switch (iScale) {\n        case 1:\n        case 2:\n          fLetterSpacing = 0;\n          break;\n\n        case 3:\n        case 4:\n        case 5:\n          fLetterSpacing = -1;\n          break;\n      }\n    }\n\n    function asciifyImage(oAscii2) {\n      oCtx.clearRect(0, 0, iWidth, iHeight);\n      oCtx.drawImage(oCanvasImg, 0, 0, iWidth, iHeight);\n      const oImgData = oCtx.getImageData(0, 0, iWidth, iHeight).data;\n      let strChars = \"\";\n\n      for (let y = 0; y < iHeight; y += 2) {\n        for (let x = 0; x < iWidth; x++) {\n          const iOffset = (y * iWidth + x) * 4;\n          const iRed = oImgData[iOffset];\n          const iGreen = oImgData[iOffset + 1];\n          const iBlue = oImgData[iOffset + 2];\n          const iAlpha = oImgData[iOffset + 3];\n          let iCharIdx;\n          let fBrightness;\n          fBrightness = (0.3 * iRed + 0.59 * iGreen + 0.11 * iBlue) / 255;\n\n          if (iAlpha == 0) {\n            fBrightness = 1;\n          }\n\n          iCharIdx = Math.floor((1 - fBrightness) * (aCharList.length - 1));\n\n          if (bInvert) {\n            iCharIdx = aCharList.length - iCharIdx - 1;\n          }\n\n          let strThisChar = aCharList[iCharIdx];\n          if (strThisChar === void 0 || strThisChar == \" \") strThisChar = \"&nbsp;\";\n\n          if (bColor) {\n            strChars += \"<span style='color:rgb(\" + iRed + \",\" + iGreen + \",\" + iBlue + \");\" + (bBlock ? \"background-color:rgb(\" + iRed + \",\" + iGreen + \",\" + iBlue + \");\" : \"\") + (bAlpha ? \"opacity:\" + iAlpha / 255 + \";\" : \"\") + \"'>\" + strThisChar + \"</span>\";\n          } else {\n            strChars += strThisChar;\n          }\n        }\n\n        strChars += \"<br/>\";\n      }\n\n      oAscii2.innerHTML = `<tr><td style=\"display:block;width:${width}px;height:${height}px;overflow:hidden\">${strChars}</td></tr>`;\n    }\n  }\n\n}\n\nexport { AsciiEffect };","map":{"version":3,"sources":["/Users/theodaguier/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/three-stdlib/effects/AsciiEffect.js"],"names":["AsciiEffect","constructor","renderer","charSet","options","fResolution","iScale","bColor","bAlpha","bBlock","bInvert","strResolution","width","height","domElement","document","createElement","style","cursor","oAscii","appendChild","iWidth","iHeight","oImg","setSize","w","h","initAsciiSize","render","scene","camera","asciifyImage","Math","floor","oCanvas","backgroundColor","rows","cells","color","cellSpacing","cellPadding","oStyle","whiteSpace","margin","padding","letterSpacing","fLetterSpacing","fontFamily","strFont","fontSize","fFontSize","lineHeight","fLineHeight","textAlign","textDecoration","aDefaultCharList","split","aDefaultColorCharList","oCanvasImg","getContext","oCtx","getImageData","aCharList","oAscii2","clearRect","drawImage","oImgData","data","strChars","y","x","iOffset","iRed","iGreen","iBlue","iAlpha","iCharIdx","fBrightness","length","strThisChar","innerHTML"],"mappings":"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","sourcesContent":["class AsciiEffect {\n  constructor(renderer, charSet = \" .:-=+*#%@\", options = {}) {\n    const fResolution = options[\"resolution\"] || 0.15;\n    const iScale = options[\"scale\"] || 1;\n    const bColor = options[\"color\"] || false;\n    const bAlpha = options[\"alpha\"] || false;\n    const bBlock = options[\"block\"] || false;\n    const bInvert = options[\"invert\"] || false;\n    const strResolution = options[\"strResolution\"] || \"low\";\n    let width, height;\n    const domElement = document.createElement(\"div\");\n    domElement.style.cursor = \"default\";\n    const oAscii = document.createElement(\"table\");\n    domElement.appendChild(oAscii);\n    let iWidth, iHeight;\n    let oImg;\n    this.setSize = function(w, h) {\n      width = w;\n      height = h;\n      renderer.setSize(w, h);\n      initAsciiSize();\n    };\n    this.render = function(scene, camera) {\n      renderer.render(scene, camera);\n      asciifyImage(oAscii);\n    };\n    this.domElement = domElement;\n    function initAsciiSize() {\n      iWidth = Math.floor(width * fResolution);\n      iHeight = Math.floor(height * fResolution);\n      oCanvas.width = iWidth;\n      oCanvas.height = iHeight;\n      oImg = renderer.domElement;\n      if (oImg.style.backgroundColor) {\n        oAscii.rows[0].cells[0].style.backgroundColor = oImg.style.backgroundColor;\n        oAscii.rows[0].cells[0].style.color = oImg.style.color;\n      }\n      oAscii.cellSpacing = 0;\n      oAscii.cellPadding = 0;\n      const oStyle = oAscii.style;\n      oStyle.whiteSpace = \"pre\";\n      oStyle.margin = \"0px\";\n      oStyle.padding = \"0px\";\n      oStyle.letterSpacing = fLetterSpacing + \"px\";\n      oStyle.fontFamily = strFont;\n      oStyle.fontSize = fFontSize + \"px\";\n      oStyle.lineHeight = fLineHeight + \"px\";\n      oStyle.textAlign = \"left\";\n      oStyle.textDecoration = \"none\";\n    }\n    const aDefaultCharList = \" .,:;i1tfLCG08@\".split(\"\");\n    const aDefaultColorCharList = \" CGO08@\".split(\"\");\n    const strFont = \"courier new, monospace\";\n    const oCanvasImg = renderer.domElement;\n    const oCanvas = document.createElement(\"canvas\");\n    if (!oCanvas.getContext) {\n      return;\n    }\n    const oCtx = oCanvas.getContext(\"2d\");\n    if (!oCtx.getImageData) {\n      return;\n    }\n    let aCharList = bColor ? aDefaultColorCharList : aDefaultCharList;\n    if (charSet)\n      aCharList = charSet;\n    const fFontSize = 2 / fResolution * iScale;\n    const fLineHeight = 2 / fResolution * iScale;\n    let fLetterSpacing = 0;\n    if (strResolution == \"low\") {\n      switch (iScale) {\n        case 1:\n          fLetterSpacing = -1;\n          break;\n        case 2:\n        case 3:\n          fLetterSpacing = -2.1;\n          break;\n        case 4:\n          fLetterSpacing = -3.1;\n          break;\n        case 5:\n          fLetterSpacing = -4.15;\n          break;\n      }\n    }\n    if (strResolution == \"medium\") {\n      switch (iScale) {\n        case 1:\n          fLetterSpacing = 0;\n          break;\n        case 2:\n          fLetterSpacing = -1;\n          break;\n        case 3:\n          fLetterSpacing = -1.04;\n          break;\n        case 4:\n        case 5:\n          fLetterSpacing = -2.1;\n          break;\n      }\n    }\n    if (strResolution == \"high\") {\n      switch (iScale) {\n        case 1:\n        case 2:\n          fLetterSpacing = 0;\n          break;\n        case 3:\n        case 4:\n        case 5:\n          fLetterSpacing = -1;\n          break;\n      }\n    }\n    function asciifyImage(oAscii2) {\n      oCtx.clearRect(0, 0, iWidth, iHeight);\n      oCtx.drawImage(oCanvasImg, 0, 0, iWidth, iHeight);\n      const oImgData = oCtx.getImageData(0, 0, iWidth, iHeight).data;\n      let strChars = \"\";\n      for (let y = 0; y < iHeight; y += 2) {\n        for (let x = 0; x < iWidth; x++) {\n          const iOffset = (y * iWidth + x) * 4;\n          const iRed = oImgData[iOffset];\n          const iGreen = oImgData[iOffset + 1];\n          const iBlue = oImgData[iOffset + 2];\n          const iAlpha = oImgData[iOffset + 3];\n          let iCharIdx;\n          let fBrightness;\n          fBrightness = (0.3 * iRed + 0.59 * iGreen + 0.11 * iBlue) / 255;\n          if (iAlpha == 0) {\n            fBrightness = 1;\n          }\n          iCharIdx = Math.floor((1 - fBrightness) * (aCharList.length - 1));\n          if (bInvert) {\n            iCharIdx = aCharList.length - iCharIdx - 1;\n          }\n          let strThisChar = aCharList[iCharIdx];\n          if (strThisChar === void 0 || strThisChar == \" \")\n            strThisChar = \"&nbsp;\";\n          if (bColor) {\n            strChars += \"<span style='color:rgb(\" + iRed + \",\" + iGreen + \",\" + iBlue + \");\" + (bBlock ? \"background-color:rgb(\" + iRed + \",\" + iGreen + \",\" + iBlue + \");\" : \"\") + (bAlpha ? \"opacity:\" + iAlpha / 255 + \";\" : \"\") + \"'>\" + strThisChar + \"</span>\";\n          } else {\n            strChars += strThisChar;\n          }\n        }\n        strChars += \"<br/>\";\n      }\n      oAscii2.innerHTML = `<tr><td style=\"display:block;width:${width}px;height:${height}px;overflow:hidden\">${strChars}</td></tr>`;\n    }\n  }\n}\nexport {\n  AsciiEffect\n};\n"]},"metadata":{},"sourceType":"module"}