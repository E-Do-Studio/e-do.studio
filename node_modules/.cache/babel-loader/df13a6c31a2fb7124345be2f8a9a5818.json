{"ast":null,"code":"var __defProp = Object.defineProperty;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n  return value;\n};\n\nimport { Pass } from \"./Pass.js\";\n\nclass MaskPass extends Pass {\n  constructor(scene, camera) {\n    super();\n\n    __publicField(this, \"scene\");\n\n    __publicField(this, \"camera\");\n\n    __publicField(this, \"inverse\");\n\n    this.scene = scene;\n    this.camera = camera;\n    this.clear = true;\n    this.needsSwap = false;\n    this.inverse = false;\n  }\n\n  render(renderer, writeBuffer, readBuffer) {\n    const context = renderer.getContext();\n    const state = renderer.state;\n    state.buffers.color.setMask(false);\n    state.buffers.depth.setMask(false);\n    state.buffers.color.setLocked(true);\n    state.buffers.depth.setLocked(true);\n    let writeValue, clearValue;\n\n    if (this.inverse) {\n      writeValue = 0;\n      clearValue = 1;\n    } else {\n      writeValue = 1;\n      clearValue = 0;\n    }\n\n    state.buffers.stencil.setTest(true);\n    state.buffers.stencil.setOp(context.REPLACE, context.REPLACE, context.REPLACE);\n    state.buffers.stencil.setFunc(context.ALWAYS, writeValue, 4294967295);\n    state.buffers.stencil.setClear(clearValue);\n    state.buffers.stencil.setLocked(true);\n    renderer.setRenderTarget(readBuffer);\n    if (this.clear) renderer.clear();\n    renderer.render(this.scene, this.camera);\n    renderer.setRenderTarget(writeBuffer);\n    if (this.clear) renderer.clear();\n    renderer.render(this.scene, this.camera);\n    state.buffers.color.setLocked(false);\n    state.buffers.depth.setLocked(false);\n    state.buffers.stencil.setLocked(false);\n    state.buffers.stencil.setFunc(context.EQUAL, 1, 4294967295);\n    state.buffers.stencil.setOp(context.KEEP, context.KEEP, context.KEEP);\n    state.buffers.stencil.setLocked(true);\n  }\n\n}\n\nclass ClearMaskPass extends Pass {\n  constructor() {\n    super();\n    this.needsSwap = false;\n  }\n\n  render(renderer) {\n    renderer.state.buffers.stencil.setLocked(false);\n    renderer.state.buffers.stencil.setTest(false);\n  }\n\n}\n\nexport { ClearMaskPass, MaskPass };","map":{"version":3,"sources":["/Users/theodaguier/Developer/old/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/three-stdlib/postprocessing/MaskPass.js"],"names":["__defProp","Object","defineProperty","__defNormalProp","obj","key","value","enumerable","configurable","writable","__publicField","Pass","MaskPass","constructor","scene","camera","clear","needsSwap","inverse","render","renderer","writeBuffer","readBuffer","context","getContext","state","buffers","color","setMask","depth","setLocked","writeValue","clearValue","stencil","setTest","setOp","REPLACE","setFunc","ALWAYS","setClear","setRenderTarget","EQUAL","KEEP","ClearMaskPass"],"mappings":"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","sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { Pass } from \"./Pass.js\";\nclass MaskPass extends Pass {\n  constructor(scene, camera) {\n    super();\n    __publicField(this, \"scene\");\n    __publicField(this, \"camera\");\n    __publicField(this, \"inverse\");\n    this.scene = scene;\n    this.camera = camera;\n    this.clear = true;\n    this.needsSwap = false;\n    this.inverse = false;\n  }\n  render(renderer, writeBuffer, readBuffer) {\n    const context = renderer.getContext();\n    const state = renderer.state;\n    state.buffers.color.setMask(false);\n    state.buffers.depth.setMask(false);\n    state.buffers.color.setLocked(true);\n    state.buffers.depth.setLocked(true);\n    let writeValue, clearValue;\n    if (this.inverse) {\n      writeValue = 0;\n      clearValue = 1;\n    } else {\n      writeValue = 1;\n      clearValue = 0;\n    }\n    state.buffers.stencil.setTest(true);\n    state.buffers.stencil.setOp(context.REPLACE, context.REPLACE, context.REPLACE);\n    state.buffers.stencil.setFunc(context.ALWAYS, writeValue, 4294967295);\n    state.buffers.stencil.setClear(clearValue);\n    state.buffers.stencil.setLocked(true);\n    renderer.setRenderTarget(readBuffer);\n    if (this.clear)\n      renderer.clear();\n    renderer.render(this.scene, this.camera);\n    renderer.setRenderTarget(writeBuffer);\n    if (this.clear)\n      renderer.clear();\n    renderer.render(this.scene, this.camera);\n    state.buffers.color.setLocked(false);\n    state.buffers.depth.setLocked(false);\n    state.buffers.stencil.setLocked(false);\n    state.buffers.stencil.setFunc(context.EQUAL, 1, 4294967295);\n    state.buffers.stencil.setOp(context.KEEP, context.KEEP, context.KEEP);\n    state.buffers.stencil.setLocked(true);\n  }\n}\nclass ClearMaskPass extends Pass {\n  constructor() {\n    super();\n    this.needsSwap = false;\n  }\n  render(renderer) {\n    renderer.state.buffers.stencil.setLocked(false);\n    renderer.state.buffers.stencil.setTest(false);\n  }\n}\nexport {\n  ClearMaskPass,\n  MaskPass\n};\n"]},"metadata":{},"sourceType":"module"}