{"ast":null,"code":"'use strict';\n\nvar BuildMail = require('buildmail');\n\nvar libmime = require('libmime');\n\nmodule.exports = function (mail) {\n  return new MailComposer(mail).compile();\n};\n\nmodule.exports.MailComposer = MailComposer;\n/**\n * Creates the object for composing a BuildMail instance out from the mail options\n *\n * @constructor\n * @param {Object} mail Mail options\n */\n\nfunction MailComposer(mail) {\n  if (!(this instanceof MailComposer)) {\n    return new MailComposer(mail);\n  }\n\n  this.mail = mail || {};\n  this.message = false;\n}\n/**\n * Builds BuildMail instance\n */\n\n\nMailComposer.prototype.compile = function () {\n  this._alternatives = this._getAlternatives();\n  this._htmlNode = this._alternatives.filter(function (alternative) {\n    return /^text\\/html\\b/i.test(alternative.contentType);\n  }).pop();\n  this._attachments = this._getAttachments(!!this._htmlNode);\n  this._useRelated = !!(this._htmlNode && this._attachments.related.length);\n  this._useAlternative = this._alternatives.length > 1;\n  this._useMixed = this._attachments.attached.length > 1 || this._alternatives.length && this._attachments.attached.length === 1; // Compose MIME tree\n\n  if (this._useMixed) {\n    this.message = this._createMixed();\n  } else if (this._useAlternative) {\n    this.message = this._createAlternative();\n  } else if (this._useRelated) {\n    this.message = this._createRelated();\n  } else {\n    this.message = this._createContentNode(false, [].concat(this._alternatives || []).concat(this._attachments.attached || []).shift() || {\n      contentType: 'text/plain',\n      content: ''\n    });\n  } // Add headers to the root node\n\n\n  ['from', 'sender', 'to', 'cc', 'bcc', 'reply-to', 'in-reply-to', 'references', 'subject', 'message-id', 'date'].forEach(function (header) {\n    var key = header.replace(/-(\\w)/g, function (o, c) {\n      return c.toUpperCase();\n    });\n\n    if (this.mail[key]) {\n      this.message.setHeader(header, this.mail[key]);\n    }\n  }.bind(this)); // Add custom headers\n\n  if (this.mail.headers) {\n    this.message.addHeader(this.mail.headers);\n  } // Sets custom envelope\n\n\n  if (this.mail.envelope) {\n    this.message.setEnvelope(this.mail.envelope);\n  }\n\n  return this.message;\n};\n/**\n * Builds multipart/mixed node. It should always contain different type of elements on the same level\n * eg. text + attachments\n *\n * @param {Object} parentNode Parent for this note. If it does not exist, a root node is created\n * @returns {Object} BuildMail node element\n */\n\n\nMailComposer.prototype._createMixed = function (parentNode) {\n  var node;\n\n  if (!parentNode) {\n    node = new BuildMail('multipart/mixed', {\n      baseBoundary: this.mail.baseBoundary\n    });\n  } else {\n    node = parentNode.createChild('multipart/mixed');\n  }\n\n  if (this._useAlternative) {\n    this._createAlternative(node);\n  } else if (this._useRelated) {\n    this._createRelated(node);\n  }\n\n  [].concat(!this._useAlternative && this._alternatives || []).concat(this._attachments.attached || []).forEach(function (element) {\n    // if the element is a html node from related subpart then ignore it\n    if (!this._useRelated || element !== this._htmlNode) {\n      this._createContentNode(node, element);\n    }\n  }.bind(this));\n  return node;\n};\n/**\n * Builds multipart/alternative node. It should always contain same type of elements on the same level\n * eg. text + html view of the same data\n *\n * @param {Object} parentNode Parent for this note. If it does not exist, a root node is created\n * @returns {Object} BuildMail node element\n */\n\n\nMailComposer.prototype._createAlternative = function (parentNode) {\n  var node;\n\n  if (!parentNode) {\n    node = new BuildMail('multipart/alternative', {\n      baseBoundary: this.mail.baseBoundary\n    });\n  } else {\n    node = parentNode.createChild('multipart/alternative');\n  }\n\n  this._alternatives.forEach(function (alternative) {\n    if (this._useRelated && this._htmlNode === alternative) {\n      this._createRelated(node);\n    } else {\n      this._createContentNode(node, alternative);\n    }\n  }.bind(this));\n\n  return node;\n};\n/**\n * Builds multipart/related node. It should always contain html node with related attachments\n *\n * @param {Object} parentNode Parent for this note. If it does not exist, a root node is created\n * @returns {Object} BuildMail node element\n */\n\n\nMailComposer.prototype._createRelated = function (parentNode) {\n  var node;\n\n  if (!parentNode) {\n    node = new BuildMail('multipart/related; type=\"text/html\"', {\n      baseBoundary: this.mail.baseBoundary\n    });\n  } else {\n    node = parentNode.createChild('multipart/related; type=\"text/html\"');\n  }\n\n  this._createContentNode(node, this._htmlNode);\n\n  this._attachments.related.forEach(function (alternative) {\n    this._createContentNode(node, alternative);\n  }.bind(this));\n\n  return node;\n};\n/**\n * Creates a regular node with contents\n *\n * @param {Object} parentNode Parent for this note. If it does not exist, a root node is created\n * @param {Object} element Node data\n * @returns {Object} BuildMail node element\n */\n\n\nMailComposer.prototype._createContentNode = function (parentNode, element) {\n  element = element || {};\n  element.content = element.content || '';\n  var node;\n  var encoding = (element.encoding || 'utf8').toString().toLowerCase().replace(/[-_\\s]/g, '');\n\n  if (!parentNode) {\n    node = new BuildMail(element.contentType, {\n      filename: element.filename,\n      baseBoundary: this.mail.baseBoundary\n    });\n  } else {\n    node = parentNode.createChild(element.contentType, {\n      filename: element.filename\n    });\n  }\n\n  if (element.cid) {\n    node.setHeader('Content-Id', '<' + element.cid.replace(/[<>]/g, '') + '>');\n  }\n\n  if (element.contentTransferEncoding) {\n    node.setHeader('Content-Transfer-Encoding', element.contentTransferEncoding);\n  } else if (this.mail.encoding && /^text\\//i.test(element.contentType)) {\n    node.setHeader('Content-Transfer-Encoding', this.mail.encoding);\n  }\n\n  if (!/^text\\//i.test(element.contentType) || element.contentDisposition) {\n    node.setHeader('Content-Disposition', element.contentDisposition || 'attachment');\n  }\n\n  if (typeof element.content === 'string' && ['utf8', 'usascii', 'ascii'].indexOf(encoding) < 0) {\n    element.content = new Buffer(element.content, encoding);\n  }\n\n  node.setContent(element.content);\n  return node;\n};\n/**\n * List all attachments. Resulting attachment objects can be used as input for BuildMail nodes\n *\n * @param {Boolean} findRelated If true separate related attachments from attached ones\n * @returns {Object} An object of arrays (`related` and `attached`)\n */\n\n\nMailComposer.prototype._getAttachments = function (findRelated) {\n  var attachments = [].concat(this.mail.attachments || []).map(function (attachment, i) {\n    var data;\n\n    if (/^data:/i.test(attachment.path || attachment.href)) {\n      attachment = this._processDataUrl(attachment);\n    }\n\n    data = {\n      contentType: attachment.contentType || libmime.detectMimeType(attachment.filename || attachment.path || attachment.href || 'bin'),\n      contentDisposition: attachment.contentDisposition || 'attachment',\n      contentTransferEncoding: attachment.contentTransferEncoding\n    };\n\n    if (attachment.filename) {\n      data.filename = attachment.filename;\n    } else {\n      data.filename = (attachment.path || attachment.href || '').split('/').pop() || 'attachment-' + (i + 1);\n\n      if (data.filename.indexOf('.') < 0) {\n        data.filename += '.' + libmime.detectExtension(data.contentType);\n      }\n    }\n\n    if (/^https?:\\/\\//i.test(attachment.path)) {\n      attachment.href = attachment.path;\n      attachment.path = undefined;\n    }\n\n    if (attachment.cid) {\n      data.cid = attachment.cid;\n    }\n\n    if (attachment.path) {\n      data.content = {\n        path: attachment.path\n      };\n    } else if (attachment.href) {\n      data.content = {\n        href: attachment.href\n      };\n    } else {\n      data.content = attachment.content || '';\n    }\n\n    if (attachment.encoding) {\n      data.encoding = attachment.encoding;\n    }\n\n    return data;\n  }.bind(this));\n\n  if (!findRelated) {\n    return {\n      attached: attachments,\n      related: []\n    };\n  } else {\n    return {\n      attached: attachments.filter(function (attachment) {\n        return !attachment.cid;\n      }),\n      related: attachments.filter(function (attachment) {\n        return !!attachment.cid;\n      })\n    };\n  }\n};\n/**\n * List alternatives. Resulting objects can be used as input for BuildMail nodes\n *\n * @returns {Array} An array of alternative elements. Includes the `text` and `html` values as well\n */\n\n\nMailComposer.prototype._getAlternatives = function () {\n  var alternatives = [],\n      text,\n      html,\n      watchHtml;\n\n  if (this.mail.text) {\n    if (typeof this.mail.text === 'object' && this.mail.text.content || this.mail.text.path || this.mail.text.href) {\n      text = this.mail.text;\n    } else {\n      text = {\n        content: this.mail.text\n      };\n    }\n\n    text.contentType = 'text/plain' + (!text.encoding && libmime.isPlainText(text.content) ? '' : '; charset=utf-8');\n  }\n\n  if (this.mail.watchHtml) {\n    if (typeof this.mail.watchHtml === 'object' && this.mail.watchHtml.content || this.mail.watchHtml.path || this.mail.watchHtml.href) {\n      watchHtml = this.mail.watchHtml;\n    } else {\n      watchHtml = {\n        content: this.mail.watchHtml\n      };\n    }\n\n    watchHtml.contentType = 'text/watch-html' + (!watchHtml.encoding && libmime.isPlainText(watchHtml.content) ? '' : '; charset=utf-8');\n  }\n\n  if (this.mail.html) {\n    if (typeof this.mail.html === 'object' && this.mail.html.content || this.mail.html.path || this.mail.html.href) {\n      html = this.mail.html;\n    } else {\n      html = {\n        content: this.mail.html\n      };\n    }\n\n    html.contentType = 'text/html' + (!html.encoding && libmime.isPlainText(html.content) ? '' : '; charset=utf-8');\n  }\n\n  [].concat(text || []).concat(watchHtml || []).concat(html || []).concat(this.mail.alternatives || []).forEach(function (alternative) {\n    var data;\n\n    if (/^data:/i.test(alternative.path || alternative.href)) {\n      alternative = this._processDataUrl(alternative);\n    }\n\n    data = {\n      contentType: alternative.contentType || libmime.detectMimeType(alternative.filename || alternative.path || alternative.href || 'txt'),\n      contentTransferEncoding: alternative.contentTransferEncoding\n    };\n\n    if (alternative.filename) {\n      data.filename = alternative.filename;\n    }\n\n    if (/^https?:\\/\\//i.test(alternative.path)) {\n      alternative.href = alternative.path;\n      alternative.path = undefined;\n    }\n\n    if (alternative.path) {\n      data.content = {\n        path: alternative.path\n      };\n    } else if (alternative.href) {\n      data.content = {\n        href: alternative.href\n      };\n    } else {\n      data.content = alternative.content || '';\n    }\n\n    if (alternative.encoding) {\n      data.encoding = alternative.encoding;\n    }\n\n    alternatives.push(data);\n  }.bind(this));\n  return alternatives;\n};\n/**\n * Parses data uri and converts it to a Buffer\n *\n * @param {Object} element Content element\n * @return {Object} Parsed element\n */\n\n\nMailComposer.prototype._processDataUrl = function (element) {\n  var parts = (element.path || element.href).match(/^data:((?:[^;]*;)*(?:[^,]*)),(.*)$/i);\n\n  if (!parts) {\n    return element;\n  }\n\n  element.content = /\\bbase64$/i.test(parts[1]) ? new Buffer(parts[2], 'base64') : new Buffer(decodeURIComponent(parts[2]));\n\n  if ('path' in element) {\n    element.path = false;\n  }\n\n  if ('href' in element) {\n    element.href = false;\n  }\n\n  parts[1].split(';').forEach(function (item) {\n    if (/^\\w+\\/[^\\/]+$/i.test(item)) {\n      element.contentType = element.contentType || item.toLowerCase();\n    }\n  });\n  return element;\n};","map":{"version":3,"sources":["/Users/theodaguier/e-do/node_modules/mailcomposer/lib/mailcomposer.js"],"names":["BuildMail","require","libmime","module","exports","mail","MailComposer","compile","message","prototype","_alternatives","_getAlternatives","_htmlNode","filter","alternative","test","contentType","pop","_attachments","_getAttachments","_useRelated","related","length","_useAlternative","_useMixed","attached","_createMixed","_createAlternative","_createRelated","_createContentNode","concat","shift","content","forEach","header","key","replace","o","c","toUpperCase","setHeader","bind","headers","addHeader","envelope","setEnvelope","parentNode","node","baseBoundary","createChild","element","encoding","toString","toLowerCase","filename","cid","contentTransferEncoding","contentDisposition","indexOf","Buffer","setContent","findRelated","attachments","map","attachment","i","data","path","href","_processDataUrl","detectMimeType","split","detectExtension","undefined","alternatives","text","html","watchHtml","isPlainText","push","parts","match","decodeURIComponent","item"],"mappings":"AAAA;;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAArB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;AAC7B,SAAO,IAAIC,YAAJ,CAAiBD,IAAjB,EAAuBE,OAAvB,EAAP;AACH,CAFD;;AAIAJ,MAAM,CAACC,OAAP,CAAeE,YAAf,GAA8BA,YAA9B;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,YAAT,CAAsBD,IAAtB,EAA4B;AACxB,MAAI,EAAE,gBAAgBC,YAAlB,CAAJ,EAAqC;AACjC,WAAO,IAAIA,YAAJ,CAAiBD,IAAjB,CAAP;AACH;;AAED,OAAKA,IAAL,GAAYA,IAAI,IAAI,EAApB;AACA,OAAKG,OAAL,GAAe,KAAf;AACH;AAED;AACA;AACA;;;AACAF,YAAY,CAACG,SAAb,CAAuBF,OAAvB,GAAiC,YAAY;AACzC,OAAKG,aAAL,GAAqB,KAAKC,gBAAL,EAArB;AACA,OAAKC,SAAL,GAAiB,KAAKF,aAAL,CAAmBG,MAAnB,CAA0B,UAAUC,WAAV,EAAuB;AAC9D,WAAO,iBAAiBC,IAAjB,CAAsBD,WAAW,CAACE,WAAlC,CAAP;AACH,GAFgB,EAEdC,GAFc,EAAjB;AAGA,OAAKC,YAAL,GAAoB,KAAKC,eAAL,CAAqB,CAAC,CAAC,KAAKP,SAA5B,CAApB;AAEA,OAAKQ,WAAL,GAAmB,CAAC,EAAE,KAAKR,SAAL,IAAkB,KAAKM,YAAL,CAAkBG,OAAlB,CAA0BC,MAA9C,CAApB;AACA,OAAKC,eAAL,GAAuB,KAAKb,aAAL,CAAmBY,MAAnB,GAA4B,CAAnD;AACA,OAAKE,SAAL,GAAiB,KAAKN,YAAL,CAAkBO,QAAlB,CAA2BH,MAA3B,GAAoC,CAApC,IAA0C,KAAKZ,aAAL,CAAmBY,MAAnB,IAA6B,KAAKJ,YAAL,CAAkBO,QAAlB,CAA2BH,MAA3B,KAAsC,CAA9H,CATyC,CAWzC;;AACA,MAAI,KAAKE,SAAT,EAAoB;AAChB,SAAKhB,OAAL,GAAe,KAAKkB,YAAL,EAAf;AACH,GAFD,MAEO,IAAI,KAAKH,eAAT,EAA0B;AAC7B,SAAKf,OAAL,GAAe,KAAKmB,kBAAL,EAAf;AACH,GAFM,MAEA,IAAI,KAAKP,WAAT,EAAsB;AACzB,SAAKZ,OAAL,GAAe,KAAKoB,cAAL,EAAf;AACH,GAFM,MAEA;AACH,SAAKpB,OAAL,GAAe,KAAKqB,kBAAL,CAAwB,KAAxB,EAA+B,GAAGC,MAAH,CAAU,KAAKpB,aAAL,IAAsB,EAAhC,EAAoCoB,MAApC,CAA2C,KAAKZ,YAAL,CAAkBO,QAAlB,IAA8B,EAAzE,EAA6EM,KAA7E,MAAwF;AAClIf,MAAAA,WAAW,EAAE,YADqH;AAElIgB,MAAAA,OAAO,EAAE;AAFyH,KAAvH,CAAf;AAIH,GAvBwC,CAyBzC;;;AACA,GACI,MADJ,EAEI,QAFJ,EAGI,IAHJ,EAII,IAJJ,EAKI,KALJ,EAMI,UANJ,EAOI,aAPJ,EAQI,YARJ,EASI,SATJ,EAUI,YAVJ,EAWI,MAXJ,EAYEC,OAZF,CAYU,UAAUC,MAAV,EAAkB;AACxB,QAAIC,GAAG,GAAGD,MAAM,CAACE,OAAP,CAAe,QAAf,EAAyB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC/C,aAAOA,CAAC,CAACC,WAAF,EAAP;AACH,KAFS,CAAV;;AAGA,QAAI,KAAKlC,IAAL,CAAU8B,GAAV,CAAJ,EAAoB;AAChB,WAAK3B,OAAL,CAAagC,SAAb,CAAuBN,MAAvB,EAA+B,KAAK7B,IAAL,CAAU8B,GAAV,CAA/B;AACH;AACJ,GAPS,CAORM,IAPQ,CAOH,IAPG,CAZV,EA1ByC,CA+CzC;;AACA,MAAI,KAAKpC,IAAL,CAAUqC,OAAd,EAAuB;AACnB,SAAKlC,OAAL,CAAamC,SAAb,CAAuB,KAAKtC,IAAL,CAAUqC,OAAjC;AACH,GAlDwC,CAoDzC;;;AACA,MAAI,KAAKrC,IAAL,CAAUuC,QAAd,EAAwB;AACpB,SAAKpC,OAAL,CAAaqC,WAAb,CAAyB,KAAKxC,IAAL,CAAUuC,QAAnC;AACH;;AAED,SAAO,KAAKpC,OAAZ;AACH,CA1DD;AA4DA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAF,YAAY,CAACG,SAAb,CAAuBiB,YAAvB,GAAsC,UAAUoB,UAAV,EAAsB;AACxD,MAAIC,IAAJ;;AAEA,MAAI,CAACD,UAAL,EAAiB;AACbC,IAAAA,IAAI,GAAG,IAAI/C,SAAJ,CAAc,iBAAd,EAAiC;AACpCgD,MAAAA,YAAY,EAAE,KAAK3C,IAAL,CAAU2C;AADY,KAAjC,CAAP;AAGH,GAJD,MAIO;AACHD,IAAAA,IAAI,GAAGD,UAAU,CAACG,WAAX,CAAuB,iBAAvB,CAAP;AACH;;AAED,MAAI,KAAK1B,eAAT,EAA0B;AACtB,SAAKI,kBAAL,CAAwBoB,IAAxB;AACH,GAFD,MAEO,IAAI,KAAK3B,WAAT,EAAsB;AACzB,SAAKQ,cAAL,CAAoBmB,IAApB;AACH;;AAED,KAAGjB,MAAH,CAAU,CAAC,KAAKP,eAAN,IAAyB,KAAKb,aAA9B,IAA+C,EAAzD,EAA6DoB,MAA7D,CAAoE,KAAKZ,YAAL,CAAkBO,QAAlB,IAA8B,EAAlG,EAAsGQ,OAAtG,CAA8G,UAAUiB,OAAV,EAAmB;AAC7H;AACA,QAAI,CAAC,KAAK9B,WAAN,IAAqB8B,OAAO,KAAK,KAAKtC,SAA1C,EAAqD;AACjD,WAAKiB,kBAAL,CAAwBkB,IAAxB,EAA8BG,OAA9B;AACH;AACJ,GAL6G,CAK5GT,IAL4G,CAKvG,IALuG,CAA9G;AAOA,SAAOM,IAAP;AACH,CAzBD;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAzC,YAAY,CAACG,SAAb,CAAuBkB,kBAAvB,GAA4C,UAAUmB,UAAV,EAAsB;AAC9D,MAAIC,IAAJ;;AAEA,MAAI,CAACD,UAAL,EAAiB;AACbC,IAAAA,IAAI,GAAG,IAAI/C,SAAJ,CAAc,uBAAd,EAAuC;AAC1CgD,MAAAA,YAAY,EAAE,KAAK3C,IAAL,CAAU2C;AADkB,KAAvC,CAAP;AAGH,GAJD,MAIO;AACHD,IAAAA,IAAI,GAAGD,UAAU,CAACG,WAAX,CAAuB,uBAAvB,CAAP;AACH;;AAED,OAAKvC,aAAL,CAAmBuB,OAAnB,CAA2B,UAAUnB,WAAV,EAAuB;AAC9C,QAAI,KAAKM,WAAL,IAAoB,KAAKR,SAAL,KAAmBE,WAA3C,EAAwD;AACpD,WAAKc,cAAL,CAAoBmB,IAApB;AACH,KAFD,MAEO;AACH,WAAKlB,kBAAL,CAAwBkB,IAAxB,EAA8BjC,WAA9B;AACH;AACJ,GAN0B,CAMzB2B,IANyB,CAMpB,IANoB,CAA3B;;AAQA,SAAOM,IAAP;AACH,CApBD;AAsBA;AACA;AACA;AACA;AACA;AACA;;;AACAzC,YAAY,CAACG,SAAb,CAAuBmB,cAAvB,GAAwC,UAAUkB,UAAV,EAAsB;AAC1D,MAAIC,IAAJ;;AAEA,MAAI,CAACD,UAAL,EAAiB;AACbC,IAAAA,IAAI,GAAG,IAAI/C,SAAJ,CAAc,qCAAd,EAAqD;AACxDgD,MAAAA,YAAY,EAAE,KAAK3C,IAAL,CAAU2C;AADgC,KAArD,CAAP;AAGH,GAJD,MAIO;AACHD,IAAAA,IAAI,GAAGD,UAAU,CAACG,WAAX,CAAuB,qCAAvB,CAAP;AACH;;AAED,OAAKpB,kBAAL,CAAwBkB,IAAxB,EAA8B,KAAKnC,SAAnC;;AAEA,OAAKM,YAAL,CAAkBG,OAAlB,CAA0BY,OAA1B,CAAkC,UAAUnB,WAAV,EAAuB;AACrD,SAAKe,kBAAL,CAAwBkB,IAAxB,EAA8BjC,WAA9B;AACH,GAFiC,CAEhC2B,IAFgC,CAE3B,IAF2B,CAAlC;;AAIA,SAAOM,IAAP;AACH,CAlBD;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAzC,YAAY,CAACG,SAAb,CAAuBoB,kBAAvB,GAA4C,UAAUiB,UAAV,EAAsBI,OAAtB,EAA+B;AACvEA,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACAA,EAAAA,OAAO,CAAClB,OAAR,GAAkBkB,OAAO,CAAClB,OAAR,IAAmB,EAArC;AAEA,MAAIe,IAAJ;AACA,MAAII,QAAQ,GAAG,CAACD,OAAO,CAACC,QAAR,IAAoB,MAArB,EACVC,QADU,GAEVC,WAFU,GAGVjB,OAHU,CAGF,SAHE,EAGS,EAHT,CAAf;;AAKA,MAAI,CAACU,UAAL,EAAiB;AACbC,IAAAA,IAAI,GAAG,IAAI/C,SAAJ,CAAckD,OAAO,CAAClC,WAAtB,EAAmC;AACtCsC,MAAAA,QAAQ,EAAEJ,OAAO,CAACI,QADoB;AAEtCN,MAAAA,YAAY,EAAE,KAAK3C,IAAL,CAAU2C;AAFc,KAAnC,CAAP;AAIH,GALD,MAKO;AACHD,IAAAA,IAAI,GAAGD,UAAU,CAACG,WAAX,CAAuBC,OAAO,CAAClC,WAA/B,EAA4C;AAC/CsC,MAAAA,QAAQ,EAAEJ,OAAO,CAACI;AAD6B,KAA5C,CAAP;AAGH;;AAED,MAAIJ,OAAO,CAACK,GAAZ,EAAiB;AACbR,IAAAA,IAAI,CAACP,SAAL,CAAe,YAAf,EAA6B,MAAMU,OAAO,CAACK,GAAR,CAAYnB,OAAZ,CAAoB,OAApB,EAA6B,EAA7B,CAAN,GAAyC,GAAtE;AACH;;AAED,MAAIc,OAAO,CAACM,uBAAZ,EAAqC;AACjCT,IAAAA,IAAI,CAACP,SAAL,CAAe,2BAAf,EAA4CU,OAAO,CAACM,uBAApD;AACH,GAFD,MAEO,IAAI,KAAKnD,IAAL,CAAU8C,QAAV,IAAsB,WAAWpC,IAAX,CAAgBmC,OAAO,CAAClC,WAAxB,CAA1B,EAAgE;AACnE+B,IAAAA,IAAI,CAACP,SAAL,CAAe,2BAAf,EAA4C,KAAKnC,IAAL,CAAU8C,QAAtD;AACH;;AAED,MAAI,CAAC,WAAWpC,IAAX,CAAgBmC,OAAO,CAAClC,WAAxB,CAAD,IAAyCkC,OAAO,CAACO,kBAArD,EAAyE;AACrEV,IAAAA,IAAI,CAACP,SAAL,CAAe,qBAAf,EAAsCU,OAAO,CAACO,kBAAR,IAA8B,YAApE;AACH;;AAED,MAAI,OAAOP,OAAO,CAAClB,OAAf,KAA2B,QAA3B,IAAuC,CAAC,MAAD,EAAS,SAAT,EAAoB,OAApB,EAA6B0B,OAA7B,CAAqCP,QAArC,IAAiD,CAA5F,EAA+F;AAC3FD,IAAAA,OAAO,CAAClB,OAAR,GAAkB,IAAI2B,MAAJ,CAAWT,OAAO,CAAClB,OAAnB,EAA4BmB,QAA5B,CAAlB;AACH;;AAEDJ,EAAAA,IAAI,CAACa,UAAL,CAAgBV,OAAO,CAAClB,OAAxB;AAEA,SAAOe,IAAP;AACH,CA1CD;AA4CA;AACA;AACA;AACA;AACA;AACA;;;AACAzC,YAAY,CAACG,SAAb,CAAuBU,eAAvB,GAAyC,UAAU0C,WAAV,EAAuB;AAC5D,MAAIC,WAAW,GAAG,GAAGhC,MAAH,CAAU,KAAKzB,IAAL,CAAUyD,WAAV,IAAyB,EAAnC,EAAuCC,GAAvC,CAA2C,UAAUC,UAAV,EAAsBC,CAAtB,EAAyB;AAClF,QAAIC,IAAJ;;AAEA,QAAI,UAAUnD,IAAV,CAAeiD,UAAU,CAACG,IAAX,IAAmBH,UAAU,CAACI,IAA7C,CAAJ,EAAwD;AACpDJ,MAAAA,UAAU,GAAG,KAAKK,eAAL,CAAqBL,UAArB,CAAb;AACH;;AAEDE,IAAAA,IAAI,GAAG;AACHlD,MAAAA,WAAW,EAAEgD,UAAU,CAAChD,WAAX,IACTd,OAAO,CAACoE,cAAR,CAAuBN,UAAU,CAACV,QAAX,IAAuBU,UAAU,CAACG,IAAlC,IAA0CH,UAAU,CAACI,IAArD,IAA6D,KAApF,CAFD;AAGHX,MAAAA,kBAAkB,EAAEO,UAAU,CAACP,kBAAX,IAAiC,YAHlD;AAIHD,MAAAA,uBAAuB,EAAEQ,UAAU,CAACR;AAJjC,KAAP;;AAOA,QAAIQ,UAAU,CAACV,QAAf,EAAyB;AACrBY,MAAAA,IAAI,CAACZ,QAAL,GAAgBU,UAAU,CAACV,QAA3B;AACH,KAFD,MAEO;AACHY,MAAAA,IAAI,CAACZ,QAAL,GAAgB,CAACU,UAAU,CAACG,IAAX,IAAmBH,UAAU,CAACI,IAA9B,IAAsC,EAAvC,EAA2CG,KAA3C,CAAiD,GAAjD,EAAsDtD,GAAtD,MAA+D,iBAAiBgD,CAAC,GAAG,CAArB,CAA/E;;AACA,UAAIC,IAAI,CAACZ,QAAL,CAAcI,OAAd,CAAsB,GAAtB,IAA6B,CAAjC,EAAoC;AAChCQ,QAAAA,IAAI,CAACZ,QAAL,IAAiB,MAAMpD,OAAO,CAACsE,eAAR,CAAwBN,IAAI,CAAClD,WAA7B,CAAvB;AACH;AACJ;;AAED,QAAI,gBAAgBD,IAAhB,CAAqBiD,UAAU,CAACG,IAAhC,CAAJ,EAA2C;AACvCH,MAAAA,UAAU,CAACI,IAAX,GAAkBJ,UAAU,CAACG,IAA7B;AACAH,MAAAA,UAAU,CAACG,IAAX,GAAkBM,SAAlB;AACH;;AAED,QAAIT,UAAU,CAACT,GAAf,EAAoB;AAChBW,MAAAA,IAAI,CAACX,GAAL,GAAWS,UAAU,CAACT,GAAtB;AACH;;AAED,QAAIS,UAAU,CAACG,IAAf,EAAqB;AACjBD,MAAAA,IAAI,CAAClC,OAAL,GAAe;AACXmC,QAAAA,IAAI,EAAEH,UAAU,CAACG;AADN,OAAf;AAGH,KAJD,MAIO,IAAIH,UAAU,CAACI,IAAf,EAAqB;AACxBF,MAAAA,IAAI,CAAClC,OAAL,GAAe;AACXoC,QAAAA,IAAI,EAAEJ,UAAU,CAACI;AADN,OAAf;AAGH,KAJM,MAIA;AACHF,MAAAA,IAAI,CAAClC,OAAL,GAAegC,UAAU,CAAChC,OAAX,IAAsB,EAArC;AACH;;AAED,QAAIgC,UAAU,CAACb,QAAf,EAAyB;AACrBe,MAAAA,IAAI,CAACf,QAAL,GAAgBa,UAAU,CAACb,QAA3B;AACH;;AAED,WAAOe,IAAP;AACH,GAjD4D,CAiD3DzB,IAjD2D,CAiDtD,IAjDsD,CAA3C,CAAlB;;AAmDA,MAAI,CAACoB,WAAL,EAAkB;AACd,WAAO;AACHpC,MAAAA,QAAQ,EAAEqC,WADP;AAEHzC,MAAAA,OAAO,EAAE;AAFN,KAAP;AAIH,GALD,MAKO;AACH,WAAO;AACHI,MAAAA,QAAQ,EAAEqC,WAAW,CAACjD,MAAZ,CAAmB,UAAUmD,UAAV,EAAsB;AAC/C,eAAO,CAACA,UAAU,CAACT,GAAnB;AACH,OAFS,CADP;AAIHlC,MAAAA,OAAO,EAAEyC,WAAW,CAACjD,MAAZ,CAAmB,UAAUmD,UAAV,EAAsB;AAC9C,eAAO,CAAC,CAACA,UAAU,CAACT,GAApB;AACH,OAFQ;AAJN,KAAP;AAQH;AACJ,CAnED;AAqEA;AACA;AACA;AACA;AACA;;;AACAjD,YAAY,CAACG,SAAb,CAAuBE,gBAAvB,GAA0C,YAAY;AAClD,MAAI+D,YAAY,GAAG,EAAnB;AAAA,MACIC,IADJ;AAAA,MACUC,IADV;AAAA,MACgBC,SADhB;;AAGA,MAAI,KAAKxE,IAAL,CAAUsE,IAAd,EAAoB;AAChB,QAAI,OAAO,KAAKtE,IAAL,CAAUsE,IAAjB,KAA0B,QAA1B,IAAsC,KAAKtE,IAAL,CAAUsE,IAAV,CAAe3C,OAArD,IAAgE,KAAK3B,IAAL,CAAUsE,IAAV,CAAeR,IAA/E,IAAuF,KAAK9D,IAAL,CAAUsE,IAAV,CAAeP,IAA1G,EAAgH;AAC5GO,MAAAA,IAAI,GAAG,KAAKtE,IAAL,CAAUsE,IAAjB;AACH,KAFD,MAEO;AACHA,MAAAA,IAAI,GAAG;AACH3C,QAAAA,OAAO,EAAE,KAAK3B,IAAL,CAAUsE;AADhB,OAAP;AAGH;;AACDA,IAAAA,IAAI,CAAC3D,WAAL,GAAmB,gBAAgB,CAAC2D,IAAI,CAACxB,QAAN,IAAkBjD,OAAO,CAAC4E,WAAR,CAAoBH,IAAI,CAAC3C,OAAzB,CAAlB,GAAsD,EAAtD,GAA2D,iBAA3E,CAAnB;AACH;;AAED,MAAI,KAAK3B,IAAL,CAAUwE,SAAd,EAAyB;AACrB,QAAI,OAAO,KAAKxE,IAAL,CAAUwE,SAAjB,KAA+B,QAA/B,IAA2C,KAAKxE,IAAL,CAAUwE,SAAV,CAAoB7C,OAA/D,IAA0E,KAAK3B,IAAL,CAAUwE,SAAV,CAAoBV,IAA9F,IAAsG,KAAK9D,IAAL,CAAUwE,SAAV,CAAoBT,IAA9H,EAAoI;AAChIS,MAAAA,SAAS,GAAG,KAAKxE,IAAL,CAAUwE,SAAtB;AACH,KAFD,MAEO;AACHA,MAAAA,SAAS,GAAG;AACR7C,QAAAA,OAAO,EAAE,KAAK3B,IAAL,CAAUwE;AADX,OAAZ;AAGH;;AACDA,IAAAA,SAAS,CAAC7D,WAAV,GAAwB,qBAAqB,CAAC6D,SAAS,CAAC1B,QAAX,IAAuBjD,OAAO,CAAC4E,WAAR,CAAoBD,SAAS,CAAC7C,OAA9B,CAAvB,GAAgE,EAAhE,GAAqE,iBAA1F,CAAxB;AACH;;AAED,MAAI,KAAK3B,IAAL,CAAUuE,IAAd,EAAoB;AAChB,QAAI,OAAO,KAAKvE,IAAL,CAAUuE,IAAjB,KAA0B,QAA1B,IAAsC,KAAKvE,IAAL,CAAUuE,IAAV,CAAe5C,OAArD,IAAgE,KAAK3B,IAAL,CAAUuE,IAAV,CAAeT,IAA/E,IAAuF,KAAK9D,IAAL,CAAUuE,IAAV,CAAeR,IAA1G,EAAgH;AAC5GQ,MAAAA,IAAI,GAAG,KAAKvE,IAAL,CAAUuE,IAAjB;AACH,KAFD,MAEO;AACHA,MAAAA,IAAI,GAAG;AACH5C,QAAAA,OAAO,EAAE,KAAK3B,IAAL,CAAUuE;AADhB,OAAP;AAGH;;AACDA,IAAAA,IAAI,CAAC5D,WAAL,GAAmB,eAAe,CAAC4D,IAAI,CAACzB,QAAN,IAAkBjD,OAAO,CAAC4E,WAAR,CAAoBF,IAAI,CAAC5C,OAAzB,CAAlB,GAAsD,EAAtD,GAA2D,iBAA1E,CAAnB;AACH;;AAED,KAAGF,MAAH,CAAU6C,IAAI,IAAI,EAAlB,EAAsB7C,MAAtB,CAA6B+C,SAAS,IAAI,EAA1C,EAA8C/C,MAA9C,CAAqD8C,IAAI,IAAI,EAA7D,EAAiE9C,MAAjE,CAAwE,KAAKzB,IAAL,CAAUqE,YAAV,IAA0B,EAAlG,EAAsGzC,OAAtG,CAA8G,UAAUnB,WAAV,EAAuB;AACjI,QAAIoD,IAAJ;;AAEA,QAAI,UAAUnD,IAAV,CAAeD,WAAW,CAACqD,IAAZ,IAAoBrD,WAAW,CAACsD,IAA/C,CAAJ,EAA0D;AACtDtD,MAAAA,WAAW,GAAG,KAAKuD,eAAL,CAAqBvD,WAArB,CAAd;AACH;;AAEDoD,IAAAA,IAAI,GAAG;AACHlD,MAAAA,WAAW,EAAEF,WAAW,CAACE,WAAZ,IACTd,OAAO,CAACoE,cAAR,CAAuBxD,WAAW,CAACwC,QAAZ,IAAwBxC,WAAW,CAACqD,IAApC,IAA4CrD,WAAW,CAACsD,IAAxD,IAAgE,KAAvF,CAFD;AAGHZ,MAAAA,uBAAuB,EAAE1C,WAAW,CAAC0C;AAHlC,KAAP;;AAMA,QAAI1C,WAAW,CAACwC,QAAhB,EAA0B;AACtBY,MAAAA,IAAI,CAACZ,QAAL,GAAgBxC,WAAW,CAACwC,QAA5B;AACH;;AAED,QAAI,gBAAgBvC,IAAhB,CAAqBD,WAAW,CAACqD,IAAjC,CAAJ,EAA4C;AACxCrD,MAAAA,WAAW,CAACsD,IAAZ,GAAmBtD,WAAW,CAACqD,IAA/B;AACArD,MAAAA,WAAW,CAACqD,IAAZ,GAAmBM,SAAnB;AACH;;AAED,QAAI3D,WAAW,CAACqD,IAAhB,EAAsB;AAClBD,MAAAA,IAAI,CAAClC,OAAL,GAAe;AACXmC,QAAAA,IAAI,EAAErD,WAAW,CAACqD;AADP,OAAf;AAGH,KAJD,MAIO,IAAIrD,WAAW,CAACsD,IAAhB,EAAsB;AACzBF,MAAAA,IAAI,CAAClC,OAAL,GAAe;AACXoC,QAAAA,IAAI,EAAEtD,WAAW,CAACsD;AADP,OAAf;AAGH,KAJM,MAIA;AACHF,MAAAA,IAAI,CAAClC,OAAL,GAAelB,WAAW,CAACkB,OAAZ,IAAuB,EAAtC;AACH;;AAED,QAAIlB,WAAW,CAACqC,QAAhB,EAA0B;AACtBe,MAAAA,IAAI,CAACf,QAAL,GAAgBrC,WAAW,CAACqC,QAA5B;AACH;;AAEDuB,IAAAA,YAAY,CAACK,IAAb,CAAkBb,IAAlB;AACH,GAvC6G,CAuC5GzB,IAvC4G,CAuCvG,IAvCuG,CAA9G;AAyCA,SAAOiC,YAAP;AACH,CA/ED;AAiFA;AACA;AACA;AACA;AACA;AACA;;;AACApE,YAAY,CAACG,SAAb,CAAuB4D,eAAvB,GAAyC,UAAUnB,OAAV,EAAmB;AACxD,MAAI8B,KAAK,GAAG,CAAC9B,OAAO,CAACiB,IAAR,IAAgBjB,OAAO,CAACkB,IAAzB,EAA+Ba,KAA/B,CAAqC,qCAArC,CAAZ;;AACA,MAAI,CAACD,KAAL,EAAY;AACR,WAAO9B,OAAP;AACH;;AAEDA,EAAAA,OAAO,CAAClB,OAAR,GAAkB,aAAajB,IAAb,CAAkBiE,KAAK,CAAC,CAAD,CAAvB,IAA8B,IAAIrB,MAAJ,CAAWqB,KAAK,CAAC,CAAD,CAAhB,EAAqB,QAArB,CAA9B,GAA+D,IAAIrB,MAAJ,CAAWuB,kBAAkB,CAACF,KAAK,CAAC,CAAD,CAAN,CAA7B,CAAjF;;AAEA,MAAI,UAAU9B,OAAd,EAAuB;AACnBA,IAAAA,OAAO,CAACiB,IAAR,GAAe,KAAf;AACH;;AAED,MAAI,UAAUjB,OAAd,EAAuB;AACnBA,IAAAA,OAAO,CAACkB,IAAR,GAAe,KAAf;AACH;;AAEDY,EAAAA,KAAK,CAAC,CAAD,CAAL,CAAST,KAAT,CAAe,GAAf,EAAoBtC,OAApB,CAA4B,UAAUkD,IAAV,EAAgB;AACxC,QAAI,iBAAiBpE,IAAjB,CAAsBoE,IAAtB,CAAJ,EAAiC;AAC7BjC,MAAAA,OAAO,CAAClC,WAAR,GAAsBkC,OAAO,CAAClC,WAAR,IAAuBmE,IAAI,CAAC9B,WAAL,EAA7C;AACH;AACJ,GAJD;AAMA,SAAOH,OAAP;AACH,CAvBD","sourcesContent":["'use strict';\n\nvar BuildMail = require('buildmail');\nvar libmime = require('libmime');\n\nmodule.exports = function (mail) {\n    return new MailComposer(mail).compile();\n};\n\nmodule.exports.MailComposer = MailComposer;\n\n/**\n * Creates the object for composing a BuildMail instance out from the mail options\n *\n * @constructor\n * @param {Object} mail Mail options\n */\nfunction MailComposer(mail) {\n    if (!(this instanceof MailComposer)) {\n        return new MailComposer(mail);\n    }\n\n    this.mail = mail || {};\n    this.message = false;\n}\n\n/**\n * Builds BuildMail instance\n */\nMailComposer.prototype.compile = function () {\n    this._alternatives = this._getAlternatives();\n    this._htmlNode = this._alternatives.filter(function (alternative) {\n        return /^text\\/html\\b/i.test(alternative.contentType);\n    }).pop();\n    this._attachments = this._getAttachments(!!this._htmlNode);\n\n    this._useRelated = !!(this._htmlNode && this._attachments.related.length);\n    this._useAlternative = this._alternatives.length > 1;\n    this._useMixed = this._attachments.attached.length > 1 || (this._alternatives.length && this._attachments.attached.length === 1);\n\n    // Compose MIME tree\n    if (this._useMixed) {\n        this.message = this._createMixed();\n    } else if (this._useAlternative) {\n        this.message = this._createAlternative();\n    } else if (this._useRelated) {\n        this.message = this._createRelated();\n    } else {\n        this.message = this._createContentNode(false, [].concat(this._alternatives || []).concat(this._attachments.attached || []).shift() || {\n            contentType: 'text/plain',\n            content: ''\n        });\n    }\n\n    // Add headers to the root node\n    [\n        'from',\n        'sender',\n        'to',\n        'cc',\n        'bcc',\n        'reply-to',\n        'in-reply-to',\n        'references',\n        'subject',\n        'message-id',\n        'date'\n    ].forEach(function (header) {\n        var key = header.replace(/-(\\w)/g, function (o, c) {\n            return c.toUpperCase();\n        });\n        if (this.mail[key]) {\n            this.message.setHeader(header, this.mail[key]);\n        }\n    }.bind(this));\n\n    // Add custom headers\n    if (this.mail.headers) {\n        this.message.addHeader(this.mail.headers);\n    }\n\n    // Sets custom envelope\n    if (this.mail.envelope) {\n        this.message.setEnvelope(this.mail.envelope);\n    }\n\n    return this.message;\n};\n\n/**\n * Builds multipart/mixed node. It should always contain different type of elements on the same level\n * eg. text + attachments\n *\n * @param {Object} parentNode Parent for this note. If it does not exist, a root node is created\n * @returns {Object} BuildMail node element\n */\nMailComposer.prototype._createMixed = function (parentNode) {\n    var node;\n\n    if (!parentNode) {\n        node = new BuildMail('multipart/mixed', {\n            baseBoundary: this.mail.baseBoundary\n        });\n    } else {\n        node = parentNode.createChild('multipart/mixed');\n    }\n\n    if (this._useAlternative) {\n        this._createAlternative(node);\n    } else if (this._useRelated) {\n        this._createRelated(node);\n    }\n\n    [].concat(!this._useAlternative && this._alternatives || []).concat(this._attachments.attached || []).forEach(function (element) {\n        // if the element is a html node from related subpart then ignore it\n        if (!this._useRelated || element !== this._htmlNode) {\n            this._createContentNode(node, element);\n        }\n    }.bind(this));\n\n    return node;\n};\n\n/**\n * Builds multipart/alternative node. It should always contain same type of elements on the same level\n * eg. text + html view of the same data\n *\n * @param {Object} parentNode Parent for this note. If it does not exist, a root node is created\n * @returns {Object} BuildMail node element\n */\nMailComposer.prototype._createAlternative = function (parentNode) {\n    var node;\n\n    if (!parentNode) {\n        node = new BuildMail('multipart/alternative', {\n            baseBoundary: this.mail.baseBoundary\n        });\n    } else {\n        node = parentNode.createChild('multipart/alternative');\n    }\n\n    this._alternatives.forEach(function (alternative) {\n        if (this._useRelated && this._htmlNode === alternative) {\n            this._createRelated(node);\n        } else {\n            this._createContentNode(node, alternative);\n        }\n    }.bind(this));\n\n    return node;\n};\n\n/**\n * Builds multipart/related node. It should always contain html node with related attachments\n *\n * @param {Object} parentNode Parent for this note. If it does not exist, a root node is created\n * @returns {Object} BuildMail node element\n */\nMailComposer.prototype._createRelated = function (parentNode) {\n    var node;\n\n    if (!parentNode) {\n        node = new BuildMail('multipart/related; type=\"text/html\"', {\n            baseBoundary: this.mail.baseBoundary\n        });\n    } else {\n        node = parentNode.createChild('multipart/related; type=\"text/html\"');\n    }\n\n    this._createContentNode(node, this._htmlNode);\n\n    this._attachments.related.forEach(function (alternative) {\n        this._createContentNode(node, alternative);\n    }.bind(this));\n\n    return node;\n};\n\n/**\n * Creates a regular node with contents\n *\n * @param {Object} parentNode Parent for this note. If it does not exist, a root node is created\n * @param {Object} element Node data\n * @returns {Object} BuildMail node element\n */\nMailComposer.prototype._createContentNode = function (parentNode, element) {\n    element = element || {};\n    element.content = element.content || '';\n\n    var node;\n    var encoding = (element.encoding || 'utf8')\n        .toString()\n        .toLowerCase()\n        .replace(/[-_\\s]/g, '');\n\n    if (!parentNode) {\n        node = new BuildMail(element.contentType, {\n            filename: element.filename,\n            baseBoundary: this.mail.baseBoundary\n        });\n    } else {\n        node = parentNode.createChild(element.contentType, {\n            filename: element.filename\n        });\n    }\n\n    if (element.cid) {\n        node.setHeader('Content-Id', '<' + element.cid.replace(/[<>]/g, '') + '>');\n    }\n\n    if (element.contentTransferEncoding) {\n        node.setHeader('Content-Transfer-Encoding', element.contentTransferEncoding);\n    } else if (this.mail.encoding && /^text\\//i.test(element.contentType)) {\n        node.setHeader('Content-Transfer-Encoding', this.mail.encoding);\n    }\n\n    if (!/^text\\//i.test(element.contentType) || element.contentDisposition) {\n        node.setHeader('Content-Disposition', element.contentDisposition || 'attachment');\n    }\n\n    if (typeof element.content === 'string' && ['utf8', 'usascii', 'ascii'].indexOf(encoding) < 0) {\n        element.content = new Buffer(element.content, encoding);\n    }\n\n    node.setContent(element.content);\n\n    return node;\n};\n\n/**\n * List all attachments. Resulting attachment objects can be used as input for BuildMail nodes\n *\n * @param {Boolean} findRelated If true separate related attachments from attached ones\n * @returns {Object} An object of arrays (`related` and `attached`)\n */\nMailComposer.prototype._getAttachments = function (findRelated) {\n    var attachments = [].concat(this.mail.attachments || []).map(function (attachment, i) {\n        var data;\n\n        if (/^data:/i.test(attachment.path || attachment.href)) {\n            attachment = this._processDataUrl(attachment);\n        }\n\n        data = {\n            contentType: attachment.contentType ||\n                libmime.detectMimeType(attachment.filename || attachment.path || attachment.href || 'bin'),\n            contentDisposition: attachment.contentDisposition || 'attachment',\n            contentTransferEncoding: attachment.contentTransferEncoding\n        };\n\n        if (attachment.filename) {\n            data.filename = attachment.filename;\n        } else {\n            data.filename = (attachment.path || attachment.href || '').split('/').pop() || 'attachment-' + (i + 1);\n            if (data.filename.indexOf('.') < 0) {\n                data.filename += '.' + libmime.detectExtension(data.contentType);\n            }\n        }\n\n        if (/^https?:\\/\\//i.test(attachment.path)) {\n            attachment.href = attachment.path;\n            attachment.path = undefined;\n        }\n\n        if (attachment.cid) {\n            data.cid = attachment.cid;\n        }\n\n        if (attachment.path) {\n            data.content = {\n                path: attachment.path\n            };\n        } else if (attachment.href) {\n            data.content = {\n                href: attachment.href\n            };\n        } else {\n            data.content = attachment.content || '';\n        }\n\n        if (attachment.encoding) {\n            data.encoding = attachment.encoding;\n        }\n\n        return data;\n    }.bind(this));\n\n    if (!findRelated) {\n        return {\n            attached: attachments,\n            related: []\n        };\n    } else {\n        return {\n            attached: attachments.filter(function (attachment) {\n                return !attachment.cid;\n            }),\n            related: attachments.filter(function (attachment) {\n                return !!attachment.cid;\n            })\n        };\n    }\n};\n\n/**\n * List alternatives. Resulting objects can be used as input for BuildMail nodes\n *\n * @returns {Array} An array of alternative elements. Includes the `text` and `html` values as well\n */\nMailComposer.prototype._getAlternatives = function () {\n    var alternatives = [],\n        text, html, watchHtml;\n\n    if (this.mail.text) {\n        if (typeof this.mail.text === 'object' && this.mail.text.content || this.mail.text.path || this.mail.text.href) {\n            text = this.mail.text;\n        } else {\n            text = {\n                content: this.mail.text\n            };\n        }\n        text.contentType = 'text/plain' + (!text.encoding && libmime.isPlainText(text.content) ? '' : '; charset=utf-8');\n    }\n\n    if (this.mail.watchHtml) {\n        if (typeof this.mail.watchHtml === 'object' && this.mail.watchHtml.content || this.mail.watchHtml.path || this.mail.watchHtml.href) {\n            watchHtml = this.mail.watchHtml;\n        } else {\n            watchHtml = {\n                content: this.mail.watchHtml\n            };\n        }\n        watchHtml.contentType = 'text/watch-html' + (!watchHtml.encoding && libmime.isPlainText(watchHtml.content) ? '' : '; charset=utf-8');\n    }\n\n    if (this.mail.html) {\n        if (typeof this.mail.html === 'object' && this.mail.html.content || this.mail.html.path || this.mail.html.href) {\n            html = this.mail.html;\n        } else {\n            html = {\n                content: this.mail.html\n            };\n        }\n        html.contentType = 'text/html' + (!html.encoding && libmime.isPlainText(html.content) ? '' : '; charset=utf-8');\n    }\n\n    [].concat(text || []).concat(watchHtml || []).concat(html || []).concat(this.mail.alternatives || []).forEach(function (alternative) {\n        var data;\n\n        if (/^data:/i.test(alternative.path || alternative.href)) {\n            alternative = this._processDataUrl(alternative);\n        }\n\n        data = {\n            contentType: alternative.contentType ||\n                libmime.detectMimeType(alternative.filename || alternative.path || alternative.href || 'txt'),\n            contentTransferEncoding: alternative.contentTransferEncoding\n        };\n\n        if (alternative.filename) {\n            data.filename = alternative.filename;\n        }\n\n        if (/^https?:\\/\\//i.test(alternative.path)) {\n            alternative.href = alternative.path;\n            alternative.path = undefined;\n        }\n\n        if (alternative.path) {\n            data.content = {\n                path: alternative.path\n            };\n        } else if (alternative.href) {\n            data.content = {\n                href: alternative.href\n            };\n        } else {\n            data.content = alternative.content || '';\n        }\n\n        if (alternative.encoding) {\n            data.encoding = alternative.encoding;\n        }\n\n        alternatives.push(data);\n    }.bind(this));\n\n    return alternatives;\n};\n\n/**\n * Parses data uri and converts it to a Buffer\n *\n * @param {Object} element Content element\n * @return {Object} Parsed element\n */\nMailComposer.prototype._processDataUrl = function (element) {\n    var parts = (element.path || element.href).match(/^data:((?:[^;]*;)*(?:[^,]*)),(.*)$/i);\n    if (!parts) {\n        return element;\n    }\n\n    element.content = /\\bbase64$/i.test(parts[1]) ? new Buffer(parts[2], 'base64') : new Buffer(decodeURIComponent(parts[2]));\n\n    if ('path' in element) {\n        element.path = false;\n    }\n\n    if ('href' in element) {\n        element.href = false;\n    }\n\n    parts[1].split(';').forEach(function (item) {\n        if (/^\\w+\\/[^\\/]+$/i.test(item)) {\n            element.contentType = element.contentType || item.toLowerCase();\n        }\n    });\n\n    return element;\n};\n"]},"metadata":{},"sourceType":"script"}