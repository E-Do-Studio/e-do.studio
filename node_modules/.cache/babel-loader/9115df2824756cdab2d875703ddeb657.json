{"ast":null,"code":"class ARButton {\n  static createButton(renderer, sessionInit = {}) {\n    const button = document.createElement(\"button\");\n\n    function showStartAR() {\n      if (sessionInit.domOverlay === void 0) {\n        const overlay = document.createElement(\"div\");\n        overlay.style.display = \"none\";\n        document.body.appendChild(overlay);\n        const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n        svg.setAttribute(\"width\", \"38px\");\n        svg.setAttribute(\"height\", \"38px\");\n        svg.style.position = \"absolute\";\n        svg.style.right = \"20px\";\n        svg.style.top = \"20px\";\n        svg.addEventListener(\"click\", function () {\n          currentSession == null ? void 0 : currentSession.end();\n        });\n        overlay.appendChild(svg);\n        const path = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        path.setAttribute(\"d\", \"M 12,12 L 28,28 M 28,12 12,28\");\n        path.setAttribute(\"stroke\", \"#fff\");\n        path.setAttribute(\"stroke-width\", \"2px\");\n        svg.appendChild(path);\n\n        if (sessionInit.optionalFeatures === void 0) {\n          sessionInit.optionalFeatures = [];\n        }\n\n        sessionInit.optionalFeatures.push(\"dom-overlay\");\n        sessionInit.domOverlay = {\n          root: overlay\n        };\n      }\n\n      let currentSession = null;\n\n      async function onSessionStarted(session) {\n        session.addEventListener(\"end\", onSessionEnded);\n        renderer.xr.setReferenceSpaceType(\"local\");\n        await renderer.xr.setSession(session);\n        button.textContent = \"STOP AR\";\n        sessionInit.domOverlay.root.style.display = \"\";\n        currentSession = session;\n      }\n\n      function onSessionEnded() {\n        currentSession.removeEventListener(\"end\", onSessionEnded);\n        button.textContent = \"START AR\";\n        sessionInit.domOverlay.root.style.display = \"none\";\n        currentSession = null;\n      }\n\n      button.style.display = \"\";\n      button.style.cursor = \"pointer\";\n      button.style.left = \"calc(50% - 50px)\";\n      button.style.width = \"100px\";\n      button.textContent = \"START AR\";\n\n      button.onmouseenter = () => {\n        button.style.opacity = \"1.0\";\n      };\n\n      button.onmouseleave = () => {\n        button.style.opacity = \"0.5\";\n      };\n\n      button.onclick = () => {\n        if (currentSession === null) {\n          ;\n          navigator.xr.requestSession(\"immersive-ar\", sessionInit).then(onSessionStarted);\n        } else {\n          currentSession.end();\n        }\n      };\n    }\n\n    function disableButton() {\n      button.style.display = \"\";\n      button.style.cursor = \"auto\";\n      button.style.left = \"calc(50% - 75px)\";\n      button.style.width = \"150px\";\n      button.onmouseenter = null;\n      button.onmouseleave = null;\n      button.onclick = null;\n    }\n\n    function showARNotSupported() {\n      disableButton();\n      button.textContent = \"AR NOT SUPPORTED\";\n    }\n\n    function stylizeElement(element) {\n      element.style.position = \"absolute\";\n      element.style.bottom = \"20px\";\n      element.style.padding = \"12px 6px\";\n      element.style.border = \"1px solid #fff\";\n      element.style.borderRadius = \"4px\";\n      element.style.background = \"rgba(0,0,0,0.1)\";\n      element.style.color = \"#fff\";\n      element.style.font = \"normal 13px sans-serif\";\n      element.style.textAlign = \"center\";\n      element.style.opacity = \"0.5\";\n      element.style.outline = \"none\";\n      element.style.zIndex = \"999\";\n    }\n\n    if (\"xr\" in navigator) {\n      button.id = \"ARButton\";\n      button.style.display = \"none\";\n      stylizeElement(button);\n      navigator.xr.isSessionSupported(\"immersive-ar\").then(function (supported) {\n        supported ? showStartAR() : showARNotSupported();\n      }).catch(showARNotSupported);\n      return button;\n    } else {\n      const message = document.createElement(\"a\");\n\n      if (window.isSecureContext === false) {\n        message.href = document.location.href.replace(/^http:/, \"https:\");\n        message.innerHTML = \"WEBXR NEEDS HTTPS\";\n      } else {\n        message.href = \"https://immersiveweb.dev/\";\n        message.innerHTML = \"WEBXR NOT AVAILABLE\";\n      }\n\n      message.style.left = \"calc(50% - 90px)\";\n      message.style.width = \"180px\";\n      message.style.textDecoration = \"none\";\n      stylizeElement(message);\n      return message;\n    }\n  }\n\n}\n\nexport { ARButton };","map":{"version":3,"sources":["/Users/theodaguier/Repositories/E-Do-Studio/node_modules/three-stdlib/webxr/ARButton.js"],"names":["ARButton","createButton","renderer","sessionInit","button","document","createElement","showStartAR","domOverlay","overlay","style","display","body","appendChild","svg","createElementNS","setAttribute","position","right","top","addEventListener","currentSession","end","path","optionalFeatures","push","root","onSessionStarted","session","onSessionEnded","xr","setReferenceSpaceType","setSession","textContent","removeEventListener","cursor","left","width","onmouseenter","opacity","onmouseleave","onclick","navigator","requestSession","then","disableButton","showARNotSupported","stylizeElement","element","bottom","padding","border","borderRadius","background","color","font","textAlign","outline","zIndex","id","isSessionSupported","supported","catch","message","window","isSecureContext","href","location","replace","innerHTML","textDecoration"],"mappings":"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","sourcesContent":["class ARButton {\n  static createButton(renderer, sessionInit = {}) {\n    const button = document.createElement(\"button\");\n    function showStartAR() {\n      if (sessionInit.domOverlay === void 0) {\n        const overlay = document.createElement(\"div\");\n        overlay.style.display = \"none\";\n        document.body.appendChild(overlay);\n        const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n        svg.setAttribute(\"width\", \"38px\");\n        svg.setAttribute(\"height\", \"38px\");\n        svg.style.position = \"absolute\";\n        svg.style.right = \"20px\";\n        svg.style.top = \"20px\";\n        svg.addEventListener(\"click\", function() {\n          currentSession == null ? void 0 : currentSession.end();\n        });\n        overlay.appendChild(svg);\n        const path = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        path.setAttribute(\"d\", \"M 12,12 L 28,28 M 28,12 12,28\");\n        path.setAttribute(\"stroke\", \"#fff\");\n        path.setAttribute(\"stroke-width\", \"2px\");\n        svg.appendChild(path);\n        if (sessionInit.optionalFeatures === void 0) {\n          sessionInit.optionalFeatures = [];\n        }\n        sessionInit.optionalFeatures.push(\"dom-overlay\");\n        sessionInit.domOverlay = { root: overlay };\n      }\n      let currentSession = null;\n      async function onSessionStarted(session) {\n        session.addEventListener(\"end\", onSessionEnded);\n        renderer.xr.setReferenceSpaceType(\"local\");\n        await renderer.xr.setSession(session);\n        button.textContent = \"STOP AR\";\n        sessionInit.domOverlay.root.style.display = \"\";\n        currentSession = session;\n      }\n      function onSessionEnded() {\n        currentSession.removeEventListener(\"end\", onSessionEnded);\n        button.textContent = \"START AR\";\n        sessionInit.domOverlay.root.style.display = \"none\";\n        currentSession = null;\n      }\n      button.style.display = \"\";\n      button.style.cursor = \"pointer\";\n      button.style.left = \"calc(50% - 50px)\";\n      button.style.width = \"100px\";\n      button.textContent = \"START AR\";\n      button.onmouseenter = () => {\n        button.style.opacity = \"1.0\";\n      };\n      button.onmouseleave = () => {\n        button.style.opacity = \"0.5\";\n      };\n      button.onclick = () => {\n        if (currentSession === null) {\n          ;\n          navigator.xr.requestSession(\"immersive-ar\", sessionInit).then(onSessionStarted);\n        } else {\n          currentSession.end();\n        }\n      };\n    }\n    function disableButton() {\n      button.style.display = \"\";\n      button.style.cursor = \"auto\";\n      button.style.left = \"calc(50% - 75px)\";\n      button.style.width = \"150px\";\n      button.onmouseenter = null;\n      button.onmouseleave = null;\n      button.onclick = null;\n    }\n    function showARNotSupported() {\n      disableButton();\n      button.textContent = \"AR NOT SUPPORTED\";\n    }\n    function stylizeElement(element) {\n      element.style.position = \"absolute\";\n      element.style.bottom = \"20px\";\n      element.style.padding = \"12px 6px\";\n      element.style.border = \"1px solid #fff\";\n      element.style.borderRadius = \"4px\";\n      element.style.background = \"rgba(0,0,0,0.1)\";\n      element.style.color = \"#fff\";\n      element.style.font = \"normal 13px sans-serif\";\n      element.style.textAlign = \"center\";\n      element.style.opacity = \"0.5\";\n      element.style.outline = \"none\";\n      element.style.zIndex = \"999\";\n    }\n    if (\"xr\" in navigator) {\n      button.id = \"ARButton\";\n      button.style.display = \"none\";\n      stylizeElement(button);\n      navigator.xr.isSessionSupported(\"immersive-ar\").then(function(supported) {\n        supported ? showStartAR() : showARNotSupported();\n      }).catch(showARNotSupported);\n      return button;\n    } else {\n      const message = document.createElement(\"a\");\n      if (window.isSecureContext === false) {\n        message.href = document.location.href.replace(/^http:/, \"https:\");\n        message.innerHTML = \"WEBXR NEEDS HTTPS\";\n      } else {\n        message.href = \"https://immersiveweb.dev/\";\n        message.innerHTML = \"WEBXR NOT AVAILABLE\";\n      }\n      message.style.left = \"calc(50% - 90px)\";\n      message.style.width = \"180px\";\n      message.style.textDecoration = \"none\";\n      stylizeElement(message);\n      return message;\n    }\n  }\n}\nexport {\n  ARButton\n};\n"]},"metadata":{},"sourceType":"module"}