{"ast":null,"code":"import _classCallCheck from \"/Users/theodaguier/Repositories/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/theodaguier/Repositories/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { NumberKeyframeTrack, AnimationClip, Vector3, VectorKeyframeTrack, BooleanKeyframeTrack, ColorKeyframeTrack } from \"three\";\n\nvar AnimationClipCreator = /*#__PURE__*/function () {\n  function AnimationClipCreator() {\n    _classCallCheck(this, AnimationClipCreator);\n  }\n\n  _createClass(AnimationClipCreator, null, [{\n    key: \"CreateRotationAnimation\",\n    value: function CreateRotationAnimation(period) {\n      var axis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"x\";\n      var times = [0, period],\n          values = [0, 360];\n      var trackName = \".rotation[\" + axis + \"]\";\n      var track = new NumberKeyframeTrack(trackName, times, values);\n      return new AnimationClip(null, period, [track]);\n    }\n  }, {\n    key: \"CreateScaleAxisAnimation\",\n    value: function CreateScaleAxisAnimation(period) {\n      var axis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"x\";\n      var times = [0, period],\n          values = [0, 1];\n      var trackName = \".scale[\" + axis + \"]\";\n      var track = new NumberKeyframeTrack(trackName, times, values);\n      return new AnimationClip(null, period, [track]);\n    }\n  }, {\n    key: \"CreateShakeAnimation\",\n    value: function CreateShakeAnimation(duration, shakeScale) {\n      var times = [],\n          values = [],\n          tmp = new Vector3();\n\n      for (var i = 0; i < duration * 10; i++) {\n        times.push(i / 10);\n        tmp.set(Math.random() * 2 - 1, Math.random() * 2 - 1, Math.random() * 2 - 1).multiply(shakeScale).toArray(values, values.length);\n      }\n\n      var trackName = \".position\";\n      var track = new VectorKeyframeTrack(trackName, times, values);\n      return new AnimationClip(null, duration, [track]);\n    }\n  }, {\n    key: \"CreatePulsationAnimation\",\n    value: function CreatePulsationAnimation(duration, pulseScale) {\n      var times = [],\n          values = [],\n          tmp = new Vector3();\n\n      for (var i = 0; i < duration * 10; i++) {\n        times.push(i / 10);\n        var scaleFactor = Math.random() * pulseScale;\n        tmp.set(scaleFactor, scaleFactor, scaleFactor).toArray(values, values.length);\n      }\n\n      var trackName = \".scale\";\n      var track = new VectorKeyframeTrack(trackName, times, values);\n      return new AnimationClip(null, duration, [track]);\n    }\n  }, {\n    key: \"CreateVisibilityAnimation\",\n    value: function CreateVisibilityAnimation(duration) {\n      var times = [0, duration / 2, duration],\n          values = [true, false, true];\n      var trackName = \".visible\";\n      var track = new BooleanKeyframeTrack(trackName, times, values);\n      return new AnimationClip(null, duration, [track]);\n    }\n  }, {\n    key: \"CreateMaterialColorAnimation\",\n    value: function CreateMaterialColorAnimation(duration, colors) {\n      var times = [],\n          values = [],\n          timeStep = duration / colors.length;\n\n      for (var i = 0; i < colors.length; i++) {\n        times.push(i * timeStep);\n        var color = colors[i];\n        values.push(color.r, color.g, color.b);\n      }\n\n      var trackName = \".material.color\";\n      var track = new ColorKeyframeTrack(trackName, times, values);\n      return new AnimationClip(null, duration, [track]);\n    }\n  }]);\n\n  return AnimationClipCreator;\n}();\n\nexport { AnimationClipCreator };","map":{"version":3,"sources":["/Users/theodaguier/Repositories/E-Do-Studio/node_modules/three-stdlib/animation/AnimationClipCreator.js"],"names":["NumberKeyframeTrack","AnimationClip","Vector3","VectorKeyframeTrack","BooleanKeyframeTrack","ColorKeyframeTrack","AnimationClipCreator","period","axis","times","values","trackName","track","duration","shakeScale","tmp","i","push","set","Math","random","multiply","toArray","length","pulseScale","scaleFactor","colors","timeStep","color","r","g","b"],"mappings":"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","sourcesContent":["import { NumberKeyframeTrack, AnimationClip, Vector3, VectorKeyframeTrack, BooleanKeyframeTrack, ColorKeyframeTrack } from \"three\";\nclass AnimationClipCreator {\n  static CreateRotationAnimation(period, axis = \"x\") {\n    const times = [0, period], values = [0, 360];\n    const trackName = \".rotation[\" + axis + \"]\";\n    const track = new NumberKeyframeTrack(trackName, times, values);\n    return new AnimationClip(null, period, [track]);\n  }\n  static CreateScaleAxisAnimation(period, axis = \"x\") {\n    const times = [0, period], values = [0, 1];\n    const trackName = \".scale[\" + axis + \"]\";\n    const track = new NumberKeyframeTrack(trackName, times, values);\n    return new AnimationClip(null, period, [track]);\n  }\n  static CreateShakeAnimation(duration, shakeScale) {\n    const times = [], values = [], tmp = new Vector3();\n    for (let i = 0; i < duration * 10; i++) {\n      times.push(i / 10);\n      tmp.set(Math.random() * 2 - 1, Math.random() * 2 - 1, Math.random() * 2 - 1).multiply(shakeScale).toArray(values, values.length);\n    }\n    const trackName = \".position\";\n    const track = new VectorKeyframeTrack(trackName, times, values);\n    return new AnimationClip(null, duration, [track]);\n  }\n  static CreatePulsationAnimation(duration, pulseScale) {\n    const times = [], values = [], tmp = new Vector3();\n    for (let i = 0; i < duration * 10; i++) {\n      times.push(i / 10);\n      const scaleFactor = Math.random() * pulseScale;\n      tmp.set(scaleFactor, scaleFactor, scaleFactor).toArray(values, values.length);\n    }\n    const trackName = \".scale\";\n    const track = new VectorKeyframeTrack(trackName, times, values);\n    return new AnimationClip(null, duration, [track]);\n  }\n  static CreateVisibilityAnimation(duration) {\n    const times = [0, duration / 2, duration], values = [true, false, true];\n    const trackName = \".visible\";\n    const track = new BooleanKeyframeTrack(trackName, times, values);\n    return new AnimationClip(null, duration, [track]);\n  }\n  static CreateMaterialColorAnimation(duration, colors) {\n    const times = [], values = [], timeStep = duration / colors.length;\n    for (let i = 0; i < colors.length; i++) {\n      times.push(i * timeStep);\n      const color = colors[i];\n      values.push(color.r, color.g, color.b);\n    }\n    const trackName = \".material.color\";\n    const track = new ColorKeyframeTrack(trackName, times, values);\n    return new AnimationClip(null, duration, [track]);\n  }\n}\nexport {\n  AnimationClipCreator\n};\n"]},"metadata":{},"sourceType":"module"}