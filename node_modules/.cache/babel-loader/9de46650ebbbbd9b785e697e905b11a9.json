{"ast":null,"code":"import _classCallCheck from \"/Users/theodaguier/_workdir/dev/pro/e-do/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/theodaguier/_workdir/dev/pro/e-do/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/theodaguier/_workdir/dev/pro/e-do/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/theodaguier/_workdir/dev/pro/e-do/E-Do-Studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Loader, FileLoader, Mesh, BufferGeometry, Float32BufferAttribute, MeshStandardMaterial, RedFormat, NearestFilter, LinearFilter } from \"three\";\nimport { Data3DTexture } from \"../_polyfill/Data3DTexture.js\";\n\nvar VOXLoader = /*#__PURE__*/function (_Loader) {\n  _inherits(VOXLoader, _Loader);\n\n  var _super = _createSuper(VOXLoader);\n\n  function VOXLoader() {\n    _classCallCheck(this, VOXLoader);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(VOXLoader, [{\n    key: \"load\",\n    value: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new FileLoader(scope.manager);\n      loader.setPath(scope.path);\n      loader.setResponseType(\"arraybuffer\");\n      loader.setRequestHeader(scope.requestHeader);\n      loader.load(url, function (buffer) {\n        try {\n          onLoad(scope.parse(buffer));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n\n          scope.manager.itemError(url);\n        }\n      }, onProgress, onError);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(buffer) {\n      var data = new DataView(buffer);\n      var id = data.getUint32(0, true);\n      var version = data.getUint32(4, true);\n\n      if (id !== 542658390 || version !== 150) {\n        console.error(\"Not a valid VOX file\");\n        return;\n      }\n\n      var DEFAULT_PALETTE = [0, 4294967295, 4291624959, 4288282623, 4284940287, 4281597951, 4278255615, 4294954239, 4291611903, 4288269567, 4284927231, 4281584895, 4278242559, 4294941183, 4291598847, 4288256511, 4284914175, 4281571839, 4278229503, 4294928127, 4291585791, 4288243455, 4284901119, 4281558783, 4278216447, 4294915071, 4291572735, 4288230399, 4284888063, 4281545727, 4278203391, 4294902015, 4291559679, 4288217343, 4284875007, 4281532671, 4278190335, 4294967244, 4291624908, 4288282572, 4284940236, 4281597900, 4278255564, 4294954188, 4291611852, 4288269516, 4284927180, 4281584844, 4278242508, 4294941132, 4291598796, 4288256460, 4284914124, 4281571788, 4278229452, 4294928076, 4291585740, 4288243404, 4284901068, 4281558732, 4278216396, 4294915020, 4291572684, 4288230348, 4284888012, 4281545676, 4278203340, 4294901964, 4291559628, 4288217292, 4284874956, 4281532620, 4278190284, 4294967193, 4291624857, 4288282521, 4284940185, 4281597849, 4278255513, 4294954137, 4291611801, 4288269465, 4284927129, 4281584793, 4278242457, 4294941081, 4291598745, 4288256409, 4284914073, 4281571737, 4278229401, 4294928025, 4291585689, 4288243353, 4284901017, 4281558681, 4278216345, 4294914969, 4291572633, 4288230297, 4284887961, 4281545625, 4278203289, 4294901913, 4291559577, 4288217241, 4284874905, 4281532569, 4278190233, 4294967142, 4291624806, 4288282470, 4284940134, 4281597798, 4278255462, 4294954086, 4291611750, 4288269414, 4284927078, 4281584742, 4278242406, 4294941030, 4291598694, 4288256358, 4284914022, 4281571686, 4278229350, 4294927974, 4291585638, 4288243302, 4284900966, 4281558630, 4278216294, 4294914918, 4291572582, 4288230246, 4284887910, 4281545574, 4278203238, 4294901862, 4291559526, 4288217190, 4284874854, 4281532518, 4278190182, 4294967091, 4291624755, 4288282419, 4284940083, 4281597747, 4278255411, 4294954035, 4291611699, 4288269363, 4284927027, 4281584691, 4278242355, 4294940979, 4291598643, 4288256307, 4284913971, 4281571635, 4278229299, 4294927923, 4291585587, 4288243251, 4284900915, 4281558579, 4278216243, 4294914867, 4291572531, 4288230195, 4284887859, 4281545523, 4278203187, 4294901811, 4291559475, 4288217139, 4284874803, 4281532467, 4278190131, 4294967040, 4291624704, 4288282368, 4284940032, 4281597696, 4278255360, 4294953984, 4291611648, 4288269312, 4284926976, 4281584640, 4278242304, 4294940928, 4291598592, 4288256256, 4284913920, 4281571584, 4278229248, 4294927872, 4291585536, 4288243200, 4284900864, 4281558528, 4278216192, 4294914816, 4291572480, 4288230144, 4284887808, 4281545472, 4278203136, 4294901760, 4291559424, 4288217088, 4284874752, 4281532416, 4278190318, 4278190301, 4278190267, 4278190250, 4278190216, 4278190199, 4278190165, 4278190148, 4278190114, 4278190097, 4278251008, 4278246656, 4278237952, 4278233600, 4278224896, 4278220544, 4278211840, 4278207488, 4278198784, 4278194432, 4293787648, 4292673536, 4290445312, 4289331200, 4287102976, 4285988864, 4283760640, 4282646528, 4280418304, 4279304192, 4293848814, 4292730333, 4290493371, 4289374890, 4287137928, 4286019447, 4283782485, 4282664004, 4280427042, 4279308561];\n      var i = 8;\n      var chunk;\n      var chunks = [];\n\n      while (i < data.byteLength) {\n        var id2 = \"\";\n\n        for (var j = 0; j < 4; j++) {\n          id2 += String.fromCharCode(data.getUint8(i++));\n        }\n\n        var chunkSize = data.getUint32(i, true);\n        i += 4;\n        i += 4;\n\n        if (id2 === \"SIZE\") {\n          var x = data.getUint32(i, true);\n          i += 4;\n          var y = data.getUint32(i, true);\n          i += 4;\n          var z = data.getUint32(i, true);\n          i += 4;\n          chunk = {\n            palette: DEFAULT_PALETTE,\n            size: {\n              x: x,\n              y: y,\n              z: z\n            }\n          };\n          chunks.push(chunk);\n          i += chunkSize - 3 * 4;\n        } else if (id2 === \"XYZI\") {\n          var numVoxels = data.getUint32(i, true);\n          i += 4;\n          chunk.data = new Uint8Array(buffer, i, numVoxels * 4);\n          i += numVoxels * 4;\n        } else if (id2 === \"RGBA\") {\n          var palette = [0];\n\n          for (var _j = 0; _j < 256; _j++) {\n            palette[_j + 1] = data.getUint32(i, true);\n            i += 4;\n          }\n\n          chunk.palette = palette;\n        } else {\n          i += chunkSize;\n        }\n      }\n\n      return chunks;\n    }\n  }]);\n\n  return VOXLoader;\n}(Loader);\n\nvar VOXMesh = /*#__PURE__*/function (_Mesh) {\n  _inherits(VOXMesh, _Mesh);\n\n  var _super2 = _createSuper(VOXMesh);\n\n  function VOXMesh(chunk) {\n    _classCallCheck(this, VOXMesh);\n\n    var data = chunk.data;\n    var size = chunk.size;\n    var palette = chunk.palette;\n    var vertices = [];\n    var colors = [];\n    var nx = [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1];\n    var px = [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0];\n    var py = [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1];\n    var ny = [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0];\n    var nz = [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0];\n    var pz = [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1];\n\n    function add(tile, x, y, z, r, g, b) {\n      x -= size.x / 2;\n      y -= size.z / 2;\n      z += size.y / 2;\n\n      for (var i = 0; i < 18; i += 3) {\n        vertices.push(tile[i + 0] + x, tile[i + 1] + y, tile[i + 2] + z);\n        colors.push(r, g, b);\n      }\n    }\n\n    var offsety = size.x;\n    var offsetz = size.x * size.y;\n    var array = new Uint8Array(size.x * size.y * size.z);\n\n    for (var j = 0; j < data.length; j += 4) {\n      var x = data[j + 0];\n      var y = data[j + 1];\n      var z = data[j + 2];\n      var index = x + y * offsety + z * offsetz;\n      array[index] = 255;\n    }\n\n    var hasColors = false;\n\n    for (var _j2 = 0; _j2 < data.length; _j2 += 4) {\n      var _x = data[_j2 + 0];\n      var _y = data[_j2 + 1];\n      var _z = data[_j2 + 2];\n      var c = data[_j2 + 3];\n      var hex = palette[c];\n      var r = (hex >> 0 & 255) / 255;\n      var g = (hex >> 8 & 255) / 255;\n      var b = (hex >> 16 & 255) / 255;\n      if (r > 0 || g > 0 || b > 0) hasColors = true;\n\n      var _index = _x + _y * offsety + _z * offsetz;\n\n      if (array[_index + 1] === 0 || _x === size.x - 1) add(px, _x, _z, -_y, r, g, b);\n      if (array[_index - 1] === 0 || _x === 0) add(nx, _x, _z, -_y, r, g, b);\n      if (array[_index + offsety] === 0 || _y === size.y - 1) add(ny, _x, _z, -_y, r, g, b);\n      if (array[_index - offsety] === 0 || _y === 0) add(py, _x, _z, -_y, r, g, b);\n      if (array[_index + offsetz] === 0 || _z === size.z - 1) add(pz, _x, _z, -_y, r, g, b);\n      if (array[_index - offsetz] === 0 || _z === 0) add(nz, _x, _z, -_y, r, g, b);\n    }\n\n    var geometry = new BufferGeometry();\n    geometry.setAttribute(\"position\", new Float32BufferAttribute(vertices, 3));\n    geometry.computeVertexNormals();\n    var material = new MeshStandardMaterial();\n\n    if (hasColors) {\n      geometry.setAttribute(\"color\", new Float32BufferAttribute(colors, 3));\n      material.vertexColors = true;\n    }\n\n    return _super2.call(this, geometry, material);\n  }\n\n  return VOXMesh;\n}(Mesh);\n\nvar VOXData3DTexture = /*#__PURE__*/function (_Data3DTexture) {\n  _inherits(VOXData3DTexture, _Data3DTexture);\n\n  var _super3 = _createSuper(VOXData3DTexture);\n\n  function VOXData3DTexture(chunk) {\n    var _this;\n\n    _classCallCheck(this, VOXData3DTexture);\n\n    var data = chunk.data;\n    var size = chunk.size;\n    var offsety = size.x;\n    var offsetz = size.x * size.y;\n    var array = new Uint8Array(size.x * size.y * size.z);\n\n    for (var j = 0; j < data.length; j += 4) {\n      var x = data[j + 0];\n      var y = data[j + 1];\n      var z = data[j + 2];\n      var index = x + y * offsety + z * offsetz;\n      array[index] = 255;\n    }\n\n    _this = _super3.call(this, array, size.x, size.y, size.z);\n    _this.format = RedFormat;\n    _this.minFilter = NearestFilter;\n    _this.magFilter = LinearFilter;\n    _this.unpackAlignment = 1;\n    _this.needsUpdate = true;\n    return _this;\n  }\n\n  return VOXData3DTexture;\n}(Data3DTexture);\n\nexport { VOXData3DTexture, VOXLoader, VOXMesh };","map":{"version":3,"sources":["/Users/theodaguier/_workdir/dev/pro/e-do/E-Do-Studio/node_modules/three-stdlib/loaders/VOXLoader.js"],"names":["Loader","FileLoader","Mesh","BufferGeometry","Float32BufferAttribute","MeshStandardMaterial","RedFormat","NearestFilter","LinearFilter","Data3DTexture","VOXLoader","url","onLoad","onProgress","onError","scope","loader","manager","setPath","path","setResponseType","setRequestHeader","requestHeader","load","buffer","parse","e","console","error","itemError","data","DataView","id","getUint32","version","DEFAULT_PALETTE","i","chunk","chunks","byteLength","id2","j","String","fromCharCode","getUint8","chunkSize","x","y","z","palette","size","push","numVoxels","Uint8Array","VOXMesh","vertices","colors","nx","px","py","ny","nz","pz","add","tile","r","g","b","offsety","offsetz","array","length","index","hasColors","c","hex","geometry","setAttribute","computeVertexNormals","material","vertexColors","VOXData3DTexture","format","minFilter","magFilter","unpackAlignment","needsUpdate"],"mappings":"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","sourcesContent":["import { Loader, FileLoader, Mesh, BufferGeometry, Float32BufferAttribute, MeshStandardMaterial, RedFormat, NearestFilter, LinearFilter } from \"three\";\nimport { Data3DTexture } from \"../_polyfill/Data3DTexture.js\";\nclass VOXLoader extends Loader {\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    const loader = new FileLoader(scope.manager);\n    loader.setPath(scope.path);\n    loader.setResponseType(\"arraybuffer\");\n    loader.setRequestHeader(scope.requestHeader);\n    loader.load(\n      url,\n      function(buffer) {\n        try {\n          onLoad(scope.parse(buffer));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n          scope.manager.itemError(url);\n        }\n      },\n      onProgress,\n      onError\n    );\n  }\n  parse(buffer) {\n    const data = new DataView(buffer);\n    const id = data.getUint32(0, true);\n    const version = data.getUint32(4, true);\n    if (id !== 542658390 || version !== 150) {\n      console.error(\"Not a valid VOX file\");\n      return;\n    }\n    const DEFAULT_PALETTE = [\n      0,\n      4294967295,\n      4291624959,\n      4288282623,\n      4284940287,\n      4281597951,\n      4278255615,\n      4294954239,\n      4291611903,\n      4288269567,\n      4284927231,\n      4281584895,\n      4278242559,\n      4294941183,\n      4291598847,\n      4288256511,\n      4284914175,\n      4281571839,\n      4278229503,\n      4294928127,\n      4291585791,\n      4288243455,\n      4284901119,\n      4281558783,\n      4278216447,\n      4294915071,\n      4291572735,\n      4288230399,\n      4284888063,\n      4281545727,\n      4278203391,\n      4294902015,\n      4291559679,\n      4288217343,\n      4284875007,\n      4281532671,\n      4278190335,\n      4294967244,\n      4291624908,\n      4288282572,\n      4284940236,\n      4281597900,\n      4278255564,\n      4294954188,\n      4291611852,\n      4288269516,\n      4284927180,\n      4281584844,\n      4278242508,\n      4294941132,\n      4291598796,\n      4288256460,\n      4284914124,\n      4281571788,\n      4278229452,\n      4294928076,\n      4291585740,\n      4288243404,\n      4284901068,\n      4281558732,\n      4278216396,\n      4294915020,\n      4291572684,\n      4288230348,\n      4284888012,\n      4281545676,\n      4278203340,\n      4294901964,\n      4291559628,\n      4288217292,\n      4284874956,\n      4281532620,\n      4278190284,\n      4294967193,\n      4291624857,\n      4288282521,\n      4284940185,\n      4281597849,\n      4278255513,\n      4294954137,\n      4291611801,\n      4288269465,\n      4284927129,\n      4281584793,\n      4278242457,\n      4294941081,\n      4291598745,\n      4288256409,\n      4284914073,\n      4281571737,\n      4278229401,\n      4294928025,\n      4291585689,\n      4288243353,\n      4284901017,\n      4281558681,\n      4278216345,\n      4294914969,\n      4291572633,\n      4288230297,\n      4284887961,\n      4281545625,\n      4278203289,\n      4294901913,\n      4291559577,\n      4288217241,\n      4284874905,\n      4281532569,\n      4278190233,\n      4294967142,\n      4291624806,\n      4288282470,\n      4284940134,\n      4281597798,\n      4278255462,\n      4294954086,\n      4291611750,\n      4288269414,\n      4284927078,\n      4281584742,\n      4278242406,\n      4294941030,\n      4291598694,\n      4288256358,\n      4284914022,\n      4281571686,\n      4278229350,\n      4294927974,\n      4291585638,\n      4288243302,\n      4284900966,\n      4281558630,\n      4278216294,\n      4294914918,\n      4291572582,\n      4288230246,\n      4284887910,\n      4281545574,\n      4278203238,\n      4294901862,\n      4291559526,\n      4288217190,\n      4284874854,\n      4281532518,\n      4278190182,\n      4294967091,\n      4291624755,\n      4288282419,\n      4284940083,\n      4281597747,\n      4278255411,\n      4294954035,\n      4291611699,\n      4288269363,\n      4284927027,\n      4281584691,\n      4278242355,\n      4294940979,\n      4291598643,\n      4288256307,\n      4284913971,\n      4281571635,\n      4278229299,\n      4294927923,\n      4291585587,\n      4288243251,\n      4284900915,\n      4281558579,\n      4278216243,\n      4294914867,\n      4291572531,\n      4288230195,\n      4284887859,\n      4281545523,\n      4278203187,\n      4294901811,\n      4291559475,\n      4288217139,\n      4284874803,\n      4281532467,\n      4278190131,\n      4294967040,\n      4291624704,\n      4288282368,\n      4284940032,\n      4281597696,\n      4278255360,\n      4294953984,\n      4291611648,\n      4288269312,\n      4284926976,\n      4281584640,\n      4278242304,\n      4294940928,\n      4291598592,\n      4288256256,\n      4284913920,\n      4281571584,\n      4278229248,\n      4294927872,\n      4291585536,\n      4288243200,\n      4284900864,\n      4281558528,\n      4278216192,\n      4294914816,\n      4291572480,\n      4288230144,\n      4284887808,\n      4281545472,\n      4278203136,\n      4294901760,\n      4291559424,\n      4288217088,\n      4284874752,\n      4281532416,\n      4278190318,\n      4278190301,\n      4278190267,\n      4278190250,\n      4278190216,\n      4278190199,\n      4278190165,\n      4278190148,\n      4278190114,\n      4278190097,\n      4278251008,\n      4278246656,\n      4278237952,\n      4278233600,\n      4278224896,\n      4278220544,\n      4278211840,\n      4278207488,\n      4278198784,\n      4278194432,\n      4293787648,\n      4292673536,\n      4290445312,\n      4289331200,\n      4287102976,\n      4285988864,\n      4283760640,\n      4282646528,\n      4280418304,\n      4279304192,\n      4293848814,\n      4292730333,\n      4290493371,\n      4289374890,\n      4287137928,\n      4286019447,\n      4283782485,\n      4282664004,\n      4280427042,\n      4279308561\n    ];\n    let i = 8;\n    let chunk;\n    const chunks = [];\n    while (i < data.byteLength) {\n      let id2 = \"\";\n      for (let j = 0; j < 4; j++) {\n        id2 += String.fromCharCode(data.getUint8(i++));\n      }\n      const chunkSize = data.getUint32(i, true);\n      i += 4;\n      i += 4;\n      if (id2 === \"SIZE\") {\n        const x = data.getUint32(i, true);\n        i += 4;\n        const y = data.getUint32(i, true);\n        i += 4;\n        const z = data.getUint32(i, true);\n        i += 4;\n        chunk = {\n          palette: DEFAULT_PALETTE,\n          size: { x, y, z }\n        };\n        chunks.push(chunk);\n        i += chunkSize - 3 * 4;\n      } else if (id2 === \"XYZI\") {\n        const numVoxels = data.getUint32(i, true);\n        i += 4;\n        chunk.data = new Uint8Array(buffer, i, numVoxels * 4);\n        i += numVoxels * 4;\n      } else if (id2 === \"RGBA\") {\n        const palette = [0];\n        for (let j = 0; j < 256; j++) {\n          palette[j + 1] = data.getUint32(i, true);\n          i += 4;\n        }\n        chunk.palette = palette;\n      } else {\n        i += chunkSize;\n      }\n    }\n    return chunks;\n  }\n}\nclass VOXMesh extends Mesh {\n  constructor(chunk) {\n    const data = chunk.data;\n    const size = chunk.size;\n    const palette = chunk.palette;\n    const vertices = [];\n    const colors = [];\n    const nx = [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1];\n    const px = [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0];\n    const py = [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1];\n    const ny = [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0];\n    const nz = [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0];\n    const pz = [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1];\n    function add(tile, x, y, z, r, g, b) {\n      x -= size.x / 2;\n      y -= size.z / 2;\n      z += size.y / 2;\n      for (let i = 0; i < 18; i += 3) {\n        vertices.push(tile[i + 0] + x, tile[i + 1] + y, tile[i + 2] + z);\n        colors.push(r, g, b);\n      }\n    }\n    const offsety = size.x;\n    const offsetz = size.x * size.y;\n    const array = new Uint8Array(size.x * size.y * size.z);\n    for (let j = 0; j < data.length; j += 4) {\n      const x = data[j + 0];\n      const y = data[j + 1];\n      const z = data[j + 2];\n      const index = x + y * offsety + z * offsetz;\n      array[index] = 255;\n    }\n    let hasColors = false;\n    for (let j = 0; j < data.length; j += 4) {\n      const x = data[j + 0];\n      const y = data[j + 1];\n      const z = data[j + 2];\n      const c = data[j + 3];\n      const hex = palette[c];\n      const r = (hex >> 0 & 255) / 255;\n      const g = (hex >> 8 & 255) / 255;\n      const b = (hex >> 16 & 255) / 255;\n      if (r > 0 || g > 0 || b > 0)\n        hasColors = true;\n      const index = x + y * offsety + z * offsetz;\n      if (array[index + 1] === 0 || x === size.x - 1)\n        add(px, x, z, -y, r, g, b);\n      if (array[index - 1] === 0 || x === 0)\n        add(nx, x, z, -y, r, g, b);\n      if (array[index + offsety] === 0 || y === size.y - 1)\n        add(ny, x, z, -y, r, g, b);\n      if (array[index - offsety] === 0 || y === 0)\n        add(py, x, z, -y, r, g, b);\n      if (array[index + offsetz] === 0 || z === size.z - 1)\n        add(pz, x, z, -y, r, g, b);\n      if (array[index - offsetz] === 0 || z === 0)\n        add(nz, x, z, -y, r, g, b);\n    }\n    const geometry = new BufferGeometry();\n    geometry.setAttribute(\"position\", new Float32BufferAttribute(vertices, 3));\n    geometry.computeVertexNormals();\n    const material = new MeshStandardMaterial();\n    if (hasColors) {\n      geometry.setAttribute(\"color\", new Float32BufferAttribute(colors, 3));\n      material.vertexColors = true;\n    }\n    super(geometry, material);\n  }\n}\nclass VOXData3DTexture extends Data3DTexture {\n  constructor(chunk) {\n    const data = chunk.data;\n    const size = chunk.size;\n    const offsety = size.x;\n    const offsetz = size.x * size.y;\n    const array = new Uint8Array(size.x * size.y * size.z);\n    for (let j = 0; j < data.length; j += 4) {\n      const x = data[j + 0];\n      const y = data[j + 1];\n      const z = data[j + 2];\n      const index = x + y * offsety + z * offsetz;\n      array[index] = 255;\n    }\n    super(array, size.x, size.y, size.z);\n    this.format = RedFormat;\n    this.minFilter = NearestFilter;\n    this.magFilter = LinearFilter;\n    this.unpackAlignment = 1;\n    this.needsUpdate = true;\n  }\n}\nexport {\n  VOXData3DTexture,\n  VOXLoader,\n  VOXMesh\n};\n"]},"metadata":{},"sourceType":"module"}