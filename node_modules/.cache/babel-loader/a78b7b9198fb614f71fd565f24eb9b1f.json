{"ast":null,"code":"import { Loader, FileLoader, LoadingManager, Group } from \"three\";\nimport { ColladaLoader } from \"./ColladaLoader.js\";\nimport { unzipSync } from \"fflate\";\n\nclass KMZLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n  }\n\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    const loader = new FileLoader(scope.manager);\n    loader.setPath(scope.path);\n    loader.setResponseType(\"arraybuffer\");\n    loader.setRequestHeader(scope.requestHeader);\n    loader.setWithCredentials(scope.withCredentials);\n    loader.load(url, function (text) {\n      try {\n        onLoad(scope.parse(text));\n      } catch (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n\n        scope.manager.itemError(url);\n      }\n    }, onProgress, onError);\n  }\n\n  parse(data) {\n    function findFile(url) {\n      for (const path in zip) {\n        if (path.substr(-url.length) === url) {\n          return zip[path];\n        }\n      }\n    }\n\n    const manager = new LoadingManager();\n    manager.setURLModifier(function (url) {\n      const image = findFile(url);\n\n      if (image) {\n        console.log(\"Loading\", url);\n        const blob = new Blob([image.buffer], {\n          type: \"application/octet-stream\"\n        });\n        return URL.createObjectURL(blob);\n      }\n\n      return url;\n    });\n    const zip = unzipSync(new Uint8Array(data));\n\n    if (zip[\"doc.kml\"]) {\n      const xml = new DOMParser().parseFromString(fflate.strFromU8(zip[\"doc.kml\"]), \"application/xml\");\n      const model = xml.querySelector(\"Placemark Model Link href\");\n\n      if (model) {\n        const loader = new ColladaLoader(manager);\n        return loader.parse(fflate.strFromU8(zip[model.textContent]));\n      }\n    } else {\n      console.warn(\"KMZLoader: Missing doc.kml file.\");\n\n      for (const path in zip) {\n        const extension = path.split(\".\").pop().toLowerCase();\n\n        if (extension === \"dae\") {\n          const loader = new ColladaLoader(manager);\n          return loader.parse(fflate.strFromU8(zip[path]));\n        }\n      }\n    }\n\n    console.error(\"KMZLoader: Couldn't find .dae file.\");\n    return {\n      scene: new Group()\n    };\n  }\n\n}\n\nexport { KMZLoader };","map":{"version":3,"sources":["/Users/theodaguier/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/three-stdlib/loaders/KMZLoader.js"],"names":["Loader","FileLoader","LoadingManager","Group","ColladaLoader","unzipSync","KMZLoader","constructor","manager","load","url","onLoad","onProgress","onError","scope","loader","setPath","path","setResponseType","setRequestHeader","requestHeader","setWithCredentials","withCredentials","text","parse","e","console","error","itemError","data","findFile","zip","substr","length","setURLModifier","image","log","blob","Blob","buffer","type","URL","createObjectURL","Uint8Array","xml","DOMParser","parseFromString","fflate","strFromU8","model","querySelector","textContent","warn","extension","split","pop","toLowerCase","scene"],"mappings":"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","sourcesContent":["import { Loader, FileLoader, LoadingManager, Group } from \"three\";\nimport { ColladaLoader } from \"./ColladaLoader.js\";\nimport { unzipSync } from \"fflate\";\nclass KMZLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n  }\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    const loader = new FileLoader(scope.manager);\n    loader.setPath(scope.path);\n    loader.setResponseType(\"arraybuffer\");\n    loader.setRequestHeader(scope.requestHeader);\n    loader.setWithCredentials(scope.withCredentials);\n    loader.load(\n      url,\n      function(text) {\n        try {\n          onLoad(scope.parse(text));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n          scope.manager.itemError(url);\n        }\n      },\n      onProgress,\n      onError\n    );\n  }\n  parse(data) {\n    function findFile(url) {\n      for (const path in zip) {\n        if (path.substr(-url.length) === url) {\n          return zip[path];\n        }\n      }\n    }\n    const manager = new LoadingManager();\n    manager.setURLModifier(function(url) {\n      const image = findFile(url);\n      if (image) {\n        console.log(\"Loading\", url);\n        const blob = new Blob([image.buffer], { type: \"application/octet-stream\" });\n        return URL.createObjectURL(blob);\n      }\n      return url;\n    });\n    const zip = unzipSync(new Uint8Array(data));\n    if (zip[\"doc.kml\"]) {\n      const xml = new DOMParser().parseFromString(fflate.strFromU8(zip[\"doc.kml\"]), \"application/xml\");\n      const model = xml.querySelector(\"Placemark Model Link href\");\n      if (model) {\n        const loader = new ColladaLoader(manager);\n        return loader.parse(fflate.strFromU8(zip[model.textContent]));\n      }\n    } else {\n      console.warn(\"KMZLoader: Missing doc.kml file.\");\n      for (const path in zip) {\n        const extension = path.split(\".\").pop().toLowerCase();\n        if (extension === \"dae\") {\n          const loader = new ColladaLoader(manager);\n          return loader.parse(fflate.strFromU8(zip[path]));\n        }\n      }\n    }\n    console.error(\"KMZLoader: Couldn't find .dae file.\");\n    return { scene: new Group() };\n  }\n}\nexport {\n  KMZLoader\n};\n"]},"metadata":{},"sourceType":"module"}