{"ast":null,"code":"import { Vector2 } from \"three\";\n\nfunction UVsDebug(geometry, size = 1024) {\n  const abc = \"abc\";\n  const a = new Vector2();\n  const b = new Vector2();\n  const uvs = [new Vector2(), new Vector2(), new Vector2()];\n  const face = [];\n  const canvas = document.createElement(\"canvas\");\n  const width = size;\n  const height = size;\n  canvas.width = width;\n  canvas.height = height;\n  const ctx = canvas.getContext(\"2d\");\n  ctx.lineWidth = 1;\n  ctx.strokeStyle = \"rgb( 63, 63, 63 )\";\n  ctx.textAlign = \"center\";\n  ctx.fillStyle = \"rgb( 255, 255, 255 )\";\n  ctx.fillRect(0, 0, width, height);\n  const index = geometry.index;\n  const uvAttribute = geometry.attributes.uv;\n\n  if (index) {\n    for (let i = 0, il = index.count; i < il; i += 3) {\n      face[0] = index.getX(i);\n      face[1] = index.getX(i + 1);\n      face[2] = index.getX(i + 2);\n      uvs[0].fromBufferAttribute(uvAttribute, face[0]);\n      uvs[1].fromBufferAttribute(uvAttribute, face[1]);\n      uvs[2].fromBufferAttribute(uvAttribute, face[2]);\n      processFace(face, uvs, i / 3);\n    }\n  } else {\n    for (let i = 0, il = uvAttribute.count; i < il; i += 3) {\n      face[0] = i;\n      face[1] = i + 1;\n      face[2] = i + 2;\n      uvs[0].fromBufferAttribute(uvAttribute, face[0]);\n      uvs[1].fromBufferAttribute(uvAttribute, face[1]);\n      uvs[2].fromBufferAttribute(uvAttribute, face[2]);\n      processFace(face, uvs, i / 3);\n    }\n  }\n\n  return canvas;\n\n  function processFace(face2, uvs2, index2) {\n    ctx.beginPath();\n    a.set(0, 0);\n\n    for (let j = 0, jl = uvs2.length; j < jl; j++) {\n      const uv = uvs2[j];\n      a.x += uv.x;\n      a.y += uv.y;\n\n      if (j === 0) {\n        ctx.moveTo(uv.x * (width - 2) + 0.5, (1 - uv.y) * (height - 2) + 0.5);\n      } else {\n        ctx.lineTo(uv.x * (width - 2) + 0.5, (1 - uv.y) * (height - 2) + 0.5);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    a.divideScalar(uvs2.length);\n    ctx.font = \"18px Arial\";\n    ctx.fillStyle = \"rgb( 63, 63, 63 )\";\n    ctx.fillText(index2, a.x * width, (1 - a.y) * height);\n\n    if (a.x > 0.95) {\n      ctx.fillText(index2, a.x % 1 * width, (1 - a.y) * height);\n    }\n\n    ctx.font = \"12px Arial\";\n    ctx.fillStyle = \"rgb( 191, 191, 191 )\";\n\n    for (let j = 0, jl = uvs2.length; j < jl; j++) {\n      const uv = uvs2[j];\n      b.addVectors(a, uv).divideScalar(2);\n      const vnum = face2[j];\n      ctx.fillText(abc[j] + vnum, b.x * width, (1 - b.y) * height);\n\n      if (b.x > 0.95) {\n        ctx.fillText(abc[j] + vnum, b.x % 1 * width, (1 - b.y) * height);\n      }\n    }\n  }\n}\n\nexport { UVsDebug };","map":{"version":3,"sources":["/Users/theodaguier/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/three-stdlib/utils/UVsDebug.js"],"names":["Vector2","UVsDebug","geometry","size","abc","a","b","uvs","face","canvas","document","createElement","width","height","ctx","getContext","lineWidth","strokeStyle","textAlign","fillStyle","fillRect","index","uvAttribute","attributes","uv","i","il","count","getX","fromBufferAttribute","processFace","face2","uvs2","index2","beginPath","set","j","jl","length","x","y","moveTo","lineTo","closePath","stroke","divideScalar","font","fillText","addVectors","vnum"],"mappings":"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","sourcesContent":["import { Vector2 } from \"three\";\nfunction UVsDebug(geometry, size = 1024) {\n  const abc = \"abc\";\n  const a = new Vector2();\n  const b = new Vector2();\n  const uvs = [new Vector2(), new Vector2(), new Vector2()];\n  const face = [];\n  const canvas = document.createElement(\"canvas\");\n  const width = size;\n  const height = size;\n  canvas.width = width;\n  canvas.height = height;\n  const ctx = canvas.getContext(\"2d\");\n  ctx.lineWidth = 1;\n  ctx.strokeStyle = \"rgb( 63, 63, 63 )\";\n  ctx.textAlign = \"center\";\n  ctx.fillStyle = \"rgb( 255, 255, 255 )\";\n  ctx.fillRect(0, 0, width, height);\n  const index = geometry.index;\n  const uvAttribute = geometry.attributes.uv;\n  if (index) {\n    for (let i = 0, il = index.count; i < il; i += 3) {\n      face[0] = index.getX(i);\n      face[1] = index.getX(i + 1);\n      face[2] = index.getX(i + 2);\n      uvs[0].fromBufferAttribute(uvAttribute, face[0]);\n      uvs[1].fromBufferAttribute(uvAttribute, face[1]);\n      uvs[2].fromBufferAttribute(uvAttribute, face[2]);\n      processFace(face, uvs, i / 3);\n    }\n  } else {\n    for (let i = 0, il = uvAttribute.count; i < il; i += 3) {\n      face[0] = i;\n      face[1] = i + 1;\n      face[2] = i + 2;\n      uvs[0].fromBufferAttribute(uvAttribute, face[0]);\n      uvs[1].fromBufferAttribute(uvAttribute, face[1]);\n      uvs[2].fromBufferAttribute(uvAttribute, face[2]);\n      processFace(face, uvs, i / 3);\n    }\n  }\n  return canvas;\n  function processFace(face2, uvs2, index2) {\n    ctx.beginPath();\n    a.set(0, 0);\n    for (let j = 0, jl = uvs2.length; j < jl; j++) {\n      const uv = uvs2[j];\n      a.x += uv.x;\n      a.y += uv.y;\n      if (j === 0) {\n        ctx.moveTo(uv.x * (width - 2) + 0.5, (1 - uv.y) * (height - 2) + 0.5);\n      } else {\n        ctx.lineTo(uv.x * (width - 2) + 0.5, (1 - uv.y) * (height - 2) + 0.5);\n      }\n    }\n    ctx.closePath();\n    ctx.stroke();\n    a.divideScalar(uvs2.length);\n    ctx.font = \"18px Arial\";\n    ctx.fillStyle = \"rgb( 63, 63, 63 )\";\n    ctx.fillText(index2, a.x * width, (1 - a.y) * height);\n    if (a.x > 0.95) {\n      ctx.fillText(index2, a.x % 1 * width, (1 - a.y) * height);\n    }\n    ctx.font = \"12px Arial\";\n    ctx.fillStyle = \"rgb( 191, 191, 191 )\";\n    for (let j = 0, jl = uvs2.length; j < jl; j++) {\n      const uv = uvs2[j];\n      b.addVectors(a, uv).divideScalar(2);\n      const vnum = face2[j];\n      ctx.fillText(abc[j] + vnum, b.x * width, (1 - b.y) * height);\n      if (b.x > 0.95) {\n        ctx.fillText(abc[j] + vnum, b.x % 1 * width, (1 - b.y) * height);\n      }\n    }\n  }\n}\nexport {\n  UVsDebug\n};\n"]},"metadata":{},"sourceType":"module"}