{"ast":null,"code":"import { MathUtils } from \"three\";\nconst _hsl = {};\n\nclass ColorConverter {\n  static setHSV(color, h, s, v) {\n    h = MathUtils.euclideanModulo(h, 1);\n    s = MathUtils.clamp(s, 0, 1);\n    v = MathUtils.clamp(v, 0, 1);\n    return color.setHSL(h, s * v / ((h = (2 - s) * v) < 1 ? h : 2 - h), h * 0.5);\n  }\n\n  static getHSV(color, target) {\n    color.getHSL(_hsl);\n    _hsl.s *= _hsl.l < 0.5 ? _hsl.l : 1 - _hsl.l;\n    target.h = _hsl.h;\n    target.s = 2 * _hsl.s / (_hsl.l + _hsl.s);\n    target.v = _hsl.l + _hsl.s;\n    return target;\n  } // where c, m, y, k is between 0 and 1\n\n\n  static setCMYK(color, c, m, y, k) {\n    const r = (1 - c) * (1 - k);\n    const g = (1 - m) * (1 - k);\n    const b = (1 - y) * (1 - k);\n    return color.setRGB(r, g, b);\n  }\n\n  static getCMYK(color, target) {\n    const r = color.r;\n    const g = color.g;\n    const b = color.b;\n    const k = 1 - Math.max(r, g, b);\n    const c = (1 - r - k) / (1 - k);\n    const m = (1 - g - k) / (1 - k);\n    const y = (1 - b - k) / (1 - k);\n    target.c = c;\n    target.m = m;\n    target.y = y;\n    target.k = k;\n    return target;\n  }\n\n}\n\nexport { ColorConverter };","map":{"version":3,"sources":["/Users/theodaguier/Developer/old/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/three-stdlib/math/ColorConverter.js"],"names":["MathUtils","_hsl","ColorConverter","setHSV","color","h","s","v","euclideanModulo","clamp","setHSL","getHSV","target","getHSL","l","setCMYK","c","m","y","k","r","g","b","setRGB","getCMYK","Math","max"],"mappings":"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","sourcesContent":["import { MathUtils } from \"three\";\nconst _hsl = {};\nclass ColorConverter {\n  static setHSV(color, h, s, v) {\n    h = MathUtils.euclideanModulo(h, 1);\n    s = MathUtils.clamp(s, 0, 1);\n    v = MathUtils.clamp(v, 0, 1);\n    return color.setHSL(h, s * v / ((h = (2 - s) * v) < 1 ? h : 2 - h), h * 0.5);\n  }\n  static getHSV(color, target) {\n    color.getHSL(_hsl);\n    _hsl.s *= _hsl.l < 0.5 ? _hsl.l : 1 - _hsl.l;\n    target.h = _hsl.h;\n    target.s = 2 * _hsl.s / (_hsl.l + _hsl.s);\n    target.v = _hsl.l + _hsl.s;\n    return target;\n  }\n  // where c, m, y, k is between 0 and 1\n  static setCMYK(color, c, m, y, k) {\n    const r = (1 - c) * (1 - k);\n    const g = (1 - m) * (1 - k);\n    const b = (1 - y) * (1 - k);\n    return color.setRGB(r, g, b);\n  }\n  static getCMYK(color, target) {\n    const r = color.r;\n    const g = color.g;\n    const b = color.b;\n    const k = 1 - Math.max(r, g, b);\n    const c = (1 - r - k) / (1 - k);\n    const m = (1 - g - k) / (1 - k);\n    const y = (1 - b - k) / (1 - k);\n    target.c = c;\n    target.m = m;\n    target.y = y;\n    target.k = k;\n    return target;\n  }\n}\nexport {\n  ColorConverter\n};\n"]},"metadata":{},"sourceType":"module"}