{"ast":null,"code":"import { Matrix4, Vector3, SphereGeometry, BoxGeometry, MeshStandardMaterial, InstancedMesh, DynamicDrawUsage } from \"three\";\n\nconst _matrix = /* @__PURE__ */new Matrix4();\n\nconst _vector = /* @__PURE__ */new Vector3();\n\nclass XRHandPrimitiveModel {\n  constructor(handModel, controller, path, handedness, options) {\n    this.controller = controller;\n    this.handModel = handModel;\n    this.envMap = null;\n    let geometry;\n\n    if (!options || !options.primitive || options.primitive === \"sphere\") {\n      geometry = new SphereGeometry(1, 10, 10);\n    } else if (options.primitive === \"box\") {\n      geometry = new BoxGeometry(1, 1, 1);\n    }\n\n    const material = new MeshStandardMaterial();\n    this.handMesh = new InstancedMesh(geometry, material, 30);\n    this.handMesh.instanceMatrix.setUsage(DynamicDrawUsage);\n    this.handMesh.castShadow = true;\n    this.handMesh.receiveShadow = true;\n    this.handModel.add(this.handMesh);\n    this.joints = [\"wrist\", \"thumb-metacarpal\", \"thumb-phalanx-proximal\", \"thumb-phalanx-distal\", \"thumb-tip\", \"index-finger-metacarpal\", \"index-finger-phalanx-proximal\", \"index-finger-phalanx-intermediate\", \"index-finger-phalanx-distal\", \"index-finger-tip\", \"middle-finger-metacarpal\", \"middle-finger-phalanx-proximal\", \"middle-finger-phalanx-intermediate\", \"middle-finger-phalanx-distal\", \"middle-finger-tip\", \"ring-finger-metacarpal\", \"ring-finger-phalanx-proximal\", \"ring-finger-phalanx-intermediate\", \"ring-finger-phalanx-distal\", \"ring-finger-tip\", \"pinky-finger-metacarpal\", \"pinky-finger-phalanx-proximal\", \"pinky-finger-phalanx-intermediate\", \"pinky-finger-phalanx-distal\", \"pinky-finger-tip\"];\n  }\n\n  updateMesh() {\n    const defaultRadius = 8e-3;\n    const joints = this.controller.joints;\n    let count = 0;\n\n    for (let i = 0; i < this.joints.length; i++) {\n      const joint = joints[this.joints[i]];\n\n      if (joint.visible) {\n        _vector.setScalar(joint.jointRadius || defaultRadius);\n\n        _matrix.compose(joint.position, joint.quaternion, _vector);\n\n        this.handMesh.setMatrixAt(i, _matrix);\n        count++;\n      }\n    }\n\n    this.handMesh.count = count;\n    this.handMesh.instanceMatrix.needsUpdate = true;\n  }\n\n}\n\nexport { XRHandPrimitiveModel };","map":{"version":3,"sources":["/Users/theodaguier/_workdir/dev/pro/e-do/E-Do-Studio/node_modules/three-stdlib/webxr/XRHandPrimitiveModel.js"],"names":["Matrix4","Vector3","SphereGeometry","BoxGeometry","MeshStandardMaterial","InstancedMesh","DynamicDrawUsage","_matrix","_vector","XRHandPrimitiveModel","constructor","handModel","controller","path","handedness","options","envMap","geometry","primitive","material","handMesh","instanceMatrix","setUsage","castShadow","receiveShadow","add","joints","updateMesh","defaultRadius","count","i","length","joint","visible","setScalar","jointRadius","compose","position","quaternion","setMatrixAt","needsUpdate"],"mappings":"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","sourcesContent":["import { Matrix4, Vector3, SphereGeometry, BoxGeometry, MeshStandardMaterial, InstancedMesh, DynamicDrawUsage } from \"three\";\nconst _matrix = /* @__PURE__ */ new Matrix4();\nconst _vector = /* @__PURE__ */ new Vector3();\nclass XRHandPrimitiveModel {\n  constructor(handModel, controller, path, handedness, options) {\n    this.controller = controller;\n    this.handModel = handModel;\n    this.envMap = null;\n    let geometry;\n    if (!options || !options.primitive || options.primitive === \"sphere\") {\n      geometry = new SphereGeometry(1, 10, 10);\n    } else if (options.primitive === \"box\") {\n      geometry = new BoxGeometry(1, 1, 1);\n    }\n    const material = new MeshStandardMaterial();\n    this.handMesh = new InstancedMesh(geometry, material, 30);\n    this.handMesh.instanceMatrix.setUsage(DynamicDrawUsage);\n    this.handMesh.castShadow = true;\n    this.handMesh.receiveShadow = true;\n    this.handModel.add(this.handMesh);\n    this.joints = [\n      \"wrist\",\n      \"thumb-metacarpal\",\n      \"thumb-phalanx-proximal\",\n      \"thumb-phalanx-distal\",\n      \"thumb-tip\",\n      \"index-finger-metacarpal\",\n      \"index-finger-phalanx-proximal\",\n      \"index-finger-phalanx-intermediate\",\n      \"index-finger-phalanx-distal\",\n      \"index-finger-tip\",\n      \"middle-finger-metacarpal\",\n      \"middle-finger-phalanx-proximal\",\n      \"middle-finger-phalanx-intermediate\",\n      \"middle-finger-phalanx-distal\",\n      \"middle-finger-tip\",\n      \"ring-finger-metacarpal\",\n      \"ring-finger-phalanx-proximal\",\n      \"ring-finger-phalanx-intermediate\",\n      \"ring-finger-phalanx-distal\",\n      \"ring-finger-tip\",\n      \"pinky-finger-metacarpal\",\n      \"pinky-finger-phalanx-proximal\",\n      \"pinky-finger-phalanx-intermediate\",\n      \"pinky-finger-phalanx-distal\",\n      \"pinky-finger-tip\"\n    ];\n  }\n  updateMesh() {\n    const defaultRadius = 8e-3;\n    const joints = this.controller.joints;\n    let count = 0;\n    for (let i = 0; i < this.joints.length; i++) {\n      const joint = joints[this.joints[i]];\n      if (joint.visible) {\n        _vector.setScalar(joint.jointRadius || defaultRadius);\n        _matrix.compose(joint.position, joint.quaternion, _vector);\n        this.handMesh.setMatrixAt(i, _matrix);\n        count++;\n      }\n    }\n    this.handMesh.count = count;\n    this.handMesh.instanceMatrix.needsUpdate = true;\n  }\n}\nexport {\n  XRHandPrimitiveModel\n};\n"]},"metadata":{},"sourceType":"module"}