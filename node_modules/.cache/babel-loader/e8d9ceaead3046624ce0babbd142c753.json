{"ast":null,"code":"var BlendShader = {\n  uniforms: {\n    tDiffuse1: {\n      value: null\n    },\n    tDiffuse2: {\n      value: null\n    },\n    mixRatio: {\n      value: 0.5\n    },\n    opacity: {\n      value: 1\n    }\n  },\n  vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"\tvUv = uv;\", \"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n  fragmentShader: [\"uniform float opacity;\", \"uniform float mixRatio;\", \"uniform sampler2D tDiffuse1;\", \"uniform sampler2D tDiffuse2;\", \"varying vec2 vUv;\", \"void main() {\", \"\tvec4 texel1 = texture2D( tDiffuse1, vUv );\", \"\tvec4 texel2 = texture2D( tDiffuse2, vUv );\", \"\tgl_FragColor = opacity * mix( texel1, texel2, mixRatio );\", \"}\"].join(\"\\n\")\n};\nexport { BlendShader };","map":{"version":3,"sources":["/Users/theodaguier/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/three-stdlib/shaders/BlendShader.js"],"names":["BlendShader","uniforms","tDiffuse1","value","tDiffuse2","mixRatio","opacity","vertexShader","join","fragmentShader"],"mappings":"AAAA,IAAMA,WAAW,GAAG;AAClBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KADH;AAERC,IAAAA,SAAS,EAAE;AAAED,MAAAA,KAAK,EAAE;AAAT,KAFH;AAGRE,IAAAA,QAAQ,EAAE;AAAEF,MAAAA,KAAK,EAAE;AAAT,KAHF;AAIRG,IAAAA,OAAO,EAAE;AAAEH,MAAAA,KAAK,EAAE;AAAT;AAJD,GADQ;AAOlBI,EAAAA,YAAY,EAAE,CACZ,mBADY,EAEZ,eAFY,EAGZ,YAHY,EAIZ,4EAJY,EAKZ,GALY,EAMZC,IANY,CAMP,IANO,CAPI;AAclBC,EAAAA,cAAc,EAAE,CACd,wBADc,EAEd,yBAFc,EAGd,8BAHc,EAId,8BAJc,EAKd,mBALc,EAMd,eANc,EAOd,6CAPc,EAQd,6CARc,EASd,4DATc,EAUd,GAVc,EAWdD,IAXc,CAWT,IAXS;AAdE,CAApB;AA2BA,SACER,WADF","sourcesContent":["const BlendShader = {\n  uniforms: {\n    tDiffuse1: { value: null },\n    tDiffuse2: { value: null },\n    mixRatio: { value: 0.5 },\n    opacity: { value: 1 }\n  },\n  vertexShader: [\n    \"varying vec2 vUv;\",\n    \"void main() {\",\n    \"\tvUv = uv;\",\n    \"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n    \"}\"\n  ].join(\"\\n\"),\n  fragmentShader: [\n    \"uniform float opacity;\",\n    \"uniform float mixRatio;\",\n    \"uniform sampler2D tDiffuse1;\",\n    \"uniform sampler2D tDiffuse2;\",\n    \"varying vec2 vUv;\",\n    \"void main() {\",\n    \"\tvec4 texel1 = texture2D( tDiffuse1, vUv );\",\n    \"\tvec4 texel2 = texture2D( tDiffuse2, vUv );\",\n    \"\tgl_FragColor = opacity * mix( texel1, texel2, mixRatio );\",\n    \"}\"\n  ].join(\"\\n\")\n};\nexport {\n  BlendShader\n};\n"]},"metadata":{},"sourceType":"module"}