{"ast":null,"code":"import _slicedToArray from\"/Users/theodaguier/e-do/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{useMediaQuery}from\"@react-hook/media-query\";import anime from\"animejs/lib/anime.es.js\";import{useViewport}from\"../../../Hooks/viewportProvider\";import ButtonRond from\"./boutonRond\";import\"./textes.scss\";import i18next from\"i18next\";import{useTranslation}from\"react-i18next\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var splitLines=function splitLines(container,opentag,closingtag){var spans=container.children,top=0,tmp=\"\";// Put spans on each word, for now we use the <n> tag because, we want to save 5 bytes:)\ncontainer.innerHTML=container.textContent.replace(/\\S+/g,\"<n>$&</n>\");var ligne=0;// Loop through each words (spans)\nfor(var i=0;i<spans.length;i++){// Get the height of each word\nvar rect=spans[i].getBoundingClientRect().top;// If top is different as the last height of the word use a closingtag and use an opentag after that\nif(top<rect){ligne++;if(ligne==1){tmp+=opentag;}else{tmp+=closingtag+opentag;}}top=rect;// Add the spans + space between each word\ntmp+=spans[i].textContent+\" \";}// Add the lines back to the paragraph\ncontainer.innerHTML=tmp+=closingtag;};var Textes=function Textes(_ref){var titre=_ref.titre,texte=_ref.texte,AnimationBloc3=_ref.AnimationBloc3;var matches=useMediaQuery(\"only screen and (min-width: 1150px)\");//Force le rendu après le redimensionnement de l'écran\nvar windowSize=useViewport();var _useState=useState({width:windowSize.width,height:windowSize.height}),_useState2=_slicedToArray(_useState,2),windowSizeState=_useState2[0],setWindowSizeState=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),CalculLigne=_useState4[0],setCalculLigne=_useState4[1];useEffect(function(){if(document.querySelector(\"#text1\")&&!CalculLigne){splitLines(document.querySelector(\"#text1\"),'<span class=\"ligneServices\"><span class=\"sousligneServices\">',\"</span></span>\");splitLines(document.querySelector(\"#text2\"),'<span class=\"ligneServices\"><span class=\"sousligneServices\">',\"</span></span>\");setCalculLigne(true);}if(windowSize.width!==windowSizeState.width||windowSize.height!==windowSizeState.height){setWindowSizeState({width:windowSize.width,height:windowSize.height});if(document.querySelector(\"#text1\")){splitLines(document.querySelector(\"#text1\"),'<span class=\"ligneServices\"><span class=\"sousligneServices\">',\"</span></span>\");splitLines(document.querySelector(\"#text2\"),'<span class=\"ligneServices\"><span class=\"sousligneServices\">',\"</span></span>\");var sousligneServices=document.querySelectorAll(\".sousligneServices\");var servicesTitreSousLigne=document.querySelectorAll(\".servicesTitreSousLigne\");sousligneServices.forEach(function(element){element.style.opacity=1;});servicesTitreSousLigne.forEach(function(element){element.style.opacity=1;});}}});// Animation du texte\nuseEffect(function(){if(AnimationBloc3){anime({targets:\".sousligneServices\",translateY:[1000,0],easing:\"easeOutExpo\",duration:1200,delay:function delay(el,i){return 70*i;}});anime({targets:\".servicesTitreSousLigne\",translateY:[1000,0],easing:\"easeOutExpo\",duration:1500,delay:0});var sousligneServices=document.querySelectorAll(\".sousligneServices\");var servicesTitreSousLigne=document.querySelectorAll(\".servicesTitreSousLigne\");sousligneServices.forEach(function(element){element.style.opacity=1;});servicesTitreSousLigne.forEach(function(element){element.style.opacity=1;});}},[AnimationBloc3]);var _useTranslation=useTranslation(\"services\"),t=_useTranslation.t;return/*#__PURE__*/_jsxs(\"div\",{className:\"servicesTextes\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"servicesTitreLigne\",children:/*#__PURE__*/_jsx(\"span\",{className:\"servicesTitreSousLigne\",children:titre[0]})}),/*#__PURE__*/_jsx(\"span\",{className:\"servicesTitreLigne\",children:/*#__PURE__*/_jsx(\"span\",{className:\"servicesTitreSousLigne\",children:titre[1]})}),!matches?/*#__PURE__*/_jsx(ButtonRond,{AnimationBloc3:AnimationBloc3,children:t(\"Prices\")}):\"\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"paragraphes\",children:[/*#__PURE__*/_jsx(\"p\",{id:\"text1\",children:texte[0]}),/*#__PURE__*/_jsx(\"p\",{id:\"text2\",children:texte[1]}),matches?/*#__PURE__*/_jsx(ButtonRond,{AnimationBloc3:AnimationBloc3,children:t(\"Prices\")}):\"\"]})]});};export default Textes;","map":{"version":3,"sources":["/Users/theodaguier/e-do/src/Components/Index/Services1/textes.jsx"],"names":["React","useEffect","useState","useMediaQuery","anime","useViewport","ButtonRond","i18next","useTranslation","splitLines","container","opentag","closingtag","spans","children","top","tmp","innerHTML","textContent","replace","ligne","i","length","rect","getBoundingClientRect","Textes","titre","texte","AnimationBloc3","matches","windowSize","width","height","windowSizeState","setWindowSizeState","CalculLigne","setCalculLigne","document","querySelector","sousligneServices","querySelectorAll","servicesTitreSousLigne","forEach","element","style","opacity","targets","translateY","easing","duration","delay","el","t"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useMediaQuery } from \"@react-hook/media-query\";\nimport anime from \"animejs/lib/anime.es.js\";\n\nimport { useViewport } from \"../../../Hooks/viewportProvider\";\n\nimport ButtonRond from \"./boutonRond\";\n\nimport \"./textes.scss\";\n\nimport i18next from \"i18next\";\nimport { useTranslation } from \"react-i18next\";\n\nconst splitLines = (container, opentag, closingtag) => {\n  var spans = container.children,\n    top = 0,\n    tmp = \"\";\n  // Put spans on each word, for now we use the <n> tag because, we want to save 5 bytes:)\n  container.innerHTML = container.textContent.replace(/\\S+/g, \"<n>$&</n>\");\n  let ligne = 0;\n  // Loop through each words (spans)\n  for (let i = 0; i < spans.length; i++) {\n    // Get the height of each word\n    var rect = spans[i].getBoundingClientRect().top;\n    // If top is different as the last height of the word use a closingtag and use an opentag after that\n    if (top < rect) {\n      ligne++;\n      if (ligne == 1) {\n        tmp += opentag;\n      } else {\n        tmp += closingtag + opentag;\n      }\n    }\n    top = rect;\n    // Add the spans + space between each word\n    tmp += spans[i].textContent + \" \";\n  }\n\n  // Add the lines back to the paragraph\n  container.innerHTML = tmp += closingtag;\n};\n\nconst Textes = ({ titre, texte, AnimationBloc3 }) => {\n  const matches = useMediaQuery(\"only screen and (min-width: 1150px)\");\n\n  //Force le rendu après le redimensionnement de l'écran\n  const windowSize = useViewport();\n  const [windowSizeState, setWindowSizeState] = useState({\n    width: windowSize.width,\n    height: windowSize.height,\n  });\n  const [CalculLigne, setCalculLigne] = useState(false);\n\n  useEffect(() => {\n    if (document.querySelector(\"#text1\") && !CalculLigne) {\n      splitLines(\n        document.querySelector(\"#text1\"),\n        '<span class=\"ligneServices\"><span class=\"sousligneServices\">',\n        \"</span></span>\"\n      );\n      splitLines(\n        document.querySelector(\"#text2\"),\n        '<span class=\"ligneServices\"><span class=\"sousligneServices\">',\n        \"</span></span>\"\n      );\n      setCalculLigne(true);\n    }\n\n    if (\n      windowSize.width !== windowSizeState.width ||\n      windowSize.height !== windowSizeState.height\n    ) {\n      setWindowSizeState({\n        width: windowSize.width,\n        height: windowSize.height,\n      });\n\n      if (document.querySelector(\"#text1\")) {\n        splitLines(\n          document.querySelector(\"#text1\"),\n          '<span class=\"ligneServices\"><span class=\"sousligneServices\">',\n          \"</span></span>\"\n        );\n        splitLines(\n          document.querySelector(\"#text2\"),\n          '<span class=\"ligneServices\"><span class=\"sousligneServices\">',\n          \"</span></span>\"\n        );\n        let sousligneServices = document.querySelectorAll(\".sousligneServices\");\n        let servicesTitreSousLigne = document.querySelectorAll(\n          \".servicesTitreSousLigne\"\n        );\n\n        sousligneServices.forEach((element) => {\n          element.style.opacity = 1;\n        });\n\n        servicesTitreSousLigne.forEach((element) => {\n          element.style.opacity = 1;\n        });\n      }\n    }\n  });\n\n  // Animation du texte\n  useEffect(() => {\n    if (AnimationBloc3) {\n      anime({\n        targets: \".sousligneServices\",\n        translateY: [1000, 0],\n        easing: \"easeOutExpo\",\n        duration: 1200,\n        delay: (el, i) => 70 * i,\n      });\n\n      anime({\n        targets: \".servicesTitreSousLigne\",\n        translateY: [1000, 0],\n        easing: \"easeOutExpo\",\n        duration: 1500,\n        delay: 0,\n      });\n\n      let sousligneServices = document.querySelectorAll(\".sousligneServices\");\n      let servicesTitreSousLigne = document.querySelectorAll(\n        \".servicesTitreSousLigne\"\n      );\n\n      sousligneServices.forEach((element) => {\n        element.style.opacity = 1;\n      });\n\n      servicesTitreSousLigne.forEach((element) => {\n        element.style.opacity = 1;\n      });\n    }\n  }, [AnimationBloc3]);\n\n  const { t } = useTranslation(\"services\");\n\n  return (\n    <div className=\"servicesTextes\">\n      <h1>\n        <span className=\"servicesTitreLigne\">\n          <span className=\"servicesTitreSousLigne\">{titre[0]}</span>\n        </span>\n        <span className=\"servicesTitreLigne\">\n          <span className=\"servicesTitreSousLigne\">{titre[1]}</span>\n        </span>\n\n        {!matches ? (\n          <ButtonRond AnimationBloc3={AnimationBloc3}>{t(\"Prices\")}</ButtonRond>\n        ) : (\n          \"\"\n        )}\n      </h1>\n      <div className=\"paragraphes\">\n        <p id=\"text1\">{texte[0]}</p>\n        <p id=\"text2\">{texte[1]}</p>\n\n        {matches ? (\n          <ButtonRond AnimationBloc3={AnimationBloc3}>{t(\"Prices\")}</ButtonRond>\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Textes;\n"]},"metadata":{},"sourceType":"module"}