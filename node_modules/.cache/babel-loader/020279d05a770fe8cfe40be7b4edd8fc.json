{"ast":null,"code":"import { Mesh, BufferGeometry, BufferAttribute, DynamicDrawUsage, Sphere, Vector3, Color } from \"three\";\n\nclass MarchingCubes extends Mesh {\n  constructor(resolution, material, enableUvs = false, enableColors = false, maxPolyCount = 1e4) {\n    const geometry = new BufferGeometry();\n    super(geometry, material);\n    this.isMarchingCubes = true;\n    const scope = this;\n    const vlist = new Float32Array(12 * 3);\n    const nlist = new Float32Array(12 * 3);\n    const clist = new Float32Array(12 * 3);\n    this.enableUvs = enableUvs;\n    this.enableColors = enableColors;\n\n    this.init = function (resolution2) {\n      this.resolution = resolution2;\n      this.isolation = 80;\n      this.size = resolution2;\n      this.size2 = this.size * this.size;\n      this.size3 = this.size2 * this.size;\n      this.halfsize = this.size / 2;\n      this.delta = 2 / this.size;\n      this.yd = this.size;\n      this.zd = this.size2;\n      this.field = new Float32Array(this.size3);\n      this.normal_cache = new Float32Array(this.size3 * 3);\n      this.palette = new Float32Array(this.size3 * 3);\n      this.count = 0;\n      const maxVertexCount = maxPolyCount * 3;\n      this.positionArray = new Float32Array(maxVertexCount * 3);\n      const positionAttribute = new BufferAttribute(this.positionArray, 3);\n      positionAttribute.setUsage(DynamicDrawUsage);\n      geometry.setAttribute(\"position\", positionAttribute);\n      this.normalArray = new Float32Array(maxVertexCount * 3);\n      const normalAttribute = new BufferAttribute(this.normalArray, 3);\n      normalAttribute.setUsage(DynamicDrawUsage);\n      geometry.setAttribute(\"normal\", normalAttribute);\n\n      if (this.enableUvs) {\n        this.uvArray = new Float32Array(maxVertexCount * 2);\n        const uvAttribute = new BufferAttribute(this.uvArray, 2);\n        uvAttribute.setUsage(DynamicDrawUsage);\n        geometry.setAttribute(\"uv\", uvAttribute);\n      }\n\n      if (this.enableColors) {\n        this.colorArray = new Float32Array(maxVertexCount * 3);\n        const colorAttribute = new BufferAttribute(this.colorArray, 3);\n        colorAttribute.setUsage(DynamicDrawUsage);\n        geometry.setAttribute(\"color\", colorAttribute);\n      }\n\n      geometry.boundingSphere = new Sphere(new Vector3(), 1);\n    };\n\n    function lerp(a, b, t) {\n      return a + (b - a) * t;\n    }\n\n    function VIntX(q, offset, isol, x, y, z, valp1, valp2, c_offset1, c_offset2) {\n      const mu = (isol - valp1) / (valp2 - valp1),\n            nc = scope.normal_cache;\n      vlist[offset + 0] = x + mu * scope.delta;\n      vlist[offset + 1] = y;\n      vlist[offset + 2] = z;\n      nlist[offset + 0] = lerp(nc[q + 0], nc[q + 3], mu);\n      nlist[offset + 1] = lerp(nc[q + 1], nc[q + 4], mu);\n      nlist[offset + 2] = lerp(nc[q + 2], nc[q + 5], mu);\n      clist[offset + 0] = lerp(scope.palette[c_offset1 * 3 + 0], scope.palette[c_offset2 * 3 + 0], mu);\n      clist[offset + 1] = lerp(scope.palette[c_offset1 * 3 + 1], scope.palette[c_offset2 * 3 + 1], mu);\n      clist[offset + 2] = lerp(scope.palette[c_offset1 * 3 + 2], scope.palette[c_offset2 * 3 + 2], mu);\n    }\n\n    function VIntY(q, offset, isol, x, y, z, valp1, valp2, c_offset1, c_offset2) {\n      const mu = (isol - valp1) / (valp2 - valp1),\n            nc = scope.normal_cache;\n      vlist[offset + 0] = x;\n      vlist[offset + 1] = y + mu * scope.delta;\n      vlist[offset + 2] = z;\n      const q2 = q + scope.yd * 3;\n      nlist[offset + 0] = lerp(nc[q + 0], nc[q2 + 0], mu);\n      nlist[offset + 1] = lerp(nc[q + 1], nc[q2 + 1], mu);\n      nlist[offset + 2] = lerp(nc[q + 2], nc[q2 + 2], mu);\n      clist[offset + 0] = lerp(scope.palette[c_offset1 * 3 + 0], scope.palette[c_offset2 * 3 + 0], mu);\n      clist[offset + 1] = lerp(scope.palette[c_offset1 * 3 + 1], scope.palette[c_offset2 * 3 + 1], mu);\n      clist[offset + 2] = lerp(scope.palette[c_offset1 * 3 + 2], scope.palette[c_offset2 * 3 + 2], mu);\n    }\n\n    function VIntZ(q, offset, isol, x, y, z, valp1, valp2, c_offset1, c_offset2) {\n      const mu = (isol - valp1) / (valp2 - valp1),\n            nc = scope.normal_cache;\n      vlist[offset + 0] = x;\n      vlist[offset + 1] = y;\n      vlist[offset + 2] = z + mu * scope.delta;\n      const q2 = q + scope.zd * 3;\n      nlist[offset + 0] = lerp(nc[q + 0], nc[q2 + 0], mu);\n      nlist[offset + 1] = lerp(nc[q + 1], nc[q2 + 1], mu);\n      nlist[offset + 2] = lerp(nc[q + 2], nc[q2 + 2], mu);\n      clist[offset + 0] = lerp(scope.palette[c_offset1 * 3 + 0], scope.palette[c_offset2 * 3 + 0], mu);\n      clist[offset + 1] = lerp(scope.palette[c_offset1 * 3 + 1], scope.palette[c_offset2 * 3 + 1], mu);\n      clist[offset + 2] = lerp(scope.palette[c_offset1 * 3 + 2], scope.palette[c_offset2 * 3 + 2], mu);\n    }\n\n    function compNorm(q) {\n      const q3 = q * 3;\n\n      if (scope.normal_cache[q3] === 0) {\n        scope.normal_cache[q3 + 0] = scope.field[q - 1] - scope.field[q + 1];\n        scope.normal_cache[q3 + 1] = scope.field[q - scope.yd] - scope.field[q + scope.yd];\n        scope.normal_cache[q3 + 2] = scope.field[q - scope.zd] - scope.field[q + scope.zd];\n      }\n    }\n\n    function polygonize(fx, fy, fz, q, isol) {\n      const q1 = q + 1,\n            qy = q + scope.yd,\n            qz = q + scope.zd,\n            q1y = q1 + scope.yd,\n            q1z = q1 + scope.zd,\n            qyz = q + scope.yd + scope.zd,\n            q1yz = q1 + scope.yd + scope.zd;\n      let cubeindex = 0;\n      const field0 = scope.field[q],\n            field1 = scope.field[q1],\n            field2 = scope.field[qy],\n            field3 = scope.field[q1y],\n            field4 = scope.field[qz],\n            field5 = scope.field[q1z],\n            field6 = scope.field[qyz],\n            field7 = scope.field[q1yz];\n      if (field0 < isol) cubeindex |= 1;\n      if (field1 < isol) cubeindex |= 2;\n      if (field2 < isol) cubeindex |= 8;\n      if (field3 < isol) cubeindex |= 4;\n      if (field4 < isol) cubeindex |= 16;\n      if (field5 < isol) cubeindex |= 32;\n      if (field6 < isol) cubeindex |= 128;\n      if (field7 < isol) cubeindex |= 64;\n      const bits = edgeTable[cubeindex];\n      if (bits === 0) return 0;\n      const d = scope.delta,\n            fx2 = fx + d,\n            fy2 = fy + d,\n            fz2 = fz + d;\n\n      if (bits & 1) {\n        compNorm(q);\n        compNorm(q1);\n        VIntX(q * 3, 0, isol, fx, fy, fz, field0, field1, q, q1);\n      }\n\n      if (bits & 2) {\n        compNorm(q1);\n        compNorm(q1y);\n        VIntY(q1 * 3, 3, isol, fx2, fy, fz, field1, field3, q1, q1y);\n      }\n\n      if (bits & 4) {\n        compNorm(qy);\n        compNorm(q1y);\n        VIntX(qy * 3, 6, isol, fx, fy2, fz, field2, field3, qy, q1y);\n      }\n\n      if (bits & 8) {\n        compNorm(q);\n        compNorm(qy);\n        VIntY(q * 3, 9, isol, fx, fy, fz, field0, field2, q, qy);\n      }\n\n      if (bits & 16) {\n        compNorm(qz);\n        compNorm(q1z);\n        VIntX(qz * 3, 12, isol, fx, fy, fz2, field4, field5, qz, q1z);\n      }\n\n      if (bits & 32) {\n        compNorm(q1z);\n        compNorm(q1yz);\n        VIntY(q1z * 3, 15, isol, fx2, fy, fz2, field5, field7, q1z, q1yz);\n      }\n\n      if (bits & 64) {\n        compNorm(qyz);\n        compNorm(q1yz);\n        VIntX(qyz * 3, 18, isol, fx, fy2, fz2, field6, field7, qyz, q1yz);\n      }\n\n      if (bits & 128) {\n        compNorm(qz);\n        compNorm(qyz);\n        VIntY(qz * 3, 21, isol, fx, fy, fz2, field4, field6, qz, qyz);\n      }\n\n      if (bits & 256) {\n        compNorm(q);\n        compNorm(qz);\n        VIntZ(q * 3, 24, isol, fx, fy, fz, field0, field4, q, qz);\n      }\n\n      if (bits & 512) {\n        compNorm(q1);\n        compNorm(q1z);\n        VIntZ(q1 * 3, 27, isol, fx2, fy, fz, field1, field5, q1, q1z);\n      }\n\n      if (bits & 1024) {\n        compNorm(q1y);\n        compNorm(q1yz);\n        VIntZ(q1y * 3, 30, isol, fx2, fy2, fz, field3, field7, q1y, q1yz);\n      }\n\n      if (bits & 2048) {\n        compNorm(qy);\n        compNorm(qyz);\n        VIntZ(qy * 3, 33, isol, fx, fy2, fz, field2, field6, qy, qyz);\n      }\n\n      cubeindex <<= 4;\n      let o1,\n          o2,\n          o3,\n          numtris = 0,\n          i = 0;\n\n      while (triTable[cubeindex + i] != -1) {\n        o1 = cubeindex + i;\n        o2 = o1 + 1;\n        o3 = o1 + 2;\n        posnormtriv(vlist, nlist, clist, 3 * triTable[o1], 3 * triTable[o2], 3 * triTable[o3]);\n        i += 3;\n        numtris++;\n      }\n\n      return numtris;\n    }\n\n    function posnormtriv(pos, norm, colors, o1, o2, o3) {\n      const c = scope.count * 3;\n      scope.positionArray[c + 0] = pos[o1];\n      scope.positionArray[c + 1] = pos[o1 + 1];\n      scope.positionArray[c + 2] = pos[o1 + 2];\n      scope.positionArray[c + 3] = pos[o2];\n      scope.positionArray[c + 4] = pos[o2 + 1];\n      scope.positionArray[c + 5] = pos[o2 + 2];\n      scope.positionArray[c + 6] = pos[o3];\n      scope.positionArray[c + 7] = pos[o3 + 1];\n      scope.positionArray[c + 8] = pos[o3 + 2];\n\n      if (scope.material.flatShading === true) {\n        const nx = (norm[o1 + 0] + norm[o2 + 0] + norm[o3 + 0]) / 3;\n        const ny = (norm[o1 + 1] + norm[o2 + 1] + norm[o3 + 1]) / 3;\n        const nz = (norm[o1 + 2] + norm[o2 + 2] + norm[o3 + 2]) / 3;\n        scope.normalArray[c + 0] = nx;\n        scope.normalArray[c + 1] = ny;\n        scope.normalArray[c + 2] = nz;\n        scope.normalArray[c + 3] = nx;\n        scope.normalArray[c + 4] = ny;\n        scope.normalArray[c + 5] = nz;\n        scope.normalArray[c + 6] = nx;\n        scope.normalArray[c + 7] = ny;\n        scope.normalArray[c + 8] = nz;\n      } else {\n        scope.normalArray[c + 0] = norm[o1 + 0];\n        scope.normalArray[c + 1] = norm[o1 + 1];\n        scope.normalArray[c + 2] = norm[o1 + 2];\n        scope.normalArray[c + 3] = norm[o2 + 0];\n        scope.normalArray[c + 4] = norm[o2 + 1];\n        scope.normalArray[c + 5] = norm[o2 + 2];\n        scope.normalArray[c + 6] = norm[o3 + 0];\n        scope.normalArray[c + 7] = norm[o3 + 1];\n        scope.normalArray[c + 8] = norm[o3 + 2];\n      }\n\n      if (scope.enableUvs) {\n        const d = scope.count * 2;\n        scope.uvArray[d + 0] = pos[o1 + 0];\n        scope.uvArray[d + 1] = pos[o1 + 2];\n        scope.uvArray[d + 2] = pos[o2 + 0];\n        scope.uvArray[d + 3] = pos[o2 + 2];\n        scope.uvArray[d + 4] = pos[o3 + 0];\n        scope.uvArray[d + 5] = pos[o3 + 2];\n      }\n\n      if (scope.enableColors) {\n        scope.colorArray[c + 0] = colors[o1 + 0];\n        scope.colorArray[c + 1] = colors[o1 + 1];\n        scope.colorArray[c + 2] = colors[o1 + 2];\n        scope.colorArray[c + 3] = colors[o2 + 0];\n        scope.colorArray[c + 4] = colors[o2 + 1];\n        scope.colorArray[c + 5] = colors[o2 + 2];\n        scope.colorArray[c + 6] = colors[o3 + 0];\n        scope.colorArray[c + 7] = colors[o3 + 1];\n        scope.colorArray[c + 8] = colors[o3 + 2];\n      }\n\n      scope.count += 3;\n    }\n\n    this.addBall = function (ballx, bally, ballz, strength, subtract, colors) {\n      const sign = Math.sign(strength);\n      strength = Math.abs(strength);\n      const userDefineColor = !(colors === void 0 || colors === null);\n      let ballColor = new Color(ballx, bally, ballz);\n\n      if (userDefineColor) {\n        try {\n          ballColor = colors instanceof Color ? colors : Array.isArray(colors) ? new Color(Math.min(Math.abs(colors[0]), 1), Math.min(Math.abs(colors[1]), 1), Math.min(Math.abs(colors[2]), 1)) : new Color(colors);\n        } catch (err) {\n          ballColor = new Color(ballx, bally, ballz);\n        }\n      }\n\n      const radius = this.size * Math.sqrt(strength / subtract),\n            zs = ballz * this.size,\n            ys = bally * this.size,\n            xs = ballx * this.size;\n      let min_z = Math.floor(zs - radius);\n      if (min_z < 1) min_z = 1;\n      let max_z = Math.floor(zs + radius);\n      if (max_z > this.size - 1) max_z = this.size - 1;\n      let min_y = Math.floor(ys - radius);\n      if (min_y < 1) min_y = 1;\n      let max_y = Math.floor(ys + radius);\n      if (max_y > this.size - 1) max_y = this.size - 1;\n      let min_x = Math.floor(xs - radius);\n      if (min_x < 1) min_x = 1;\n      let max_x = Math.floor(xs + radius);\n      if (max_x > this.size - 1) max_x = this.size - 1;\n      let x, y, z, y_offset, z_offset, fx, fy, fz, fz2, fy2, val;\n\n      for (z = min_z; z < max_z; z++) {\n        z_offset = this.size2 * z;\n        fz = z / this.size - ballz;\n        fz2 = fz * fz;\n\n        for (y = min_y; y < max_y; y++) {\n          y_offset = z_offset + this.size * y;\n          fy = y / this.size - bally;\n          fy2 = fy * fy;\n\n          for (x = min_x; x < max_x; x++) {\n            fx = x / this.size - ballx;\n            val = strength / (1e-6 + fx * fx + fy2 + fz2) - subtract;\n\n            if (val > 0) {\n              this.field[y_offset + x] += val * sign;\n              const ratio = Math.sqrt((x - xs) * (x - xs) + (y - ys) * (y - ys) + (z - zs) * (z - zs)) / radius;\n              const contrib = 1 - ratio * ratio * ratio * (ratio * (ratio * 6 - 15) + 10);\n              this.palette[(y_offset + x) * 3 + 0] += ballColor.r * contrib;\n              this.palette[(y_offset + x) * 3 + 1] += ballColor.g * contrib;\n              this.palette[(y_offset + x) * 3 + 2] += ballColor.b * contrib;\n            }\n          }\n        }\n      }\n    };\n\n    this.addPlaneX = function (strength, subtract) {\n      const size = this.size,\n            yd = this.yd,\n            zd = this.zd,\n            field = this.field;\n      let x,\n          y,\n          z,\n          xx,\n          val,\n          xdiv,\n          cxy,\n          dist = size * Math.sqrt(strength / subtract);\n      if (dist > size) dist = size;\n\n      for (x = 0; x < dist; x++) {\n        xdiv = x / size;\n        xx = xdiv * xdiv;\n        val = strength / (1e-4 + xx) - subtract;\n\n        if (val > 0) {\n          for (y = 0; y < size; y++) {\n            cxy = x + y * yd;\n\n            for (z = 0; z < size; z++) {\n              field[zd * z + cxy] += val;\n            }\n          }\n        }\n      }\n    };\n\n    this.addPlaneY = function (strength, subtract) {\n      const size = this.size,\n            yd = this.yd,\n            zd = this.zd,\n            field = this.field;\n      let x,\n          y,\n          z,\n          yy,\n          val,\n          ydiv,\n          cy,\n          cxy,\n          dist = size * Math.sqrt(strength / subtract);\n      if (dist > size) dist = size;\n\n      for (y = 0; y < dist; y++) {\n        ydiv = y / size;\n        yy = ydiv * ydiv;\n        val = strength / (1e-4 + yy) - subtract;\n\n        if (val > 0) {\n          cy = y * yd;\n\n          for (x = 0; x < size; x++) {\n            cxy = cy + x;\n\n            for (z = 0; z < size; z++) field[zd * z + cxy] += val;\n          }\n        }\n      }\n    };\n\n    this.addPlaneZ = function (strength, subtract) {\n      const size = this.size,\n            yd = this.yd,\n            zd = this.zd,\n            field = this.field;\n      let x,\n          y,\n          z,\n          zz,\n          val,\n          zdiv,\n          cz,\n          cyz,\n          dist = size * Math.sqrt(strength / subtract);\n      if (dist > size) dist = size;\n\n      for (z = 0; z < dist; z++) {\n        zdiv = z / size;\n        zz = zdiv * zdiv;\n        val = strength / (1e-4 + zz) - subtract;\n\n        if (val > 0) {\n          cz = zd * z;\n\n          for (y = 0; y < size; y++) {\n            cyz = cz + y * yd;\n\n            for (x = 0; x < size; x++) field[cyz + x] += val;\n          }\n        }\n      }\n    };\n\n    this.setCell = function (x, y, z, value) {\n      const index = this.size2 * z + this.size * y + x;\n      this.field[index] = value;\n    };\n\n    this.getCell = function (x, y, z) {\n      const index = this.size2 * z + this.size * y + x;\n      return this.field[index];\n    };\n\n    this.blur = function (intensity = 1) {\n      const field = this.field;\n      const fieldCopy = field.slice();\n      const size = this.size;\n      const size2 = this.size2;\n\n      for (let x = 0; x < size; x++) {\n        for (let y = 0; y < size; y++) {\n          for (let z = 0; z < size; z++) {\n            const index = size2 * z + size * y + x;\n            let val = fieldCopy[index];\n            let count = 1;\n\n            for (let x2 = -1; x2 <= 1; x2 += 2) {\n              const x3 = x2 + x;\n              if (x3 < 0 || x3 >= size) continue;\n\n              for (let y2 = -1; y2 <= 1; y2 += 2) {\n                const y3 = y2 + y;\n                if (y3 < 0 || y3 >= size) continue;\n\n                for (let z2 = -1; z2 <= 1; z2 += 2) {\n                  const z3 = z2 + z;\n                  if (z3 < 0 || z3 >= size) continue;\n                  const index2 = size2 * z3 + size * y3 + x3;\n                  const val2 = fieldCopy[index2];\n                  count++;\n                  val += intensity * (val2 - val) / count;\n                }\n              }\n            }\n\n            field[index] = val;\n          }\n        }\n      }\n    };\n\n    this.reset = function () {\n      for (let i = 0; i < this.size3; i++) {\n        this.normal_cache[i * 3] = 0;\n        this.field[i] = 0;\n        this.palette[i * 3] = this.palette[i * 3 + 1] = this.palette[i * 3 + 2] = 0;\n      }\n    };\n\n    this.update = function () {\n      this.count = 0;\n      const smin2 = this.size - 2;\n\n      for (let z = 1; z < smin2; z++) {\n        const z_offset = this.size2 * z;\n        const fz = (z - this.halfsize) / this.halfsize;\n\n        for (let y = 1; y < smin2; y++) {\n          const y_offset = z_offset + this.size * y;\n          const fy = (y - this.halfsize) / this.halfsize;\n\n          for (let x = 1; x < smin2; x++) {\n            const fx = (x - this.halfsize) / this.halfsize;\n            const q = y_offset + x;\n            polygonize(fx, fy, fz, q, this.isolation);\n          }\n        }\n      }\n\n      this.geometry.setDrawRange(0, this.count);\n      geometry.getAttribute(\"position\").needsUpdate = true;\n      geometry.getAttribute(\"normal\").needsUpdate = true;\n      if (this.enableUvs) geometry.getAttribute(\"uv\").needsUpdate = true;\n      if (this.enableColors) geometry.getAttribute(\"color\").needsUpdate = true;\n      if (this.count / 3 > maxPolyCount) console.warn(\"THREE.MarchingCubes: Geometry buffers too small for rendering. Please create an instance with a higher poly count.\");\n    };\n\n    this.init(resolution);\n  }\n\n}\n\nconst edgeTable = new Int32Array([0, 265, 515, 778, 1030, 1295, 1541, 1804, 2060, 2309, 2575, 2822, 3082, 3331, 3593, 3840, 400, 153, 915, 666, 1430, 1183, 1941, 1692, 2460, 2197, 2975, 2710, 3482, 3219, 3993, 3728, 560, 825, 51, 314, 1590, 1855, 1077, 1340, 2620, 2869, 2111, 2358, 3642, 3891, 3129, 3376, 928, 681, 419, 170, 1958, 1711, 1445, 1196, 2988, 2725, 2479, 2214, 4010, 3747, 3497, 3232, 1120, 1385, 1635, 1898, 102, 367, 613, 876, 3180, 3429, 3695, 3942, 2154, 2403, 2665, 2912, 1520, 1273, 2035, 1786, 502, 255, 1013, 764, 3580, 3317, 4095, 3830, 2554, 2291, 3065, 2800, 1616, 1881, 1107, 1370, 598, 863, 85, 348, 3676, 3925, 3167, 3414, 2650, 2899, 2137, 2384, 1984, 1737, 1475, 1226, 966, 719, 453, 204, 4044, 3781, 3535, 3270, 3018, 2755, 2505, 2240, 2240, 2505, 2755, 3018, 3270, 3535, 3781, 4044, 204, 453, 719, 966, 1226, 1475, 1737, 1984, 2384, 2137, 2899, 2650, 3414, 3167, 3925, 3676, 348, 85, 863, 598, 1370, 1107, 1881, 1616, 2800, 3065, 2291, 2554, 3830, 4095, 3317, 3580, 764, 1013, 255, 502, 1786, 2035, 1273, 1520, 2912, 2665, 2403, 2154, 3942, 3695, 3429, 3180, 876, 613, 367, 102, 1898, 1635, 1385, 1120, 3232, 3497, 3747, 4010, 2214, 2479, 2725, 2988, 1196, 1445, 1711, 1958, 170, 419, 681, 928, 3376, 3129, 3891, 3642, 2358, 2111, 2869, 2620, 1340, 1077, 1855, 1590, 314, 51, 825, 560, 3728, 3993, 3219, 3482, 2710, 2975, 2197, 2460, 1692, 1941, 1183, 1430, 666, 915, 153, 400, 3840, 3593, 3331, 3082, 2822, 2575, 2309, 2060, 1804, 1541, 1295, 1030, 778, 515, 265, 0]);\nconst triTable = new Int32Array([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 8, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 1, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 8, 3, 9, 8, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 2, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 8, 3, 1, 2, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, 2, 10, 0, 2, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, 8, 3, 2, 10, 8, 10, 9, 8, -1, -1, -1, -1, -1, -1, -1, 3, 11, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 11, 2, 8, 11, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 9, 0, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 11, 2, 1, 9, 11, 9, 8, 11, -1, -1, -1, -1, -1, -1, -1, 3, 10, 1, 11, 10, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 10, 1, 0, 8, 10, 8, 11, 10, -1, -1, -1, -1, -1, -1, -1, 3, 9, 0, 3, 11, 9, 11, 10, 9, -1, -1, -1, -1, -1, -1, -1, 9, 8, 10, 10, 8, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 7, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 3, 0, 7, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 1, 9, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 1, 9, 4, 7, 1, 7, 3, 1, -1, -1, -1, -1, -1, -1, -1, 1, 2, 10, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 4, 7, 3, 0, 4, 1, 2, 10, -1, -1, -1, -1, -1, -1, -1, 9, 2, 10, 9, 0, 2, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, 2, 10, 9, 2, 9, 7, 2, 7, 3, 7, 9, 4, -1, -1, -1, -1, 8, 4, 7, 3, 11, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, 4, 7, 11, 2, 4, 2, 0, 4, -1, -1, -1, -1, -1, -1, -1, 9, 0, 1, 8, 4, 7, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1, 4, 7, 11, 9, 4, 11, 9, 11, 2, 9, 2, 1, -1, -1, -1, -1, 3, 10, 1, 3, 11, 10, 7, 8, 4, -1, -1, -1, -1, -1, -1, -1, 1, 11, 10, 1, 4, 11, 1, 0, 4, 7, 11, 4, -1, -1, -1, -1, 4, 7, 8, 9, 0, 11, 9, 11, 10, 11, 0, 3, -1, -1, -1, -1, 4, 7, 11, 4, 11, 9, 9, 11, 10, -1, -1, -1, -1, -1, -1, -1, 9, 5, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, 5, 4, 0, 8, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 5, 4, 1, 5, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8, 5, 4, 8, 3, 5, 3, 1, 5, -1, -1, -1, -1, -1, -1, -1, 1, 2, 10, 9, 5, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 0, 8, 1, 2, 10, 4, 9, 5, -1, -1, -1, -1, -1, -1, -1, 5, 2, 10, 5, 4, 2, 4, 0, 2, -1, -1, -1, -1, -1, -1, -1, 2, 10, 5, 3, 2, 5, 3, 5, 4, 3, 4, 8, -1, -1, -1, -1, 9, 5, 4, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 11, 2, 0, 8, 11, 4, 9, 5, -1, -1, -1, -1, -1, -1, -1, 0, 5, 4, 0, 1, 5, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1, 2, 1, 5, 2, 5, 8, 2, 8, 11, 4, 8, 5, -1, -1, -1, -1, 10, 3, 11, 10, 1, 3, 9, 5, 4, -1, -1, -1, -1, -1, -1, -1, 4, 9, 5, 0, 8, 1, 8, 10, 1, 8, 11, 10, -1, -1, -1, -1, 5, 4, 0, 5, 0, 11, 5, 11, 10, 11, 0, 3, -1, -1, -1, -1, 5, 4, 8, 5, 8, 10, 10, 8, 11, -1, -1, -1, -1, -1, -1, -1, 9, 7, 8, 5, 7, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, 3, 0, 9, 5, 3, 5, 7, 3, -1, -1, -1, -1, -1, -1, -1, 0, 7, 8, 0, 1, 7, 1, 5, 7, -1, -1, -1, -1, -1, -1, -1, 1, 5, 3, 3, 5, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, 7, 8, 9, 5, 7, 10, 1, 2, -1, -1, -1, -1, -1, -1, -1, 10, 1, 2, 9, 5, 0, 5, 3, 0, 5, 7, 3, -1, -1, -1, -1, 8, 0, 2, 8, 2, 5, 8, 5, 7, 10, 5, 2, -1, -1, -1, -1, 2, 10, 5, 2, 5, 3, 3, 5, 7, -1, -1, -1, -1, -1, -1, -1, 7, 9, 5, 7, 8, 9, 3, 11, 2, -1, -1, -1, -1, -1, -1, -1, 9, 5, 7, 9, 7, 2, 9, 2, 0, 2, 7, 11, -1, -1, -1, -1, 2, 3, 11, 0, 1, 8, 1, 7, 8, 1, 5, 7, -1, -1, -1, -1, 11, 2, 1, 11, 1, 7, 7, 1, 5, -1, -1, -1, -1, -1, -1, -1, 9, 5, 8, 8, 5, 7, 10, 1, 3, 10, 3, 11, -1, -1, -1, -1, 5, 7, 0, 5, 0, 9, 7, 11, 0, 1, 0, 10, 11, 10, 0, -1, 11, 10, 0, 11, 0, 3, 10, 5, 0, 8, 0, 7, 5, 7, 0, -1, 11, 10, 5, 7, 11, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 8, 3, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, 0, 1, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 8, 3, 1, 9, 8, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1, 1, 6, 5, 2, 6, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 6, 5, 1, 2, 6, 3, 0, 8, -1, -1, -1, -1, -1, -1, -1, 9, 6, 5, 9, 0, 6, 0, 2, 6, -1, -1, -1, -1, -1, -1, -1, 5, 9, 8, 5, 8, 2, 5, 2, 6, 3, 2, 8, -1, -1, -1, -1, 2, 3, 11, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, 0, 8, 11, 2, 0, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1, 0, 1, 9, 2, 3, 11, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1, 5, 10, 6, 1, 9, 2, 9, 11, 2, 9, 8, 11, -1, -1, -1, -1, 6, 3, 11, 6, 5, 3, 5, 1, 3, -1, -1, -1, -1, -1, -1, -1, 0, 8, 11, 0, 11, 5, 0, 5, 1, 5, 11, 6, -1, -1, -1, -1, 3, 11, 6, 0, 3, 6, 0, 6, 5, 0, 5, 9, -1, -1, -1, -1, 6, 5, 9, 6, 9, 11, 11, 9, 8, -1, -1, -1, -1, -1, -1, -1, 5, 10, 6, 4, 7, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 3, 0, 4, 7, 3, 6, 5, 10, -1, -1, -1, -1, -1, -1, -1, 1, 9, 0, 5, 10, 6, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, 10, 6, 5, 1, 9, 7, 1, 7, 3, 7, 9, 4, -1, -1, -1, -1, 6, 1, 2, 6, 5, 1, 4, 7, 8, -1, -1, -1, -1, -1, -1, -1, 1, 2, 5, 5, 2, 6, 3, 0, 4, 3, 4, 7, -1, -1, -1, -1, 8, 4, 7, 9, 0, 5, 0, 6, 5, 0, 2, 6, -1, -1, -1, -1, 7, 3, 9, 7, 9, 4, 3, 2, 9, 5, 9, 6, 2, 6, 9, -1, 3, 11, 2, 7, 8, 4, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1, 5, 10, 6, 4, 7, 2, 4, 2, 0, 2, 7, 11, -1, -1, -1, -1, 0, 1, 9, 4, 7, 8, 2, 3, 11, 5, 10, 6, -1, -1, -1, -1, 9, 2, 1, 9, 11, 2, 9, 4, 11, 7, 11, 4, 5, 10, 6, -1, 8, 4, 7, 3, 11, 5, 3, 5, 1, 5, 11, 6, -1, -1, -1, -1, 5, 1, 11, 5, 11, 6, 1, 0, 11, 7, 11, 4, 0, 4, 11, -1, 0, 5, 9, 0, 6, 5, 0, 3, 6, 11, 6, 3, 8, 4, 7, -1, 6, 5, 9, 6, 9, 11, 4, 7, 9, 7, 11, 9, -1, -1, -1, -1, 10, 4, 9, 6, 4, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 10, 6, 4, 9, 10, 0, 8, 3, -1, -1, -1, -1, -1, -1, -1, 10, 0, 1, 10, 6, 0, 6, 4, 0, -1, -1, -1, -1, -1, -1, -1, 8, 3, 1, 8, 1, 6, 8, 6, 4, 6, 1, 10, -1, -1, -1, -1, 1, 4, 9, 1, 2, 4, 2, 6, 4, -1, -1, -1, -1, -1, -1, -1, 3, 0, 8, 1, 2, 9, 2, 4, 9, 2, 6, 4, -1, -1, -1, -1, 0, 2, 4, 4, 2, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8, 3, 2, 8, 2, 4, 4, 2, 6, -1, -1, -1, -1, -1, -1, -1, 10, 4, 9, 10, 6, 4, 11, 2, 3, -1, -1, -1, -1, -1, -1, -1, 0, 8, 2, 2, 8, 11, 4, 9, 10, 4, 10, 6, -1, -1, -1, -1, 3, 11, 2, 0, 1, 6, 0, 6, 4, 6, 1, 10, -1, -1, -1, -1, 6, 4, 1, 6, 1, 10, 4, 8, 1, 2, 1, 11, 8, 11, 1, -1, 9, 6, 4, 9, 3, 6, 9, 1, 3, 11, 6, 3, -1, -1, -1, -1, 8, 11, 1, 8, 1, 0, 11, 6, 1, 9, 1, 4, 6, 4, 1, -1, 3, 11, 6, 3, 6, 0, 0, 6, 4, -1, -1, -1, -1, -1, -1, -1, 6, 4, 8, 11, 6, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7, 10, 6, 7, 8, 10, 8, 9, 10, -1, -1, -1, -1, -1, -1, -1, 0, 7, 3, 0, 10, 7, 0, 9, 10, 6, 7, 10, -1, -1, -1, -1, 10, 6, 7, 1, 10, 7, 1, 7, 8, 1, 8, 0, -1, -1, -1, -1, 10, 6, 7, 10, 7, 1, 1, 7, 3, -1, -1, -1, -1, -1, -1, -1, 1, 2, 6, 1, 6, 8, 1, 8, 9, 8, 6, 7, -1, -1, -1, -1, 2, 6, 9, 2, 9, 1, 6, 7, 9, 0, 9, 3, 7, 3, 9, -1, 7, 8, 0, 7, 0, 6, 6, 0, 2, -1, -1, -1, -1, -1, -1, -1, 7, 3, 2, 6, 7, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, 3, 11, 10, 6, 8, 10, 8, 9, 8, 6, 7, -1, -1, -1, -1, 2, 0, 7, 2, 7, 11, 0, 9, 7, 6, 7, 10, 9, 10, 7, -1, 1, 8, 0, 1, 7, 8, 1, 10, 7, 6, 7, 10, 2, 3, 11, -1, 11, 2, 1, 11, 1, 7, 10, 6, 1, 6, 7, 1, -1, -1, -1, -1, 8, 9, 6, 8, 6, 7, 9, 1, 6, 11, 6, 3, 1, 3, 6, -1, 0, 9, 1, 11, 6, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7, 8, 0, 7, 0, 6, 3, 11, 0, 11, 6, 0, -1, -1, -1, -1, 7, 11, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 0, 8, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 1, 9, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8, 1, 9, 8, 3, 1, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, 10, 1, 2, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 2, 10, 3, 0, 8, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1, 2, 9, 0, 2, 10, 9, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1, 6, 11, 7, 2, 10, 3, 10, 8, 3, 10, 9, 8, -1, -1, -1, -1, 7, 2, 3, 6, 2, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7, 0, 8, 7, 6, 0, 6, 2, 0, -1, -1, -1, -1, -1, -1, -1, 2, 7, 6, 2, 3, 7, 0, 1, 9, -1, -1, -1, -1, -1, -1, -1, 1, 6, 2, 1, 8, 6, 1, 9, 8, 8, 7, 6, -1, -1, -1, -1, 10, 7, 6, 10, 1, 7, 1, 3, 7, -1, -1, -1, -1, -1, -1, -1, 10, 7, 6, 1, 7, 10, 1, 8, 7, 1, 0, 8, -1, -1, -1, -1, 0, 3, 7, 0, 7, 10, 0, 10, 9, 6, 10, 7, -1, -1, -1, -1, 7, 6, 10, 7, 10, 8, 8, 10, 9, -1, -1, -1, -1, -1, -1, -1, 6, 8, 4, 11, 8, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 6, 11, 3, 0, 6, 0, 4, 6, -1, -1, -1, -1, -1, -1, -1, 8, 6, 11, 8, 4, 6, 9, 0, 1, -1, -1, -1, -1, -1, -1, -1, 9, 4, 6, 9, 6, 3, 9, 3, 1, 11, 3, 6, -1, -1, -1, -1, 6, 8, 4, 6, 11, 8, 2, 10, 1, -1, -1, -1, -1, -1, -1, -1, 1, 2, 10, 3, 0, 11, 0, 6, 11, 0, 4, 6, -1, -1, -1, -1, 4, 11, 8, 4, 6, 11, 0, 2, 9, 2, 10, 9, -1, -1, -1, -1, 10, 9, 3, 10, 3, 2, 9, 4, 3, 11, 3, 6, 4, 6, 3, -1, 8, 2, 3, 8, 4, 2, 4, 6, 2, -1, -1, -1, -1, -1, -1, -1, 0, 4, 2, 4, 6, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 9, 0, 2, 3, 4, 2, 4, 6, 4, 3, 8, -1, -1, -1, -1, 1, 9, 4, 1, 4, 2, 2, 4, 6, -1, -1, -1, -1, -1, -1, -1, 8, 1, 3, 8, 6, 1, 8, 4, 6, 6, 10, 1, -1, -1, -1, -1, 10, 1, 0, 10, 0, 6, 6, 0, 4, -1, -1, -1, -1, -1, -1, -1, 4, 6, 3, 4, 3, 8, 6, 10, 3, 0, 3, 9, 10, 9, 3, -1, 10, 9, 4, 6, 10, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 9, 5, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 8, 3, 4, 9, 5, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, 5, 0, 1, 5, 4, 0, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1, 11, 7, 6, 8, 3, 4, 3, 5, 4, 3, 1, 5, -1, -1, -1, -1, 9, 5, 4, 10, 1, 2, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1, 6, 11, 7, 1, 2, 10, 0, 8, 3, 4, 9, 5, -1, -1, -1, -1, 7, 6, 11, 5, 4, 10, 4, 2, 10, 4, 0, 2, -1, -1, -1, -1, 3, 4, 8, 3, 5, 4, 3, 2, 5, 10, 5, 2, 11, 7, 6, -1, 7, 2, 3, 7, 6, 2, 5, 4, 9, -1, -1, -1, -1, -1, -1, -1, 9, 5, 4, 0, 8, 6, 0, 6, 2, 6, 8, 7, -1, -1, -1, -1, 3, 6, 2, 3, 7, 6, 1, 5, 0, 5, 4, 0, -1, -1, -1, -1, 6, 2, 8, 6, 8, 7, 2, 1, 8, 4, 8, 5, 1, 5, 8, -1, 9, 5, 4, 10, 1, 6, 1, 7, 6, 1, 3, 7, -1, -1, -1, -1, 1, 6, 10, 1, 7, 6, 1, 0, 7, 8, 7, 0, 9, 5, 4, -1, 4, 0, 10, 4, 10, 5, 0, 3, 10, 6, 10, 7, 3, 7, 10, -1, 7, 6, 10, 7, 10, 8, 5, 4, 10, 4, 8, 10, -1, -1, -1, -1, 6, 9, 5, 6, 11, 9, 11, 8, 9, -1, -1, -1, -1, -1, -1, -1, 3, 6, 11, 0, 6, 3, 0, 5, 6, 0, 9, 5, -1, -1, -1, -1, 0, 11, 8, 0, 5, 11, 0, 1, 5, 5, 6, 11, -1, -1, -1, -1, 6, 11, 3, 6, 3, 5, 5, 3, 1, -1, -1, -1, -1, -1, -1, -1, 1, 2, 10, 9, 5, 11, 9, 11, 8, 11, 5, 6, -1, -1, -1, -1, 0, 11, 3, 0, 6, 11, 0, 9, 6, 5, 6, 9, 1, 2, 10, -1, 11, 8, 5, 11, 5, 6, 8, 0, 5, 10, 5, 2, 0, 2, 5, -1, 6, 11, 3, 6, 3, 5, 2, 10, 3, 10, 5, 3, -1, -1, -1, -1, 5, 8, 9, 5, 2, 8, 5, 6, 2, 3, 8, 2, -1, -1, -1, -1, 9, 5, 6, 9, 6, 0, 0, 6, 2, -1, -1, -1, -1, -1, -1, -1, 1, 5, 8, 1, 8, 0, 5, 6, 8, 3, 8, 2, 6, 2, 8, -1, 1, 5, 6, 2, 1, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 3, 6, 1, 6, 10, 3, 8, 6, 5, 6, 9, 8, 9, 6, -1, 10, 1, 0, 10, 0, 6, 9, 5, 0, 5, 6, 0, -1, -1, -1, -1, 0, 3, 8, 5, 6, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 10, 5, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, 5, 10, 7, 5, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, 5, 10, 11, 7, 5, 8, 3, 0, -1, -1, -1, -1, -1, -1, -1, 5, 11, 7, 5, 10, 11, 1, 9, 0, -1, -1, -1, -1, -1, -1, -1, 10, 7, 5, 10, 11, 7, 9, 8, 1, 8, 3, 1, -1, -1, -1, -1, 11, 1, 2, 11, 7, 1, 7, 5, 1, -1, -1, -1, -1, -1, -1, -1, 0, 8, 3, 1, 2, 7, 1, 7, 5, 7, 2, 11, -1, -1, -1, -1, 9, 7, 5, 9, 2, 7, 9, 0, 2, 2, 11, 7, -1, -1, -1, -1, 7, 5, 2, 7, 2, 11, 5, 9, 2, 3, 2, 8, 9, 8, 2, -1, 2, 5, 10, 2, 3, 5, 3, 7, 5, -1, -1, -1, -1, -1, -1, -1, 8, 2, 0, 8, 5, 2, 8, 7, 5, 10, 2, 5, -1, -1, -1, -1, 9, 0, 1, 5, 10, 3, 5, 3, 7, 3, 10, 2, -1, -1, -1, -1, 9, 8, 2, 9, 2, 1, 8, 7, 2, 10, 2, 5, 7, 5, 2, -1, 1, 3, 5, 3, 7, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 8, 7, 0, 7, 1, 1, 7, 5, -1, -1, -1, -1, -1, -1, -1, 9, 0, 3, 9, 3, 5, 5, 3, 7, -1, -1, -1, -1, -1, -1, -1, 9, 8, 7, 5, 9, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, 8, 4, 5, 10, 8, 10, 11, 8, -1, -1, -1, -1, -1, -1, -1, 5, 0, 4, 5, 11, 0, 5, 10, 11, 11, 3, 0, -1, -1, -1, -1, 0, 1, 9, 8, 4, 10, 8, 10, 11, 10, 4, 5, -1, -1, -1, -1, 10, 11, 4, 10, 4, 5, 11, 3, 4, 9, 4, 1, 3, 1, 4, -1, 2, 5, 1, 2, 8, 5, 2, 11, 8, 4, 5, 8, -1, -1, -1, -1, 0, 4, 11, 0, 11, 3, 4, 5, 11, 2, 11, 1, 5, 1, 11, -1, 0, 2, 5, 0, 5, 9, 2, 11, 5, 4, 5, 8, 11, 8, 5, -1, 9, 4, 5, 2, 11, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, 5, 10, 3, 5, 2, 3, 4, 5, 3, 8, 4, -1, -1, -1, -1, 5, 10, 2, 5, 2, 4, 4, 2, 0, -1, -1, -1, -1, -1, -1, -1, 3, 10, 2, 3, 5, 10, 3, 8, 5, 4, 5, 8, 0, 1, 9, -1, 5, 10, 2, 5, 2, 4, 1, 9, 2, 9, 4, 2, -1, -1, -1, -1, 8, 4, 5, 8, 5, 3, 3, 5, 1, -1, -1, -1, -1, -1, -1, -1, 0, 4, 5, 1, 0, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8, 4, 5, 8, 5, 3, 9, 0, 5, 0, 3, 5, -1, -1, -1, -1, 9, 4, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 11, 7, 4, 9, 11, 9, 10, 11, -1, -1, -1, -1, -1, -1, -1, 0, 8, 3, 4, 9, 7, 9, 11, 7, 9, 10, 11, -1, -1, -1, -1, 1, 10, 11, 1, 11, 4, 1, 4, 0, 7, 4, 11, -1, -1, -1, -1, 3, 1, 4, 3, 4, 8, 1, 10, 4, 7, 4, 11, 10, 11, 4, -1, 4, 11, 7, 9, 11, 4, 9, 2, 11, 9, 1, 2, -1, -1, -1, -1, 9, 7, 4, 9, 11, 7, 9, 1, 11, 2, 11, 1, 0, 8, 3, -1, 11, 7, 4, 11, 4, 2, 2, 4, 0, -1, -1, -1, -1, -1, -1, -1, 11, 7, 4, 11, 4, 2, 8, 3, 4, 3, 2, 4, -1, -1, -1, -1, 2, 9, 10, 2, 7, 9, 2, 3, 7, 7, 4, 9, -1, -1, -1, -1, 9, 10, 7, 9, 7, 4, 10, 2, 7, 8, 7, 0, 2, 0, 7, -1, 3, 7, 10, 3, 10, 2, 7, 4, 10, 1, 10, 0, 4, 0, 10, -1, 1, 10, 2, 8, 7, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 9, 1, 4, 1, 7, 7, 1, 3, -1, -1, -1, -1, -1, -1, -1, 4, 9, 1, 4, 1, 7, 0, 8, 1, 8, 7, 1, -1, -1, -1, -1, 4, 0, 3, 7, 4, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 8, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, 10, 8, 10, 11, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 0, 9, 3, 9, 11, 11, 9, 10, -1, -1, -1, -1, -1, -1, -1, 0, 1, 10, 0, 10, 8, 8, 10, 11, -1, -1, -1, -1, -1, -1, -1, 3, 1, 10, 11, 3, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 2, 11, 1, 11, 9, 9, 11, 8, -1, -1, -1, -1, -1, -1, -1, 3, 0, 9, 3, 9, 11, 1, 2, 9, 2, 11, 9, -1, -1, -1, -1, 0, 2, 11, 8, 0, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 2, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, 3, 8, 2, 8, 10, 10, 8, 9, -1, -1, -1, -1, -1, -1, -1, 9, 10, 2, 0, 9, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, 3, 8, 2, 8, 10, 0, 1, 8, 1, 10, 8, -1, -1, -1, -1, 1, 10, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 3, 8, 9, 1, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 9, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 3, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]);\nexport { MarchingCubes, edgeTable, triTable };","map":{"version":3,"sources":["/Users/theodaguier/Repositories/E-Do-Studio/node_modules/three-stdlib/objects/MarchingCubes.js"],"names":["Mesh","BufferGeometry","BufferAttribute","DynamicDrawUsage","Sphere","Vector3","Color","MarchingCubes","constructor","resolution","material","enableUvs","enableColors","maxPolyCount","geometry","isMarchingCubes","scope","vlist","Float32Array","nlist","clist","init","resolution2","isolation","size","size2","size3","halfsize","delta","yd","zd","field","normal_cache","palette","count","maxVertexCount","positionArray","positionAttribute","setUsage","setAttribute","normalArray","normalAttribute","uvArray","uvAttribute","colorArray","colorAttribute","boundingSphere","lerp","a","b","t","VIntX","q","offset","isol","x","y","z","valp1","valp2","c_offset1","c_offset2","mu","nc","VIntY","q2","VIntZ","compNorm","q3","polygonize","fx","fy","fz","q1","qy","qz","q1y","q1z","qyz","q1yz","cubeindex","field0","field1","field2","field3","field4","field5","field6","field7","bits","edgeTable","d","fx2","fy2","fz2","o1","o2","o3","numtris","i","triTable","posnormtriv","pos","norm","colors","c","flatShading","nx","ny","nz","addBall","ballx","bally","ballz","strength","subtract","sign","Math","abs","userDefineColor","ballColor","Array","isArray","min","err","radius","sqrt","zs","ys","xs","min_z","floor","max_z","min_y","max_y","min_x","max_x","y_offset","z_offset","val","ratio","contrib","r","g","addPlaneX","xx","xdiv","cxy","dist","addPlaneY","yy","ydiv","cy","addPlaneZ","zz","zdiv","cz","cyz","setCell","value","index","getCell","blur","intensity","fieldCopy","slice","x2","x3","y2","y3","z2","z3","index2","val2","reset","update","smin2","setDrawRange","getAttribute","needsUpdate","console","warn","Int32Array"],"mappings":"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","sourcesContent":["import { Mesh, BufferGeometry, BufferAttribute, DynamicDrawUsage, Sphere, Vector3, Color } from \"three\";\nclass MarchingCubes extends Mesh {\n  constructor(resolution, material, enableUvs = false, enableColors = false, maxPolyCount = 1e4) {\n    const geometry = new BufferGeometry();\n    super(geometry, material);\n    this.isMarchingCubes = true;\n    const scope = this;\n    const vlist = new Float32Array(12 * 3);\n    const nlist = new Float32Array(12 * 3);\n    const clist = new Float32Array(12 * 3);\n    this.enableUvs = enableUvs;\n    this.enableColors = enableColors;\n    this.init = function(resolution2) {\n      this.resolution = resolution2;\n      this.isolation = 80;\n      this.size = resolution2;\n      this.size2 = this.size * this.size;\n      this.size3 = this.size2 * this.size;\n      this.halfsize = this.size / 2;\n      this.delta = 2 / this.size;\n      this.yd = this.size;\n      this.zd = this.size2;\n      this.field = new Float32Array(this.size3);\n      this.normal_cache = new Float32Array(this.size3 * 3);\n      this.palette = new Float32Array(this.size3 * 3);\n      this.count = 0;\n      const maxVertexCount = maxPolyCount * 3;\n      this.positionArray = new Float32Array(maxVertexCount * 3);\n      const positionAttribute = new BufferAttribute(this.positionArray, 3);\n      positionAttribute.setUsage(DynamicDrawUsage);\n      geometry.setAttribute(\"position\", positionAttribute);\n      this.normalArray = new Float32Array(maxVertexCount * 3);\n      const normalAttribute = new BufferAttribute(this.normalArray, 3);\n      normalAttribute.setUsage(DynamicDrawUsage);\n      geometry.setAttribute(\"normal\", normalAttribute);\n      if (this.enableUvs) {\n        this.uvArray = new Float32Array(maxVertexCount * 2);\n        const uvAttribute = new BufferAttribute(this.uvArray, 2);\n        uvAttribute.setUsage(DynamicDrawUsage);\n        geometry.setAttribute(\"uv\", uvAttribute);\n      }\n      if (this.enableColors) {\n        this.colorArray = new Float32Array(maxVertexCount * 3);\n        const colorAttribute = new BufferAttribute(this.colorArray, 3);\n        colorAttribute.setUsage(DynamicDrawUsage);\n        geometry.setAttribute(\"color\", colorAttribute);\n      }\n      geometry.boundingSphere = new Sphere(new Vector3(), 1);\n    };\n    function lerp(a, b, t) {\n      return a + (b - a) * t;\n    }\n    function VIntX(q, offset, isol, x, y, z, valp1, valp2, c_offset1, c_offset2) {\n      const mu = (isol - valp1) / (valp2 - valp1), nc = scope.normal_cache;\n      vlist[offset + 0] = x + mu * scope.delta;\n      vlist[offset + 1] = y;\n      vlist[offset + 2] = z;\n      nlist[offset + 0] = lerp(nc[q + 0], nc[q + 3], mu);\n      nlist[offset + 1] = lerp(nc[q + 1], nc[q + 4], mu);\n      nlist[offset + 2] = lerp(nc[q + 2], nc[q + 5], mu);\n      clist[offset + 0] = lerp(scope.palette[c_offset1 * 3 + 0], scope.palette[c_offset2 * 3 + 0], mu);\n      clist[offset + 1] = lerp(scope.palette[c_offset1 * 3 + 1], scope.palette[c_offset2 * 3 + 1], mu);\n      clist[offset + 2] = lerp(scope.palette[c_offset1 * 3 + 2], scope.palette[c_offset2 * 3 + 2], mu);\n    }\n    function VIntY(q, offset, isol, x, y, z, valp1, valp2, c_offset1, c_offset2) {\n      const mu = (isol - valp1) / (valp2 - valp1), nc = scope.normal_cache;\n      vlist[offset + 0] = x;\n      vlist[offset + 1] = y + mu * scope.delta;\n      vlist[offset + 2] = z;\n      const q2 = q + scope.yd * 3;\n      nlist[offset + 0] = lerp(nc[q + 0], nc[q2 + 0], mu);\n      nlist[offset + 1] = lerp(nc[q + 1], nc[q2 + 1], mu);\n      nlist[offset + 2] = lerp(nc[q + 2], nc[q2 + 2], mu);\n      clist[offset + 0] = lerp(scope.palette[c_offset1 * 3 + 0], scope.palette[c_offset2 * 3 + 0], mu);\n      clist[offset + 1] = lerp(scope.palette[c_offset1 * 3 + 1], scope.palette[c_offset2 * 3 + 1], mu);\n      clist[offset + 2] = lerp(scope.palette[c_offset1 * 3 + 2], scope.palette[c_offset2 * 3 + 2], mu);\n    }\n    function VIntZ(q, offset, isol, x, y, z, valp1, valp2, c_offset1, c_offset2) {\n      const mu = (isol - valp1) / (valp2 - valp1), nc = scope.normal_cache;\n      vlist[offset + 0] = x;\n      vlist[offset + 1] = y;\n      vlist[offset + 2] = z + mu * scope.delta;\n      const q2 = q + scope.zd * 3;\n      nlist[offset + 0] = lerp(nc[q + 0], nc[q2 + 0], mu);\n      nlist[offset + 1] = lerp(nc[q + 1], nc[q2 + 1], mu);\n      nlist[offset + 2] = lerp(nc[q + 2], nc[q2 + 2], mu);\n      clist[offset + 0] = lerp(scope.palette[c_offset1 * 3 + 0], scope.palette[c_offset2 * 3 + 0], mu);\n      clist[offset + 1] = lerp(scope.palette[c_offset1 * 3 + 1], scope.palette[c_offset2 * 3 + 1], mu);\n      clist[offset + 2] = lerp(scope.palette[c_offset1 * 3 + 2], scope.palette[c_offset2 * 3 + 2], mu);\n    }\n    function compNorm(q) {\n      const q3 = q * 3;\n      if (scope.normal_cache[q3] === 0) {\n        scope.normal_cache[q3 + 0] = scope.field[q - 1] - scope.field[q + 1];\n        scope.normal_cache[q3 + 1] = scope.field[q - scope.yd] - scope.field[q + scope.yd];\n        scope.normal_cache[q3 + 2] = scope.field[q - scope.zd] - scope.field[q + scope.zd];\n      }\n    }\n    function polygonize(fx, fy, fz, q, isol) {\n      const q1 = q + 1, qy = q + scope.yd, qz = q + scope.zd, q1y = q1 + scope.yd, q1z = q1 + scope.zd, qyz = q + scope.yd + scope.zd, q1yz = q1 + scope.yd + scope.zd;\n      let cubeindex = 0;\n      const field0 = scope.field[q], field1 = scope.field[q1], field2 = scope.field[qy], field3 = scope.field[q1y], field4 = scope.field[qz], field5 = scope.field[q1z], field6 = scope.field[qyz], field7 = scope.field[q1yz];\n      if (field0 < isol)\n        cubeindex |= 1;\n      if (field1 < isol)\n        cubeindex |= 2;\n      if (field2 < isol)\n        cubeindex |= 8;\n      if (field3 < isol)\n        cubeindex |= 4;\n      if (field4 < isol)\n        cubeindex |= 16;\n      if (field5 < isol)\n        cubeindex |= 32;\n      if (field6 < isol)\n        cubeindex |= 128;\n      if (field7 < isol)\n        cubeindex |= 64;\n      const bits = edgeTable[cubeindex];\n      if (bits === 0)\n        return 0;\n      const d = scope.delta, fx2 = fx + d, fy2 = fy + d, fz2 = fz + d;\n      if (bits & 1) {\n        compNorm(q);\n        compNorm(q1);\n        VIntX(q * 3, 0, isol, fx, fy, fz, field0, field1, q, q1);\n      }\n      if (bits & 2) {\n        compNorm(q1);\n        compNorm(q1y);\n        VIntY(q1 * 3, 3, isol, fx2, fy, fz, field1, field3, q1, q1y);\n      }\n      if (bits & 4) {\n        compNorm(qy);\n        compNorm(q1y);\n        VIntX(qy * 3, 6, isol, fx, fy2, fz, field2, field3, qy, q1y);\n      }\n      if (bits & 8) {\n        compNorm(q);\n        compNorm(qy);\n        VIntY(q * 3, 9, isol, fx, fy, fz, field0, field2, q, qy);\n      }\n      if (bits & 16) {\n        compNorm(qz);\n        compNorm(q1z);\n        VIntX(qz * 3, 12, isol, fx, fy, fz2, field4, field5, qz, q1z);\n      }\n      if (bits & 32) {\n        compNorm(q1z);\n        compNorm(q1yz);\n        VIntY(q1z * 3, 15, isol, fx2, fy, fz2, field5, field7, q1z, q1yz);\n      }\n      if (bits & 64) {\n        compNorm(qyz);\n        compNorm(q1yz);\n        VIntX(qyz * 3, 18, isol, fx, fy2, fz2, field6, field7, qyz, q1yz);\n      }\n      if (bits & 128) {\n        compNorm(qz);\n        compNorm(qyz);\n        VIntY(qz * 3, 21, isol, fx, fy, fz2, field4, field6, qz, qyz);\n      }\n      if (bits & 256) {\n        compNorm(q);\n        compNorm(qz);\n        VIntZ(q * 3, 24, isol, fx, fy, fz, field0, field4, q, qz);\n      }\n      if (bits & 512) {\n        compNorm(q1);\n        compNorm(q1z);\n        VIntZ(q1 * 3, 27, isol, fx2, fy, fz, field1, field5, q1, q1z);\n      }\n      if (bits & 1024) {\n        compNorm(q1y);\n        compNorm(q1yz);\n        VIntZ(q1y * 3, 30, isol, fx2, fy2, fz, field3, field7, q1y, q1yz);\n      }\n      if (bits & 2048) {\n        compNorm(qy);\n        compNorm(qyz);\n        VIntZ(qy * 3, 33, isol, fx, fy2, fz, field2, field6, qy, qyz);\n      }\n      cubeindex <<= 4;\n      let o1, o2, o3, numtris = 0, i = 0;\n      while (triTable[cubeindex + i] != -1) {\n        o1 = cubeindex + i;\n        o2 = o1 + 1;\n        o3 = o1 + 2;\n        posnormtriv(vlist, nlist, clist, 3 * triTable[o1], 3 * triTable[o2], 3 * triTable[o3]);\n        i += 3;\n        numtris++;\n      }\n      return numtris;\n    }\n    function posnormtriv(pos, norm, colors, o1, o2, o3) {\n      const c = scope.count * 3;\n      scope.positionArray[c + 0] = pos[o1];\n      scope.positionArray[c + 1] = pos[o1 + 1];\n      scope.positionArray[c + 2] = pos[o1 + 2];\n      scope.positionArray[c + 3] = pos[o2];\n      scope.positionArray[c + 4] = pos[o2 + 1];\n      scope.positionArray[c + 5] = pos[o2 + 2];\n      scope.positionArray[c + 6] = pos[o3];\n      scope.positionArray[c + 7] = pos[o3 + 1];\n      scope.positionArray[c + 8] = pos[o3 + 2];\n      if (scope.material.flatShading === true) {\n        const nx = (norm[o1 + 0] + norm[o2 + 0] + norm[o3 + 0]) / 3;\n        const ny = (norm[o1 + 1] + norm[o2 + 1] + norm[o3 + 1]) / 3;\n        const nz = (norm[o1 + 2] + norm[o2 + 2] + norm[o3 + 2]) / 3;\n        scope.normalArray[c + 0] = nx;\n        scope.normalArray[c + 1] = ny;\n        scope.normalArray[c + 2] = nz;\n        scope.normalArray[c + 3] = nx;\n        scope.normalArray[c + 4] = ny;\n        scope.normalArray[c + 5] = nz;\n        scope.normalArray[c + 6] = nx;\n        scope.normalArray[c + 7] = ny;\n        scope.normalArray[c + 8] = nz;\n      } else {\n        scope.normalArray[c + 0] = norm[o1 + 0];\n        scope.normalArray[c + 1] = norm[o1 + 1];\n        scope.normalArray[c + 2] = norm[o1 + 2];\n        scope.normalArray[c + 3] = norm[o2 + 0];\n        scope.normalArray[c + 4] = norm[o2 + 1];\n        scope.normalArray[c + 5] = norm[o2 + 2];\n        scope.normalArray[c + 6] = norm[o3 + 0];\n        scope.normalArray[c + 7] = norm[o3 + 1];\n        scope.normalArray[c + 8] = norm[o3 + 2];\n      }\n      if (scope.enableUvs) {\n        const d = scope.count * 2;\n        scope.uvArray[d + 0] = pos[o1 + 0];\n        scope.uvArray[d + 1] = pos[o1 + 2];\n        scope.uvArray[d + 2] = pos[o2 + 0];\n        scope.uvArray[d + 3] = pos[o2 + 2];\n        scope.uvArray[d + 4] = pos[o3 + 0];\n        scope.uvArray[d + 5] = pos[o3 + 2];\n      }\n      if (scope.enableColors) {\n        scope.colorArray[c + 0] = colors[o1 + 0];\n        scope.colorArray[c + 1] = colors[o1 + 1];\n        scope.colorArray[c + 2] = colors[o1 + 2];\n        scope.colorArray[c + 3] = colors[o2 + 0];\n        scope.colorArray[c + 4] = colors[o2 + 1];\n        scope.colorArray[c + 5] = colors[o2 + 2];\n        scope.colorArray[c + 6] = colors[o3 + 0];\n        scope.colorArray[c + 7] = colors[o3 + 1];\n        scope.colorArray[c + 8] = colors[o3 + 2];\n      }\n      scope.count += 3;\n    }\n    this.addBall = function(ballx, bally, ballz, strength, subtract, colors) {\n      const sign = Math.sign(strength);\n      strength = Math.abs(strength);\n      const userDefineColor = !(colors === void 0 || colors === null);\n      let ballColor = new Color(ballx, bally, ballz);\n      if (userDefineColor) {\n        try {\n          ballColor = colors instanceof Color ? colors : Array.isArray(colors) ? new Color(\n            Math.min(Math.abs(colors[0]), 1),\n            Math.min(Math.abs(colors[1]), 1),\n            Math.min(Math.abs(colors[2]), 1)\n          ) : new Color(colors);\n        } catch (err) {\n          ballColor = new Color(ballx, bally, ballz);\n        }\n      }\n      const radius = this.size * Math.sqrt(strength / subtract), zs = ballz * this.size, ys = bally * this.size, xs = ballx * this.size;\n      let min_z = Math.floor(zs - radius);\n      if (min_z < 1)\n        min_z = 1;\n      let max_z = Math.floor(zs + radius);\n      if (max_z > this.size - 1)\n        max_z = this.size - 1;\n      let min_y = Math.floor(ys - radius);\n      if (min_y < 1)\n        min_y = 1;\n      let max_y = Math.floor(ys + radius);\n      if (max_y > this.size - 1)\n        max_y = this.size - 1;\n      let min_x = Math.floor(xs - radius);\n      if (min_x < 1)\n        min_x = 1;\n      let max_x = Math.floor(xs + radius);\n      if (max_x > this.size - 1)\n        max_x = this.size - 1;\n      let x, y, z, y_offset, z_offset, fx, fy, fz, fz2, fy2, val;\n      for (z = min_z; z < max_z; z++) {\n        z_offset = this.size2 * z;\n        fz = z / this.size - ballz;\n        fz2 = fz * fz;\n        for (y = min_y; y < max_y; y++) {\n          y_offset = z_offset + this.size * y;\n          fy = y / this.size - bally;\n          fy2 = fy * fy;\n          for (x = min_x; x < max_x; x++) {\n            fx = x / this.size - ballx;\n            val = strength / (1e-6 + fx * fx + fy2 + fz2) - subtract;\n            if (val > 0) {\n              this.field[y_offset + x] += val * sign;\n              const ratio = Math.sqrt((x - xs) * (x - xs) + (y - ys) * (y - ys) + (z - zs) * (z - zs)) / radius;\n              const contrib = 1 - ratio * ratio * ratio * (ratio * (ratio * 6 - 15) + 10);\n              this.palette[(y_offset + x) * 3 + 0] += ballColor.r * contrib;\n              this.palette[(y_offset + x) * 3 + 1] += ballColor.g * contrib;\n              this.palette[(y_offset + x) * 3 + 2] += ballColor.b * contrib;\n            }\n          }\n        }\n      }\n    };\n    this.addPlaneX = function(strength, subtract) {\n      const size = this.size, yd = this.yd, zd = this.zd, field = this.field;\n      let x, y, z, xx, val, xdiv, cxy, dist = size * Math.sqrt(strength / subtract);\n      if (dist > size)\n        dist = size;\n      for (x = 0; x < dist; x++) {\n        xdiv = x / size;\n        xx = xdiv * xdiv;\n        val = strength / (1e-4 + xx) - subtract;\n        if (val > 0) {\n          for (y = 0; y < size; y++) {\n            cxy = x + y * yd;\n            for (z = 0; z < size; z++) {\n              field[zd * z + cxy] += val;\n            }\n          }\n        }\n      }\n    };\n    this.addPlaneY = function(strength, subtract) {\n      const size = this.size, yd = this.yd, zd = this.zd, field = this.field;\n      let x, y, z, yy, val, ydiv, cy, cxy, dist = size * Math.sqrt(strength / subtract);\n      if (dist > size)\n        dist = size;\n      for (y = 0; y < dist; y++) {\n        ydiv = y / size;\n        yy = ydiv * ydiv;\n        val = strength / (1e-4 + yy) - subtract;\n        if (val > 0) {\n          cy = y * yd;\n          for (x = 0; x < size; x++) {\n            cxy = cy + x;\n            for (z = 0; z < size; z++)\n              field[zd * z + cxy] += val;\n          }\n        }\n      }\n    };\n    this.addPlaneZ = function(strength, subtract) {\n      const size = this.size, yd = this.yd, zd = this.zd, field = this.field;\n      let x, y, z, zz, val, zdiv, cz, cyz, dist = size * Math.sqrt(strength / subtract);\n      if (dist > size)\n        dist = size;\n      for (z = 0; z < dist; z++) {\n        zdiv = z / size;\n        zz = zdiv * zdiv;\n        val = strength / (1e-4 + zz) - subtract;\n        if (val > 0) {\n          cz = zd * z;\n          for (y = 0; y < size; y++) {\n            cyz = cz + y * yd;\n            for (x = 0; x < size; x++)\n              field[cyz + x] += val;\n          }\n        }\n      }\n    };\n    this.setCell = function(x, y, z, value) {\n      const index = this.size2 * z + this.size * y + x;\n      this.field[index] = value;\n    };\n    this.getCell = function(x, y, z) {\n      const index = this.size2 * z + this.size * y + x;\n      return this.field[index];\n    };\n    this.blur = function(intensity = 1) {\n      const field = this.field;\n      const fieldCopy = field.slice();\n      const size = this.size;\n      const size2 = this.size2;\n      for (let x = 0; x < size; x++) {\n        for (let y = 0; y < size; y++) {\n          for (let z = 0; z < size; z++) {\n            const index = size2 * z + size * y + x;\n            let val = fieldCopy[index];\n            let count = 1;\n            for (let x2 = -1; x2 <= 1; x2 += 2) {\n              const x3 = x2 + x;\n              if (x3 < 0 || x3 >= size)\n                continue;\n              for (let y2 = -1; y2 <= 1; y2 += 2) {\n                const y3 = y2 + y;\n                if (y3 < 0 || y3 >= size)\n                  continue;\n                for (let z2 = -1; z2 <= 1; z2 += 2) {\n                  const z3 = z2 + z;\n                  if (z3 < 0 || z3 >= size)\n                    continue;\n                  const index2 = size2 * z3 + size * y3 + x3;\n                  const val2 = fieldCopy[index2];\n                  count++;\n                  val += intensity * (val2 - val) / count;\n                }\n              }\n            }\n            field[index] = val;\n          }\n        }\n      }\n    };\n    this.reset = function() {\n      for (let i = 0; i < this.size3; i++) {\n        this.normal_cache[i * 3] = 0;\n        this.field[i] = 0;\n        this.palette[i * 3] = this.palette[i * 3 + 1] = this.palette[i * 3 + 2] = 0;\n      }\n    };\n    this.update = function() {\n      this.count = 0;\n      const smin2 = this.size - 2;\n      for (let z = 1; z < smin2; z++) {\n        const z_offset = this.size2 * z;\n        const fz = (z - this.halfsize) / this.halfsize;\n        for (let y = 1; y < smin2; y++) {\n          const y_offset = z_offset + this.size * y;\n          const fy = (y - this.halfsize) / this.halfsize;\n          for (let x = 1; x < smin2; x++) {\n            const fx = (x - this.halfsize) / this.halfsize;\n            const q = y_offset + x;\n            polygonize(fx, fy, fz, q, this.isolation);\n          }\n        }\n      }\n      this.geometry.setDrawRange(0, this.count);\n      geometry.getAttribute(\"position\").needsUpdate = true;\n      geometry.getAttribute(\"normal\").needsUpdate = true;\n      if (this.enableUvs)\n        geometry.getAttribute(\"uv\").needsUpdate = true;\n      if (this.enableColors)\n        geometry.getAttribute(\"color\").needsUpdate = true;\n      if (this.count / 3 > maxPolyCount)\n        console.warn(\n          \"THREE.MarchingCubes: Geometry buffers too small for rendering. Please create an instance with a higher poly count.\"\n        );\n    };\n    this.init(resolution);\n  }\n}\nconst edgeTable = new Int32Array([\n  0,\n  265,\n  515,\n  778,\n  1030,\n  1295,\n  1541,\n  1804,\n  2060,\n  2309,\n  2575,\n  2822,\n  3082,\n  3331,\n  3593,\n  3840,\n  400,\n  153,\n  915,\n  666,\n  1430,\n  1183,\n  1941,\n  1692,\n  2460,\n  2197,\n  2975,\n  2710,\n  3482,\n  3219,\n  3993,\n  3728,\n  560,\n  825,\n  51,\n  314,\n  1590,\n  1855,\n  1077,\n  1340,\n  2620,\n  2869,\n  2111,\n  2358,\n  3642,\n  3891,\n  3129,\n  3376,\n  928,\n  681,\n  419,\n  170,\n  1958,\n  1711,\n  1445,\n  1196,\n  2988,\n  2725,\n  2479,\n  2214,\n  4010,\n  3747,\n  3497,\n  3232,\n  1120,\n  1385,\n  1635,\n  1898,\n  102,\n  367,\n  613,\n  876,\n  3180,\n  3429,\n  3695,\n  3942,\n  2154,\n  2403,\n  2665,\n  2912,\n  1520,\n  1273,\n  2035,\n  1786,\n  502,\n  255,\n  1013,\n  764,\n  3580,\n  3317,\n  4095,\n  3830,\n  2554,\n  2291,\n  3065,\n  2800,\n  1616,\n  1881,\n  1107,\n  1370,\n  598,\n  863,\n  85,\n  348,\n  3676,\n  3925,\n  3167,\n  3414,\n  2650,\n  2899,\n  2137,\n  2384,\n  1984,\n  1737,\n  1475,\n  1226,\n  966,\n  719,\n  453,\n  204,\n  4044,\n  3781,\n  3535,\n  3270,\n  3018,\n  2755,\n  2505,\n  2240,\n  2240,\n  2505,\n  2755,\n  3018,\n  3270,\n  3535,\n  3781,\n  4044,\n  204,\n  453,\n  719,\n  966,\n  1226,\n  1475,\n  1737,\n  1984,\n  2384,\n  2137,\n  2899,\n  2650,\n  3414,\n  3167,\n  3925,\n  3676,\n  348,\n  85,\n  863,\n  598,\n  1370,\n  1107,\n  1881,\n  1616,\n  2800,\n  3065,\n  2291,\n  2554,\n  3830,\n  4095,\n  3317,\n  3580,\n  764,\n  1013,\n  255,\n  502,\n  1786,\n  2035,\n  1273,\n  1520,\n  2912,\n  2665,\n  2403,\n  2154,\n  3942,\n  3695,\n  3429,\n  3180,\n  876,\n  613,\n  367,\n  102,\n  1898,\n  1635,\n  1385,\n  1120,\n  3232,\n  3497,\n  3747,\n  4010,\n  2214,\n  2479,\n  2725,\n  2988,\n  1196,\n  1445,\n  1711,\n  1958,\n  170,\n  419,\n  681,\n  928,\n  3376,\n  3129,\n  3891,\n  3642,\n  2358,\n  2111,\n  2869,\n  2620,\n  1340,\n  1077,\n  1855,\n  1590,\n  314,\n  51,\n  825,\n  560,\n  3728,\n  3993,\n  3219,\n  3482,\n  2710,\n  2975,\n  2197,\n  2460,\n  1692,\n  1941,\n  1183,\n  1430,\n  666,\n  915,\n  153,\n  400,\n  3840,\n  3593,\n  3331,\n  3082,\n  2822,\n  2575,\n  2309,\n  2060,\n  1804,\n  1541,\n  1295,\n  1030,\n  778,\n  515,\n  265,\n  0\n]);\nconst triTable = new Int32Array([\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  8,\n  3,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  1,\n  9,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  8,\n  3,\n  9,\n  8,\n  1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  2,\n  10,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  8,\n  3,\n  1,\n  2,\n  10,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  2,\n  10,\n  0,\n  2,\n  9,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  2,\n  8,\n  3,\n  2,\n  10,\n  8,\n  10,\n  9,\n  8,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  3,\n  11,\n  2,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  11,\n  2,\n  8,\n  11,\n  0,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  9,\n  0,\n  2,\n  3,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  11,\n  2,\n  1,\n  9,\n  11,\n  9,\n  8,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  3,\n  10,\n  1,\n  11,\n  10,\n  3,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  10,\n  1,\n  0,\n  8,\n  10,\n  8,\n  11,\n  10,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  3,\n  9,\n  0,\n  3,\n  11,\n  9,\n  11,\n  10,\n  9,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  8,\n  10,\n  10,\n  8,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  4,\n  7,\n  8,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  4,\n  3,\n  0,\n  7,\n  3,\n  4,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  1,\n  9,\n  8,\n  4,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  4,\n  1,\n  9,\n  4,\n  7,\n  1,\n  7,\n  3,\n  1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  2,\n  10,\n  8,\n  4,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  3,\n  4,\n  7,\n  3,\n  0,\n  4,\n  1,\n  2,\n  10,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  2,\n  10,\n  9,\n  0,\n  2,\n  8,\n  4,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  2,\n  10,\n  9,\n  2,\n  9,\n  7,\n  2,\n  7,\n  3,\n  7,\n  9,\n  4,\n  -1,\n  -1,\n  -1,\n  -1,\n  8,\n  4,\n  7,\n  3,\n  11,\n  2,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  11,\n  4,\n  7,\n  11,\n  2,\n  4,\n  2,\n  0,\n  4,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  0,\n  1,\n  8,\n  4,\n  7,\n  2,\n  3,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  4,\n  7,\n  11,\n  9,\n  4,\n  11,\n  9,\n  11,\n  2,\n  9,\n  2,\n  1,\n  -1,\n  -1,\n  -1,\n  -1,\n  3,\n  10,\n  1,\n  3,\n  11,\n  10,\n  7,\n  8,\n  4,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  11,\n  10,\n  1,\n  4,\n  11,\n  1,\n  0,\n  4,\n  7,\n  11,\n  4,\n  -1,\n  -1,\n  -1,\n  -1,\n  4,\n  7,\n  8,\n  9,\n  0,\n  11,\n  9,\n  11,\n  10,\n  11,\n  0,\n  3,\n  -1,\n  -1,\n  -1,\n  -1,\n  4,\n  7,\n  11,\n  4,\n  11,\n  9,\n  9,\n  11,\n  10,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  5,\n  4,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  5,\n  4,\n  0,\n  8,\n  3,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  5,\n  4,\n  1,\n  5,\n  0,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  8,\n  5,\n  4,\n  8,\n  3,\n  5,\n  3,\n  1,\n  5,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  2,\n  10,\n  9,\n  5,\n  4,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  3,\n  0,\n  8,\n  1,\n  2,\n  10,\n  4,\n  9,\n  5,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  5,\n  2,\n  10,\n  5,\n  4,\n  2,\n  4,\n  0,\n  2,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  2,\n  10,\n  5,\n  3,\n  2,\n  5,\n  3,\n  5,\n  4,\n  3,\n  4,\n  8,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  5,\n  4,\n  2,\n  3,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  11,\n  2,\n  0,\n  8,\n  11,\n  4,\n  9,\n  5,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  5,\n  4,\n  0,\n  1,\n  5,\n  2,\n  3,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  2,\n  1,\n  5,\n  2,\n  5,\n  8,\n  2,\n  8,\n  11,\n  4,\n  8,\n  5,\n  -1,\n  -1,\n  -1,\n  -1,\n  10,\n  3,\n  11,\n  10,\n  1,\n  3,\n  9,\n  5,\n  4,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  4,\n  9,\n  5,\n  0,\n  8,\n  1,\n  8,\n  10,\n  1,\n  8,\n  11,\n  10,\n  -1,\n  -1,\n  -1,\n  -1,\n  5,\n  4,\n  0,\n  5,\n  0,\n  11,\n  5,\n  11,\n  10,\n  11,\n  0,\n  3,\n  -1,\n  -1,\n  -1,\n  -1,\n  5,\n  4,\n  8,\n  5,\n  8,\n  10,\n  10,\n  8,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  7,\n  8,\n  5,\n  7,\n  9,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  3,\n  0,\n  9,\n  5,\n  3,\n  5,\n  7,\n  3,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  7,\n  8,\n  0,\n  1,\n  7,\n  1,\n  5,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  5,\n  3,\n  3,\n  5,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  7,\n  8,\n  9,\n  5,\n  7,\n  10,\n  1,\n  2,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  10,\n  1,\n  2,\n  9,\n  5,\n  0,\n  5,\n  3,\n  0,\n  5,\n  7,\n  3,\n  -1,\n  -1,\n  -1,\n  -1,\n  8,\n  0,\n  2,\n  8,\n  2,\n  5,\n  8,\n  5,\n  7,\n  10,\n  5,\n  2,\n  -1,\n  -1,\n  -1,\n  -1,\n  2,\n  10,\n  5,\n  2,\n  5,\n  3,\n  3,\n  5,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  7,\n  9,\n  5,\n  7,\n  8,\n  9,\n  3,\n  11,\n  2,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  5,\n  7,\n  9,\n  7,\n  2,\n  9,\n  2,\n  0,\n  2,\n  7,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  2,\n  3,\n  11,\n  0,\n  1,\n  8,\n  1,\n  7,\n  8,\n  1,\n  5,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  11,\n  2,\n  1,\n  11,\n  1,\n  7,\n  7,\n  1,\n  5,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  5,\n  8,\n  8,\n  5,\n  7,\n  10,\n  1,\n  3,\n  10,\n  3,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  5,\n  7,\n  0,\n  5,\n  0,\n  9,\n  7,\n  11,\n  0,\n  1,\n  0,\n  10,\n  11,\n  10,\n  0,\n  -1,\n  11,\n  10,\n  0,\n  11,\n  0,\n  3,\n  10,\n  5,\n  0,\n  8,\n  0,\n  7,\n  5,\n  7,\n  0,\n  -1,\n  11,\n  10,\n  5,\n  7,\n  11,\n  5,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  10,\n  6,\n  5,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  8,\n  3,\n  5,\n  10,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  0,\n  1,\n  5,\n  10,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  8,\n  3,\n  1,\n  9,\n  8,\n  5,\n  10,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  6,\n  5,\n  2,\n  6,\n  1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  6,\n  5,\n  1,\n  2,\n  6,\n  3,\n  0,\n  8,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  6,\n  5,\n  9,\n  0,\n  6,\n  0,\n  2,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  5,\n  9,\n  8,\n  5,\n  8,\n  2,\n  5,\n  2,\n  6,\n  3,\n  2,\n  8,\n  -1,\n  -1,\n  -1,\n  -1,\n  2,\n  3,\n  11,\n  10,\n  6,\n  5,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  11,\n  0,\n  8,\n  11,\n  2,\n  0,\n  10,\n  6,\n  5,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  1,\n  9,\n  2,\n  3,\n  11,\n  5,\n  10,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  5,\n  10,\n  6,\n  1,\n  9,\n  2,\n  9,\n  11,\n  2,\n  9,\n  8,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  6,\n  3,\n  11,\n  6,\n  5,\n  3,\n  5,\n  1,\n  3,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  8,\n  11,\n  0,\n  11,\n  5,\n  0,\n  5,\n  1,\n  5,\n  11,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  3,\n  11,\n  6,\n  0,\n  3,\n  6,\n  0,\n  6,\n  5,\n  0,\n  5,\n  9,\n  -1,\n  -1,\n  -1,\n  -1,\n  6,\n  5,\n  9,\n  6,\n  9,\n  11,\n  11,\n  9,\n  8,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  5,\n  10,\n  6,\n  4,\n  7,\n  8,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  4,\n  3,\n  0,\n  4,\n  7,\n  3,\n  6,\n  5,\n  10,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  9,\n  0,\n  5,\n  10,\n  6,\n  8,\n  4,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  10,\n  6,\n  5,\n  1,\n  9,\n  7,\n  1,\n  7,\n  3,\n  7,\n  9,\n  4,\n  -1,\n  -1,\n  -1,\n  -1,\n  6,\n  1,\n  2,\n  6,\n  5,\n  1,\n  4,\n  7,\n  8,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  2,\n  5,\n  5,\n  2,\n  6,\n  3,\n  0,\n  4,\n  3,\n  4,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  8,\n  4,\n  7,\n  9,\n  0,\n  5,\n  0,\n  6,\n  5,\n  0,\n  2,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  7,\n  3,\n  9,\n  7,\n  9,\n  4,\n  3,\n  2,\n  9,\n  5,\n  9,\n  6,\n  2,\n  6,\n  9,\n  -1,\n  3,\n  11,\n  2,\n  7,\n  8,\n  4,\n  10,\n  6,\n  5,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  5,\n  10,\n  6,\n  4,\n  7,\n  2,\n  4,\n  2,\n  0,\n  2,\n  7,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  1,\n  9,\n  4,\n  7,\n  8,\n  2,\n  3,\n  11,\n  5,\n  10,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  2,\n  1,\n  9,\n  11,\n  2,\n  9,\n  4,\n  11,\n  7,\n  11,\n  4,\n  5,\n  10,\n  6,\n  -1,\n  8,\n  4,\n  7,\n  3,\n  11,\n  5,\n  3,\n  5,\n  1,\n  5,\n  11,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  5,\n  1,\n  11,\n  5,\n  11,\n  6,\n  1,\n  0,\n  11,\n  7,\n  11,\n  4,\n  0,\n  4,\n  11,\n  -1,\n  0,\n  5,\n  9,\n  0,\n  6,\n  5,\n  0,\n  3,\n  6,\n  11,\n  6,\n  3,\n  8,\n  4,\n  7,\n  -1,\n  6,\n  5,\n  9,\n  6,\n  9,\n  11,\n  4,\n  7,\n  9,\n  7,\n  11,\n  9,\n  -1,\n  -1,\n  -1,\n  -1,\n  10,\n  4,\n  9,\n  6,\n  4,\n  10,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  4,\n  10,\n  6,\n  4,\n  9,\n  10,\n  0,\n  8,\n  3,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  10,\n  0,\n  1,\n  10,\n  6,\n  0,\n  6,\n  4,\n  0,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  8,\n  3,\n  1,\n  8,\n  1,\n  6,\n  8,\n  6,\n  4,\n  6,\n  1,\n  10,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  4,\n  9,\n  1,\n  2,\n  4,\n  2,\n  6,\n  4,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  3,\n  0,\n  8,\n  1,\n  2,\n  9,\n  2,\n  4,\n  9,\n  2,\n  6,\n  4,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  2,\n  4,\n  4,\n  2,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  8,\n  3,\n  2,\n  8,\n  2,\n  4,\n  4,\n  2,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  10,\n  4,\n  9,\n  10,\n  6,\n  4,\n  11,\n  2,\n  3,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  8,\n  2,\n  2,\n  8,\n  11,\n  4,\n  9,\n  10,\n  4,\n  10,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  3,\n  11,\n  2,\n  0,\n  1,\n  6,\n  0,\n  6,\n  4,\n  6,\n  1,\n  10,\n  -1,\n  -1,\n  -1,\n  -1,\n  6,\n  4,\n  1,\n  6,\n  1,\n  10,\n  4,\n  8,\n  1,\n  2,\n  1,\n  11,\n  8,\n  11,\n  1,\n  -1,\n  9,\n  6,\n  4,\n  9,\n  3,\n  6,\n  9,\n  1,\n  3,\n  11,\n  6,\n  3,\n  -1,\n  -1,\n  -1,\n  -1,\n  8,\n  11,\n  1,\n  8,\n  1,\n  0,\n  11,\n  6,\n  1,\n  9,\n  1,\n  4,\n  6,\n  4,\n  1,\n  -1,\n  3,\n  11,\n  6,\n  3,\n  6,\n  0,\n  0,\n  6,\n  4,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  6,\n  4,\n  8,\n  11,\n  6,\n  8,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  7,\n  10,\n  6,\n  7,\n  8,\n  10,\n  8,\n  9,\n  10,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  7,\n  3,\n  0,\n  10,\n  7,\n  0,\n  9,\n  10,\n  6,\n  7,\n  10,\n  -1,\n  -1,\n  -1,\n  -1,\n  10,\n  6,\n  7,\n  1,\n  10,\n  7,\n  1,\n  7,\n  8,\n  1,\n  8,\n  0,\n  -1,\n  -1,\n  -1,\n  -1,\n  10,\n  6,\n  7,\n  10,\n  7,\n  1,\n  1,\n  7,\n  3,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  2,\n  6,\n  1,\n  6,\n  8,\n  1,\n  8,\n  9,\n  8,\n  6,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  2,\n  6,\n  9,\n  2,\n  9,\n  1,\n  6,\n  7,\n  9,\n  0,\n  9,\n  3,\n  7,\n  3,\n  9,\n  -1,\n  7,\n  8,\n  0,\n  7,\n  0,\n  6,\n  6,\n  0,\n  2,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  7,\n  3,\n  2,\n  6,\n  7,\n  2,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  2,\n  3,\n  11,\n  10,\n  6,\n  8,\n  10,\n  8,\n  9,\n  8,\n  6,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  2,\n  0,\n  7,\n  2,\n  7,\n  11,\n  0,\n  9,\n  7,\n  6,\n  7,\n  10,\n  9,\n  10,\n  7,\n  -1,\n  1,\n  8,\n  0,\n  1,\n  7,\n  8,\n  1,\n  10,\n  7,\n  6,\n  7,\n  10,\n  2,\n  3,\n  11,\n  -1,\n  11,\n  2,\n  1,\n  11,\n  1,\n  7,\n  10,\n  6,\n  1,\n  6,\n  7,\n  1,\n  -1,\n  -1,\n  -1,\n  -1,\n  8,\n  9,\n  6,\n  8,\n  6,\n  7,\n  9,\n  1,\n  6,\n  11,\n  6,\n  3,\n  1,\n  3,\n  6,\n  -1,\n  0,\n  9,\n  1,\n  11,\n  6,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  7,\n  8,\n  0,\n  7,\n  0,\n  6,\n  3,\n  11,\n  0,\n  11,\n  6,\n  0,\n  -1,\n  -1,\n  -1,\n  -1,\n  7,\n  11,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  7,\n  6,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  3,\n  0,\n  8,\n  11,\n  7,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  1,\n  9,\n  11,\n  7,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  8,\n  1,\n  9,\n  8,\n  3,\n  1,\n  11,\n  7,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  10,\n  1,\n  2,\n  6,\n  11,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  2,\n  10,\n  3,\n  0,\n  8,\n  6,\n  11,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  2,\n  9,\n  0,\n  2,\n  10,\n  9,\n  6,\n  11,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  6,\n  11,\n  7,\n  2,\n  10,\n  3,\n  10,\n  8,\n  3,\n  10,\n  9,\n  8,\n  -1,\n  -1,\n  -1,\n  -1,\n  7,\n  2,\n  3,\n  6,\n  2,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  7,\n  0,\n  8,\n  7,\n  6,\n  0,\n  6,\n  2,\n  0,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  2,\n  7,\n  6,\n  2,\n  3,\n  7,\n  0,\n  1,\n  9,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  6,\n  2,\n  1,\n  8,\n  6,\n  1,\n  9,\n  8,\n  8,\n  7,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  10,\n  7,\n  6,\n  10,\n  1,\n  7,\n  1,\n  3,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  10,\n  7,\n  6,\n  1,\n  7,\n  10,\n  1,\n  8,\n  7,\n  1,\n  0,\n  8,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  3,\n  7,\n  0,\n  7,\n  10,\n  0,\n  10,\n  9,\n  6,\n  10,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  7,\n  6,\n  10,\n  7,\n  10,\n  8,\n  8,\n  10,\n  9,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  6,\n  8,\n  4,\n  11,\n  8,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  3,\n  6,\n  11,\n  3,\n  0,\n  6,\n  0,\n  4,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  8,\n  6,\n  11,\n  8,\n  4,\n  6,\n  9,\n  0,\n  1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  4,\n  6,\n  9,\n  6,\n  3,\n  9,\n  3,\n  1,\n  11,\n  3,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  6,\n  8,\n  4,\n  6,\n  11,\n  8,\n  2,\n  10,\n  1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  2,\n  10,\n  3,\n  0,\n  11,\n  0,\n  6,\n  11,\n  0,\n  4,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  4,\n  11,\n  8,\n  4,\n  6,\n  11,\n  0,\n  2,\n  9,\n  2,\n  10,\n  9,\n  -1,\n  -1,\n  -1,\n  -1,\n  10,\n  9,\n  3,\n  10,\n  3,\n  2,\n  9,\n  4,\n  3,\n  11,\n  3,\n  6,\n  4,\n  6,\n  3,\n  -1,\n  8,\n  2,\n  3,\n  8,\n  4,\n  2,\n  4,\n  6,\n  2,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  4,\n  2,\n  4,\n  6,\n  2,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  9,\n  0,\n  2,\n  3,\n  4,\n  2,\n  4,\n  6,\n  4,\n  3,\n  8,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  9,\n  4,\n  1,\n  4,\n  2,\n  2,\n  4,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  8,\n  1,\n  3,\n  8,\n  6,\n  1,\n  8,\n  4,\n  6,\n  6,\n  10,\n  1,\n  -1,\n  -1,\n  -1,\n  -1,\n  10,\n  1,\n  0,\n  10,\n  0,\n  6,\n  6,\n  0,\n  4,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  4,\n  6,\n  3,\n  4,\n  3,\n  8,\n  6,\n  10,\n  3,\n  0,\n  3,\n  9,\n  10,\n  9,\n  3,\n  -1,\n  10,\n  9,\n  4,\n  6,\n  10,\n  4,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  4,\n  9,\n  5,\n  7,\n  6,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  8,\n  3,\n  4,\n  9,\n  5,\n  11,\n  7,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  5,\n  0,\n  1,\n  5,\n  4,\n  0,\n  7,\n  6,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  11,\n  7,\n  6,\n  8,\n  3,\n  4,\n  3,\n  5,\n  4,\n  3,\n  1,\n  5,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  5,\n  4,\n  10,\n  1,\n  2,\n  7,\n  6,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  6,\n  11,\n  7,\n  1,\n  2,\n  10,\n  0,\n  8,\n  3,\n  4,\n  9,\n  5,\n  -1,\n  -1,\n  -1,\n  -1,\n  7,\n  6,\n  11,\n  5,\n  4,\n  10,\n  4,\n  2,\n  10,\n  4,\n  0,\n  2,\n  -1,\n  -1,\n  -1,\n  -1,\n  3,\n  4,\n  8,\n  3,\n  5,\n  4,\n  3,\n  2,\n  5,\n  10,\n  5,\n  2,\n  11,\n  7,\n  6,\n  -1,\n  7,\n  2,\n  3,\n  7,\n  6,\n  2,\n  5,\n  4,\n  9,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  5,\n  4,\n  0,\n  8,\n  6,\n  0,\n  6,\n  2,\n  6,\n  8,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  3,\n  6,\n  2,\n  3,\n  7,\n  6,\n  1,\n  5,\n  0,\n  5,\n  4,\n  0,\n  -1,\n  -1,\n  -1,\n  -1,\n  6,\n  2,\n  8,\n  6,\n  8,\n  7,\n  2,\n  1,\n  8,\n  4,\n  8,\n  5,\n  1,\n  5,\n  8,\n  -1,\n  9,\n  5,\n  4,\n  10,\n  1,\n  6,\n  1,\n  7,\n  6,\n  1,\n  3,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  6,\n  10,\n  1,\n  7,\n  6,\n  1,\n  0,\n  7,\n  8,\n  7,\n  0,\n  9,\n  5,\n  4,\n  -1,\n  4,\n  0,\n  10,\n  4,\n  10,\n  5,\n  0,\n  3,\n  10,\n  6,\n  10,\n  7,\n  3,\n  7,\n  10,\n  -1,\n  7,\n  6,\n  10,\n  7,\n  10,\n  8,\n  5,\n  4,\n  10,\n  4,\n  8,\n  10,\n  -1,\n  -1,\n  -1,\n  -1,\n  6,\n  9,\n  5,\n  6,\n  11,\n  9,\n  11,\n  8,\n  9,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  3,\n  6,\n  11,\n  0,\n  6,\n  3,\n  0,\n  5,\n  6,\n  0,\n  9,\n  5,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  11,\n  8,\n  0,\n  5,\n  11,\n  0,\n  1,\n  5,\n  5,\n  6,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  6,\n  11,\n  3,\n  6,\n  3,\n  5,\n  5,\n  3,\n  1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  2,\n  10,\n  9,\n  5,\n  11,\n  9,\n  11,\n  8,\n  11,\n  5,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  11,\n  3,\n  0,\n  6,\n  11,\n  0,\n  9,\n  6,\n  5,\n  6,\n  9,\n  1,\n  2,\n  10,\n  -1,\n  11,\n  8,\n  5,\n  11,\n  5,\n  6,\n  8,\n  0,\n  5,\n  10,\n  5,\n  2,\n  0,\n  2,\n  5,\n  -1,\n  6,\n  11,\n  3,\n  6,\n  3,\n  5,\n  2,\n  10,\n  3,\n  10,\n  5,\n  3,\n  -1,\n  -1,\n  -1,\n  -1,\n  5,\n  8,\n  9,\n  5,\n  2,\n  8,\n  5,\n  6,\n  2,\n  3,\n  8,\n  2,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  5,\n  6,\n  9,\n  6,\n  0,\n  0,\n  6,\n  2,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  5,\n  8,\n  1,\n  8,\n  0,\n  5,\n  6,\n  8,\n  3,\n  8,\n  2,\n  6,\n  2,\n  8,\n  -1,\n  1,\n  5,\n  6,\n  2,\n  1,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  3,\n  6,\n  1,\n  6,\n  10,\n  3,\n  8,\n  6,\n  5,\n  6,\n  9,\n  8,\n  9,\n  6,\n  -1,\n  10,\n  1,\n  0,\n  10,\n  0,\n  6,\n  9,\n  5,\n  0,\n  5,\n  6,\n  0,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  3,\n  8,\n  5,\n  6,\n  10,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  10,\n  5,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  11,\n  5,\n  10,\n  7,\n  5,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  11,\n  5,\n  10,\n  11,\n  7,\n  5,\n  8,\n  3,\n  0,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  5,\n  11,\n  7,\n  5,\n  10,\n  11,\n  1,\n  9,\n  0,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  10,\n  7,\n  5,\n  10,\n  11,\n  7,\n  9,\n  8,\n  1,\n  8,\n  3,\n  1,\n  -1,\n  -1,\n  -1,\n  -1,\n  11,\n  1,\n  2,\n  11,\n  7,\n  1,\n  7,\n  5,\n  1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  8,\n  3,\n  1,\n  2,\n  7,\n  1,\n  7,\n  5,\n  7,\n  2,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  7,\n  5,\n  9,\n  2,\n  7,\n  9,\n  0,\n  2,\n  2,\n  11,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  7,\n  5,\n  2,\n  7,\n  2,\n  11,\n  5,\n  9,\n  2,\n  3,\n  2,\n  8,\n  9,\n  8,\n  2,\n  -1,\n  2,\n  5,\n  10,\n  2,\n  3,\n  5,\n  3,\n  7,\n  5,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  8,\n  2,\n  0,\n  8,\n  5,\n  2,\n  8,\n  7,\n  5,\n  10,\n  2,\n  5,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  0,\n  1,\n  5,\n  10,\n  3,\n  5,\n  3,\n  7,\n  3,\n  10,\n  2,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  8,\n  2,\n  9,\n  2,\n  1,\n  8,\n  7,\n  2,\n  10,\n  2,\n  5,\n  7,\n  5,\n  2,\n  -1,\n  1,\n  3,\n  5,\n  3,\n  7,\n  5,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  8,\n  7,\n  0,\n  7,\n  1,\n  1,\n  7,\n  5,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  0,\n  3,\n  9,\n  3,\n  5,\n  5,\n  3,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  8,\n  7,\n  5,\n  9,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  5,\n  8,\n  4,\n  5,\n  10,\n  8,\n  10,\n  11,\n  8,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  5,\n  0,\n  4,\n  5,\n  11,\n  0,\n  5,\n  10,\n  11,\n  11,\n  3,\n  0,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  1,\n  9,\n  8,\n  4,\n  10,\n  8,\n  10,\n  11,\n  10,\n  4,\n  5,\n  -1,\n  -1,\n  -1,\n  -1,\n  10,\n  11,\n  4,\n  10,\n  4,\n  5,\n  11,\n  3,\n  4,\n  9,\n  4,\n  1,\n  3,\n  1,\n  4,\n  -1,\n  2,\n  5,\n  1,\n  2,\n  8,\n  5,\n  2,\n  11,\n  8,\n  4,\n  5,\n  8,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  4,\n  11,\n  0,\n  11,\n  3,\n  4,\n  5,\n  11,\n  2,\n  11,\n  1,\n  5,\n  1,\n  11,\n  -1,\n  0,\n  2,\n  5,\n  0,\n  5,\n  9,\n  2,\n  11,\n  5,\n  4,\n  5,\n  8,\n  11,\n  8,\n  5,\n  -1,\n  9,\n  4,\n  5,\n  2,\n  11,\n  3,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  2,\n  5,\n  10,\n  3,\n  5,\n  2,\n  3,\n  4,\n  5,\n  3,\n  8,\n  4,\n  -1,\n  -1,\n  -1,\n  -1,\n  5,\n  10,\n  2,\n  5,\n  2,\n  4,\n  4,\n  2,\n  0,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  3,\n  10,\n  2,\n  3,\n  5,\n  10,\n  3,\n  8,\n  5,\n  4,\n  5,\n  8,\n  0,\n  1,\n  9,\n  -1,\n  5,\n  10,\n  2,\n  5,\n  2,\n  4,\n  1,\n  9,\n  2,\n  9,\n  4,\n  2,\n  -1,\n  -1,\n  -1,\n  -1,\n  8,\n  4,\n  5,\n  8,\n  5,\n  3,\n  3,\n  5,\n  1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  4,\n  5,\n  1,\n  0,\n  5,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  8,\n  4,\n  5,\n  8,\n  5,\n  3,\n  9,\n  0,\n  5,\n  0,\n  3,\n  5,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  4,\n  5,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  4,\n  11,\n  7,\n  4,\n  9,\n  11,\n  9,\n  10,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  8,\n  3,\n  4,\n  9,\n  7,\n  9,\n  11,\n  7,\n  9,\n  10,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  10,\n  11,\n  1,\n  11,\n  4,\n  1,\n  4,\n  0,\n  7,\n  4,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  3,\n  1,\n  4,\n  3,\n  4,\n  8,\n  1,\n  10,\n  4,\n  7,\n  4,\n  11,\n  10,\n  11,\n  4,\n  -1,\n  4,\n  11,\n  7,\n  9,\n  11,\n  4,\n  9,\n  2,\n  11,\n  9,\n  1,\n  2,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  7,\n  4,\n  9,\n  11,\n  7,\n  9,\n  1,\n  11,\n  2,\n  11,\n  1,\n  0,\n  8,\n  3,\n  -1,\n  11,\n  7,\n  4,\n  11,\n  4,\n  2,\n  2,\n  4,\n  0,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  11,\n  7,\n  4,\n  11,\n  4,\n  2,\n  8,\n  3,\n  4,\n  3,\n  2,\n  4,\n  -1,\n  -1,\n  -1,\n  -1,\n  2,\n  9,\n  10,\n  2,\n  7,\n  9,\n  2,\n  3,\n  7,\n  7,\n  4,\n  9,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  10,\n  7,\n  9,\n  7,\n  4,\n  10,\n  2,\n  7,\n  8,\n  7,\n  0,\n  2,\n  0,\n  7,\n  -1,\n  3,\n  7,\n  10,\n  3,\n  10,\n  2,\n  7,\n  4,\n  10,\n  1,\n  10,\n  0,\n  4,\n  0,\n  10,\n  -1,\n  1,\n  10,\n  2,\n  8,\n  7,\n  4,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  4,\n  9,\n  1,\n  4,\n  1,\n  7,\n  7,\n  1,\n  3,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  4,\n  9,\n  1,\n  4,\n  1,\n  7,\n  0,\n  8,\n  1,\n  8,\n  7,\n  1,\n  -1,\n  -1,\n  -1,\n  -1,\n  4,\n  0,\n  3,\n  7,\n  4,\n  3,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  4,\n  8,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  10,\n  8,\n  10,\n  11,\n  8,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  3,\n  0,\n  9,\n  3,\n  9,\n  11,\n  11,\n  9,\n  10,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  1,\n  10,\n  0,\n  10,\n  8,\n  8,\n  10,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  3,\n  1,\n  10,\n  11,\n  3,\n  10,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  2,\n  11,\n  1,\n  11,\n  9,\n  9,\n  11,\n  8,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  3,\n  0,\n  9,\n  3,\n  9,\n  11,\n  1,\n  2,\n  9,\n  2,\n  11,\n  9,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  2,\n  11,\n  8,\n  0,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  3,\n  2,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  2,\n  3,\n  8,\n  2,\n  8,\n  10,\n  10,\n  8,\n  9,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  10,\n  2,\n  0,\n  9,\n  2,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  2,\n  3,\n  8,\n  2,\n  8,\n  10,\n  0,\n  1,\n  8,\n  1,\n  10,\n  8,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  10,\n  2,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  3,\n  8,\n  9,\n  1,\n  8,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  9,\n  1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  3,\n  8,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1\n]);\nexport {\n  MarchingCubes,\n  edgeTable,\n  triTable\n};\n"]},"metadata":{},"sourceType":"module"}