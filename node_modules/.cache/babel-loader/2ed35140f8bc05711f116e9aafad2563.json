{"ast":null,"code":"import { Vector3 } from \"three\";\n\nvar hilbert2D = function hilbert2D() {\n  var center = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector3(0, 0, 0);\n  var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n  var iterations = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var v0 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  var v1 = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n  var v2 = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 2;\n  var v3 = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 3;\n  var half = size / 2;\n  var vec_s = [new Vector3(center.x - half, center.y, center.z - half), new Vector3(center.x - half, center.y, center.z + half), new Vector3(center.x + half, center.y, center.z + half), new Vector3(center.x + half, center.y, center.z - half)];\n  var vec = [vec_s[v0], vec_s[v1], vec_s[v2], vec_s[v3]];\n\n  if (0 <= --iterations) {\n    var tmp = [];\n    Array.prototype.push.apply(tmp, hilbert2D(vec[0], half, iterations, v0, v3, v2, v1));\n    Array.prototype.push.apply(tmp, hilbert2D(vec[1], half, iterations, v0, v1, v2, v3));\n    Array.prototype.push.apply(tmp, hilbert2D(vec[2], half, iterations, v0, v1, v2, v3));\n    Array.prototype.push.apply(tmp, hilbert2D(vec[3], half, iterations, v2, v1, v0, v3));\n    return tmp;\n  }\n\n  return vec;\n};\n\nvar hilbert3D = function hilbert3D() {\n  var center = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector3(0, 0, 0);\n  var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n  var iterations = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var v0 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  var v1 = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n  var v2 = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 2;\n  var v3 = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 3;\n  var v4 = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 4;\n  var v5 = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : 5;\n  var v6 = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : 6;\n  var v7 = arguments.length > 10 && arguments[10] !== undefined ? arguments[10] : 7;\n  var half = size / 2;\n  var vec_s = [new Vector3(center.x - half, center.y + half, center.z - half), new Vector3(center.x - half, center.y + half, center.z + half), new Vector3(center.x - half, center.y - half, center.z + half), new Vector3(center.x - half, center.y - half, center.z - half), new Vector3(center.x + half, center.y - half, center.z - half), new Vector3(center.x + half, center.y - half, center.z + half), new Vector3(center.x + half, center.y + half, center.z + half), new Vector3(center.x + half, center.y + half, center.z - half)];\n  var vec = [vec_s[v0], vec_s[v1], vec_s[v2], vec_s[v3], vec_s[v4], vec_s[v5], vec_s[v6], vec_s[v7]];\n\n  if (--iterations >= 0) {\n    var tmp = [];\n    Array.prototype.push.apply(tmp, hilbert3D(vec[0], half, iterations, v0, v3, v4, v7, v6, v5, v2, v1));\n    Array.prototype.push.apply(tmp, hilbert3D(vec[1], half, iterations, v0, v7, v6, v1, v2, v5, v4, v3));\n    Array.prototype.push.apply(tmp, hilbert3D(vec[2], half, iterations, v0, v7, v6, v1, v2, v5, v4, v3));\n    Array.prototype.push.apply(tmp, hilbert3D(vec[3], half, iterations, v2, v3, v0, v1, v6, v7, v4, v5));\n    Array.prototype.push.apply(tmp, hilbert3D(vec[4], half, iterations, v2, v3, v0, v1, v6, v7, v4, v5));\n    Array.prototype.push.apply(tmp, hilbert3D(vec[5], half, iterations, v4, v3, v2, v5, v6, v1, v0, v7));\n    Array.prototype.push.apply(tmp, hilbert3D(vec[6], half, iterations, v4, v3, v2, v5, v6, v1, v0, v7));\n    Array.prototype.push.apply(tmp, hilbert3D(vec[7], half, iterations, v6, v5, v2, v1, v0, v3, v4, v7));\n    return tmp;\n  }\n\n  return vec;\n};\n\nvar gosper = function gosper() {\n  var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n  function fractalize(config) {\n    var output = \"\";\n    var input = config.axiom;\n\n    for (var i = 0, il = config.steps; 0 <= il ? i < il : i > il; 0 <= il ? i++ : i--) {\n      output = \"\";\n\n      for (var j = 0, jl = input.length; j < jl; j++) {\n        var char = input[j];\n\n        if (char in config.rules) {\n          output += config.rules[char];\n        } else {\n          output += char;\n        }\n      }\n\n      input = output;\n    }\n\n    return output;\n  }\n\n  function toPoints(config) {\n    var currX = 0;\n    var currY = 0;\n    var angle = 0;\n    var path = [0, 0, 0];\n    var fractal = config.fractal;\n\n    for (var i = 0, l = fractal.length; i < l; i++) {\n      var char = fractal[i];\n\n      if (char === \"+\") {\n        angle += config.angle;\n      } else if (char === \"-\") {\n        angle -= config.angle;\n      } else if (char === \"F\") {\n        currX += config.size * Math.cos(angle);\n        currY += -config.size * Math.sin(angle);\n        path.push(currX, currY, 0);\n      }\n    }\n\n    return path;\n  }\n\n  var gosper2 = fractalize({\n    axiom: \"A\",\n    steps: 4,\n    rules: {\n      A: \"A+BF++BF-FA--FAFA-BF+\",\n      B: \"-FA+BFBF++BF+FA--FA-B\"\n    }\n  });\n  var points = toPoints({\n    fractal: gosper2,\n    size: size,\n    angle: Math.PI / 3 // 60 degrees\n\n  });\n  return points;\n};\n\nvar GeometryUtils = {\n  hilbert3D: hilbert3D,\n  gosper: gosper,\n  hilbert2D: hilbert2D\n};\nexport { GeometryUtils };","map":{"version":3,"sources":["/Users/theodaguier/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/three-stdlib/utils/GeometryUtils.js"],"names":["Vector3","hilbert2D","center","size","iterations","v0","v1","v2","v3","half","vec_s","x","y","z","vec","tmp","Array","prototype","push","apply","hilbert3D","v4","v5","v6","v7","gosper","fractalize","config","output","input","axiom","i","il","steps","j","jl","length","char","rules","toPoints","currX","currY","angle","path","fractal","l","Math","cos","sin","gosper2","A","B","points","PI","GeometryUtils"],"mappings":"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","sourcesContent":["import { Vector3 } from \"three\";\nconst hilbert2D = (center = new Vector3(0, 0, 0), size = 10, iterations = 1, v0 = 0, v1 = 1, v2 = 2, v3 = 3) => {\n  const half = size / 2;\n  const vec_s = [\n    new Vector3(center.x - half, center.y, center.z - half),\n    new Vector3(center.x - half, center.y, center.z + half),\n    new Vector3(center.x + half, center.y, center.z + half),\n    new Vector3(center.x + half, center.y, center.z - half)\n  ];\n  const vec = [vec_s[v0], vec_s[v1], vec_s[v2], vec_s[v3]];\n  if (0 <= --iterations) {\n    const tmp = [];\n    Array.prototype.push.apply(tmp, hilbert2D(vec[0], half, iterations, v0, v3, v2, v1));\n    Array.prototype.push.apply(tmp, hilbert2D(vec[1], half, iterations, v0, v1, v2, v3));\n    Array.prototype.push.apply(tmp, hilbert2D(vec[2], half, iterations, v0, v1, v2, v3));\n    Array.prototype.push.apply(tmp, hilbert2D(vec[3], half, iterations, v2, v1, v0, v3));\n    return tmp;\n  }\n  return vec;\n};\nconst hilbert3D = (center = new Vector3(0, 0, 0), size = 10, iterations = 1, v0 = 0, v1 = 1, v2 = 2, v3 = 3, v4 = 4, v5 = 5, v6 = 6, v7 = 7) => {\n  const half = size / 2;\n  const vec_s = [\n    new Vector3(center.x - half, center.y + half, center.z - half),\n    new Vector3(center.x - half, center.y + half, center.z + half),\n    new Vector3(center.x - half, center.y - half, center.z + half),\n    new Vector3(center.x - half, center.y - half, center.z - half),\n    new Vector3(center.x + half, center.y - half, center.z - half),\n    new Vector3(center.x + half, center.y - half, center.z + half),\n    new Vector3(center.x + half, center.y + half, center.z + half),\n    new Vector3(center.x + half, center.y + half, center.z - half)\n  ];\n  const vec = [vec_s[v0], vec_s[v1], vec_s[v2], vec_s[v3], vec_s[v4], vec_s[v5], vec_s[v6], vec_s[v7]];\n  if (--iterations >= 0) {\n    const tmp = [];\n    Array.prototype.push.apply(tmp, hilbert3D(vec[0], half, iterations, v0, v3, v4, v7, v6, v5, v2, v1));\n    Array.prototype.push.apply(tmp, hilbert3D(vec[1], half, iterations, v0, v7, v6, v1, v2, v5, v4, v3));\n    Array.prototype.push.apply(tmp, hilbert3D(vec[2], half, iterations, v0, v7, v6, v1, v2, v5, v4, v3));\n    Array.prototype.push.apply(tmp, hilbert3D(vec[3], half, iterations, v2, v3, v0, v1, v6, v7, v4, v5));\n    Array.prototype.push.apply(tmp, hilbert3D(vec[4], half, iterations, v2, v3, v0, v1, v6, v7, v4, v5));\n    Array.prototype.push.apply(tmp, hilbert3D(vec[5], half, iterations, v4, v3, v2, v5, v6, v1, v0, v7));\n    Array.prototype.push.apply(tmp, hilbert3D(vec[6], half, iterations, v4, v3, v2, v5, v6, v1, v0, v7));\n    Array.prototype.push.apply(tmp, hilbert3D(vec[7], half, iterations, v6, v5, v2, v1, v0, v3, v4, v7));\n    return tmp;\n  }\n  return vec;\n};\nconst gosper = (size = 1) => {\n  function fractalize(config) {\n    let output = \"\";\n    let input = config.axiom;\n    for (let i = 0, il = config.steps; 0 <= il ? i < il : i > il; 0 <= il ? i++ : i--) {\n      output = \"\";\n      for (let j = 0, jl = input.length; j < jl; j++) {\n        const char = input[j];\n        if (char in config.rules) {\n          output += config.rules[char];\n        } else {\n          output += char;\n        }\n      }\n      input = output;\n    }\n    return output;\n  }\n  function toPoints(config) {\n    let currX = 0;\n    let currY = 0;\n    let angle = 0;\n    const path = [0, 0, 0];\n    const fractal = config.fractal;\n    for (let i = 0, l = fractal.length; i < l; i++) {\n      const char = fractal[i];\n      if (char === \"+\") {\n        angle += config.angle;\n      } else if (char === \"-\") {\n        angle -= config.angle;\n      } else if (char === \"F\") {\n        currX += config.size * Math.cos(angle);\n        currY += -config.size * Math.sin(angle);\n        path.push(currX, currY, 0);\n      }\n    }\n    return path;\n  }\n  const gosper2 = fractalize({\n    axiom: \"A\",\n    steps: 4,\n    rules: {\n      A: \"A+BF++BF-FA--FAFA-BF+\",\n      B: \"-FA+BFBF++BF+FA--FA-B\"\n    }\n  });\n  const points = toPoints({\n    fractal: gosper2,\n    size,\n    angle: Math.PI / 3\n    // 60 degrees\n  });\n  return points;\n};\nconst GeometryUtils = {\n  hilbert3D,\n  gosper,\n  hilbert2D\n};\nexport {\n  GeometryUtils\n};\n"]},"metadata":{},"sourceType":"module"}