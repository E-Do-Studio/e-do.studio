{"ast":null,"code":"import { Color } from \"three\";\nvar LuminosityHighPassShader = {\n  shaderID: \"luminosityHighPass\",\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    luminosityThreshold: {\n      value: 1\n    },\n    smoothWidth: {\n      value: 1\n    },\n    defaultColor: {\n      value: /* @__PURE__ */new Color(0)\n    },\n    defaultOpacity: {\n      value: 0\n    }\n  },\n  vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"\tvUv = uv;\", \"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n  fragmentShader: [\"uniform sampler2D tDiffuse;\", \"uniform vec3 defaultColor;\", \"uniform float defaultOpacity;\", \"uniform float luminosityThreshold;\", \"uniform float smoothWidth;\", \"varying vec2 vUv;\", \"void main() {\", \"\tvec4 texel = texture2D( tDiffuse, vUv );\", \"\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\", \"\tfloat v = dot( texel.xyz, luma );\", \"\tvec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );\", \"\tfloat alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );\", \"\tgl_FragColor = mix( outputColor, texel, alpha );\", \"}\"].join(\"\\n\")\n};\nexport { LuminosityHighPassShader };","map":{"version":3,"sources":["/Users/theodaguier/_dev/pro/e-do/website/old/E-Do-Studio/node_modules/three-stdlib/shaders/LuminosityHighPassShader.js"],"names":["Color","LuminosityHighPassShader","shaderID","uniforms","tDiffuse","value","luminosityThreshold","smoothWidth","defaultColor","defaultOpacity","vertexShader","join","fragmentShader"],"mappings":"AAAA,SAASA,KAAT,QAAsB,OAAtB;AACA,IAAMC,wBAAwB,GAAG;AAC/BC,EAAAA,QAAQ,EAAE,oBADqB;AAE/BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KADF;AAERC,IAAAA,mBAAmB,EAAE;AAAED,MAAAA,KAAK,EAAE;AAAT,KAFb;AAGRE,IAAAA,WAAW,EAAE;AAAEF,MAAAA,KAAK,EAAE;AAAT,KAHL;AAIRG,IAAAA,YAAY,EAAE;AAAEH,MAAAA,KAAK,EAAE,eAAgB,IAAIL,KAAJ,CAAU,CAAV;AAAzB,KAJN;AAKRS,IAAAA,cAAc,EAAE;AAAEJ,MAAAA,KAAK,EAAE;AAAT;AALR,GAFqB;AAS/BK,EAAAA,YAAY,EAAE,CACZ,mBADY,EAEZ,eAFY,EAGZ,YAHY,EAIZ,4EAJY,EAKZ,GALY,EAMZC,IANY,CAMP,IANO,CATiB;AAgB/BC,EAAAA,cAAc,EAAE,CACd,6BADc,EAEd,4BAFc,EAGd,+BAHc,EAId,oCAJc,EAKd,4BALc,EAMd,mBANc,EAOd,eAPc,EAQd,2CARc,EASd,2CATc,EAUd,oCAVc,EAWd,+DAXc,EAYd,yFAZc,EAad,mDAbc,EAcd,GAdc,EAedD,IAfc,CAeT,IAfS;AAhBe,CAAjC;AAiCA,SACEV,wBADF","sourcesContent":["import { Color } from \"three\";\nconst LuminosityHighPassShader = {\n  shaderID: \"luminosityHighPass\",\n  uniforms: {\n    tDiffuse: { value: null },\n    luminosityThreshold: { value: 1 },\n    smoothWidth: { value: 1 },\n    defaultColor: { value: /* @__PURE__ */ new Color(0) },\n    defaultOpacity: { value: 0 }\n  },\n  vertexShader: [\n    \"varying vec2 vUv;\",\n    \"void main() {\",\n    \"\tvUv = uv;\",\n    \"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n    \"}\"\n  ].join(\"\\n\"),\n  fragmentShader: [\n    \"uniform sampler2D tDiffuse;\",\n    \"uniform vec3 defaultColor;\",\n    \"uniform float defaultOpacity;\",\n    \"uniform float luminosityThreshold;\",\n    \"uniform float smoothWidth;\",\n    \"varying vec2 vUv;\",\n    \"void main() {\",\n    \"\tvec4 texel = texture2D( tDiffuse, vUv );\",\n    \"\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\",\n    \"\tfloat v = dot( texel.xyz, luma );\",\n    \"\tvec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );\",\n    \"\tfloat alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );\",\n    \"\tgl_FragColor = mix( outputColor, texel, alpha );\",\n    \"}\"\n  ].join(\"\\n\")\n};\nexport {\n  LuminosityHighPassShader\n};\n"]},"metadata":{},"sourceType":"module"}