{"ast":null,"code":"var BrightnessContrastShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    brightness: {\n      value: 0\n    },\n    contrast: {\n      value: 0\n    }\n  },\n  vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"\tvUv = uv;\", \"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n  fragmentShader: [\"uniform sampler2D tDiffuse;\", \"uniform float brightness;\", \"uniform float contrast;\", \"varying vec2 vUv;\", \"void main() {\", \"\tgl_FragColor = texture2D( tDiffuse, vUv );\", \"\tgl_FragColor.rgb += brightness;\", \"\tif (contrast > 0.0) {\", \"\t\tgl_FragColor.rgb = (gl_FragColor.rgb - 0.5) / (1.0 - contrast) + 0.5;\", \"\t} else {\", \"\t\tgl_FragColor.rgb = (gl_FragColor.rgb - 0.5) * (1.0 + contrast) + 0.5;\", \"\t}\", \"}\"].join(\"\\n\")\n};\nexport { BrightnessContrastShader };","map":{"version":3,"sources":["/Users/theodaguier/Repositories/E-Do-Studio/node_modules/three-stdlib/shaders/BrightnessContrastShader.js"],"names":["BrightnessContrastShader","uniforms","tDiffuse","value","brightness","contrast","vertexShader","join","fragmentShader"],"mappings":"AAAA,IAAMA,wBAAwB,GAAG;AAC/BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KADF;AAERC,IAAAA,UAAU,EAAE;AAAED,MAAAA,KAAK,EAAE;AAAT,KAFJ;AAGRE,IAAAA,QAAQ,EAAE;AAAEF,MAAAA,KAAK,EAAE;AAAT;AAHF,GADqB;AAM/BG,EAAAA,YAAY,EAAE,CACZ,mBADY,EAEZ,eAFY,EAGZ,YAHY,EAIZ,4EAJY,EAKZ,GALY,EAMZC,IANY,CAMP,IANO,CANiB;AAa/BC,EAAAA,cAAc,EAAE,CACd,6BADc,EAEd,2BAFc,EAGd,yBAHc,EAId,mBAJc,EAKd,eALc,EAMd,6CANc,EAOd,kCAPc,EAQd,wBARc,EASd,yEATc,EAUd,WAVc,EAWd,yEAXc,EAYd,IAZc,EAad,GAbc,EAcdD,IAdc,CAcT,IAdS;AAbe,CAAjC;AA6BA,SACEP,wBADF","sourcesContent":["const BrightnessContrastShader = {\n  uniforms: {\n    tDiffuse: { value: null },\n    brightness: { value: 0 },\n    contrast: { value: 0 }\n  },\n  vertexShader: [\n    \"varying vec2 vUv;\",\n    \"void main() {\",\n    \"\tvUv = uv;\",\n    \"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n    \"}\"\n  ].join(\"\\n\"),\n  fragmentShader: [\n    \"uniform sampler2D tDiffuse;\",\n    \"uniform float brightness;\",\n    \"uniform float contrast;\",\n    \"varying vec2 vUv;\",\n    \"void main() {\",\n    \"\tgl_FragColor = texture2D( tDiffuse, vUv );\",\n    \"\tgl_FragColor.rgb += brightness;\",\n    \"\tif (contrast > 0.0) {\",\n    \"\t\tgl_FragColor.rgb = (gl_FragColor.rgb - 0.5) / (1.0 - contrast) + 0.5;\",\n    \"\t} else {\",\n    \"\t\tgl_FragColor.rgb = (gl_FragColor.rgb - 0.5) * (1.0 + contrast) + 0.5;\",\n    \"\t}\",\n    \"}\"\n  ].join(\"\\n\")\n};\nexport {\n  BrightnessContrastShader\n};\n"]},"metadata":{},"sourceType":"module"}